[
  {
    "body" : "### Fixes\r\n\r\n- Work around a nondeterministic build issue that triggered a compiler crash on some machines (#56)\r\n- Basic support for building on OpenBSD (#52)\r\n- Building the package with COLLECTIONS_INTERNAL_CHECKS no longer fails (#53)\r\n\r\n### Pull requests \r\n\r\n- #52: Changes to support OpenBSD (by @3405691582)\r\n- #53: Update invalid OrderedDictionary invariant check (by @vihanb)\r\n- #55: Fixing a small typo on quick help docs (by @rkreutz)\r\n- #54: Mark OrderedSetDiffingTests with availability (by @amonshiz)\r\n- #60: [CMake] Update config to prepare for SwiftPM adoption (by @lorentey)\r\n- #62: Work around another MergeModules crash (by @lorentey)\r\n- #63: [test] `checkCollection`: Don’t pass decreasing indices to `distance(from:to:)` (by @lorentey)\r\n\r\nThank you to everyone who contributed to this release! Your bug reports, discussions and pull requests all help improve this package.",
    "createdAt" : "2021-07-09T10:48:48+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTQ1OTQxNzM1",
    "owner" : "apple",
    "publishedAt" : "2021-07-09T10:54:02+09:00",
    "repository" : "swift-collections",
    "title" : "Swift Collections 0.0.4",
    "url" : "https://github.com/apple/swift-collections/releases/tag/0.0.4",
    "version" : "0.0.4"
  },
  {
    "body" : "This release consists of an update to the CMake config that is used during non-bootstrapped builds of the Swift toolchain. It contains no changes for package-based projects.\r\n\r\n### Pull requests \r\n\r\n- #64: Add arm64 support to CMake build (by @neonichu)\r\n\r\nThank you to everyone who contributed to this release! Your bug reports, discussions and pull requests all help improve this package.",
    "createdAt" : "2021-07-30T11:57:47+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTQ3MDE5MTE1",
    "owner" : "apple",
    "publishedAt" : "2021-07-30T12:10:00+09:00",
    "repository" : "swift-collections",
    "title" : "Swift Collections 0.0.5",
    "url" : "https://github.com/apple/swift-collections/releases/tag/0.0.5",
    "version" : "0.0.5"
  },
  {
    "body" : "This release prepares for source stability by deprecating some OrderedDictionary APIs that we'd like to remove in version 1.0 of the package. (All deprecated names have reasonable replacements.)\r\n\r\n### Changes\r\n\r\n- The two `OrderedDictionary.modifyValue` methods were renamed `updateValue`, to better align with the standard `updateValue` function (#90)\r\n    ```swift\r\n    /* Old: */ d.modifyValue(forKey: key,  default: []) { $0.append(newValue) }\r\n    /* New: */ d.updateValue(forKey: key,  default: []) { $0.append(newValue) }\r\n\r\n    /* Old: */ d.modifyValue(forKey: key,  insertingDefault: [], at: 0) { $0.append(newValue) }\r\n    /* New: */ d.updateValue(forKey: key,  insertingDefault: [], at: 0) { $0.append(newValue) }\r\n    ```\r\n- `OrderedDictionary.subscript(offset:)` was removed; it used inconsistent terminology. To access a key-value pair at a given position, you can continue using the unlabeled subscript on the `elements` view.\r\n\r\n    ```swift\r\n    /*  Deprecated: */ d[offset: 42]\r\n    /* Replacement: */ d.element[42]\r\n    ```\r\n- The collections benchmarks were moved to a standalone nested package in a subdirectory of the repository, allowing the top-level package manifest to stop declaring a dependency on [swift-collections-benchmark](https://github.com/apple/swift-collections-benchmark). This will make it easier to add Swift Collections as a dependency, especially in projects such as the Package Manager (or the benchmarking tool itself).\r\n\r\nThe old names for removed/renamed APIs are still available as deprecated members -- these will be removed in the 1.0 release. \r\n\r\n### Pull requests\r\n\r\n- #81 Fix typos: missing subscript parameters (by @ejmarchant)\r\n- #82 Fix documentation for types conforming to ExpressibleByArrayLiteral or ExpressibleByDictionaryLiteral (by @ejmarchant)\r\n- #86 Stop depending on swift-collections-benchmark (by @lorentey)\r\n- #91 [OrderedDictionary] modifyValue → updateValue (by @lorentey)\r\n- #93 Add Benchmarks package to workspace (by @lorentey)\r\n- #92 [OrderedDictionary] Deprecate `subscript(offset:)` for now (by @lorentey)\r\n\r\nThank you to everyone who contributed to this release! Your bug reports, discussions and pull requests all help improve this package.",
    "createdAt" : "2021-08-20T11:26:41+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTQ4MTk5ODUx",
    "owner" : "apple",
    "publishedAt" : "2021-08-21T03:52:06+09:00",
    "repository" : "swift-collections",
    "title" : "Swift Collections 0.0.7",
    "url" : "https://github.com/apple/swift-collections/releases/tag/0.0.7",
    "version" : "0.0.7"
  },
  {
    "body" : "This is the initial release.",
    "createdAt" : "2021-04-06T01:41:00+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTQwOTYyNTI5",
    "owner" : "apple",
    "publishedAt" : "2021-04-06T05:41:14+09:00",
    "repository" : "swift-collections",
    "title" : "Swift Collections 0.0.1",
    "url" : "https://github.com/apple/swift-collections/releases/tag/0.0.1",
    "version" : "0.0.1"
  },
  {
    "body" : "### Additions\r\n\r\n- `OrderedSet` now implements an efficient, linear time diffing algorithm, like Foundation's `NSOrderedSet` and SwiftUI's `List`. (https://github.com/apple/swift-collections/pull/6)\r\n\r\n### Fixes\r\n\r\n- We've worked around a nondeterministic build issue that triggered a compiler crash on a minority of machines. (https://github.com/apple/swift-collections/issues/7)\r\n\r\n### Pull requests\r\n\r\n(You can also find a full list of issues resolved and PRs merged in this release by looking at the [0.0.2 milestone](https://github.com/apple/swift-collections/issues?q=milestone%3A0.0.2).)\r\n\r\n* #6: Efficient diffing for OrderedSet (by @numist)\r\n* #8: Fixes link to combinatorics. (by @powerje)\r\n* #9: Minor doc fix (by @byaruhaf)\r\n* #12: Remove outdated passage in OrderedSet.init(minimumCapacity:persistent:) docs (by @lorentey)\r\n* #14: Correct typo for address sanitizer (by @toddpress)\r\n* #15: Update Package.resolved with swift-collections-benchmark package (by @Sajjon)\r\n* #16: Update Xcode schemes for the package (by @lorentey)\r\n* #18: Fix nondeterministic compiler crash in debug builds (by @lorentey)\r\n\r\nThank you to everyone who contributed to this release! Your bug reports, discussions and pull requests all help improve this package.\r\n",
    "createdAt" : "2021-04-10T16:17:50+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTQxMjI3ODM2",
    "owner" : "apple",
    "publishedAt" : "2021-04-11T04:49:46+09:00",
    "repository" : "swift-collections",
    "title" : "Swift Collections 0.0.2",
    "url" : "https://github.com/apple/swift-collections/releases/tag/0.0.2",
    "version" : "0.0.2"
  },
  {
    "body" : "### Fixes\r\n\r\n- The repository no longer contains files with invalid names on Windows (#33)\r\n- `Deque.append(contentsOf:)`, `.prepend(contentsOf:)` and the sequence-based initializer no longer crash when given an array instance bridged from Objective-C. (#27)\r\n- `OrderedSet.insert` is now marked `@discardableResult`. (#19)\r\n- The benchmark executable is no longer exposed as a public package product. (#28)\r\n\r\n### Pull requests\r\n\r\n(You can also find a full list of issues resolved and PRs merged in this release by looking at the [0.0.3 milestone](https://github.com/apple/swift-collections/issues?q=milestone%3A0.0.3).)\r\n\r\n* #10: [meta] Update links in PR templates (by @lorentey)\r\n* #13: Add Package.resolved to .gitignore (by @maniramezan)\r\n* #21: Add the @discardableResult attribute to OrderedSet.insert(_:at:) (by @kielgillard)\r\n* #23: Fix CollectionTestCase calling super's setup on tearDown issue (by @abintom)\r\n* #25: Update to swift-collections-benchmark 0.0.2 (by @lorentey)\r\n* #26: [OrderedDictionary] Document encoding format (by @lorentey)\r\n* #28: [OrderedCollections] Correct spelling of BitsetTests filename (by @msteindorfer)\r\n* #32: Replace Index with Int where possible (by @Frizlab)\r\n* #34: Documentation: remove invalid file characters (by @compnerd)\r\n* #36: Remove the benchmark product from the package manifest (by @lorentey)\r\n* #40: Add Xcode template file with license comment. (by @vihanb)\r\n* #41: git: ignore vim swap files (by @compnerd)\r\n* #42: build: add a CMake based build system (by @compnerd)\r\n* #44: [Deque] Work around stdlib issue with Array.withContiguousStorageIfAvailable (by @lorentey)\r\n* #47: [manifest] Ignore CMake files (by @lorentey)\r\n* #48: [meta] Update dependencies (by @lorentey)\r\n* #49: [Deque][NFC] Remove unused code (by @lorentey)\r\n\r\nThank you to everyone who contributed to this release! Your bug reports, discussions and pull requests all help improve this package.\r\n",
    "createdAt" : "2021-05-28T12:08:42+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTQzNzQwOTUx",
    "owner" : "apple",
    "publishedAt" : "2021-05-28T12:35:05+09:00",
    "repository" : "swift-collections",
    "title" : "Swift Collections 0.0.3",
    "url" : "https://github.com/apple/swift-collections/releases/tag/0.0.3",
    "version" : "0.0.3"
  },
  {
    "body" : "### Changes\r\n\r\n- The CMake configuration now supports building the package for AArch64 Linux distributions, unblocking adoption in SPM. \r\n\r\n    (Note that the CMake configuration is intended only to support the use of this package from within Swift toolchain builds. It is provided as is, with no source compatibility guarantees.)\r\n\r\n- Minor documentation updates.\r\n\r\n### Pull requests\r\n\r\n- #111 [CMake] Match lowercase \"aarch64\" (by @neonichu)\r\n- #112 [OrderedSet][doc] Fix thinko (by @lorentey)\r\n\r\nThank you to everyone who contributed to this release! Your bug reports, discussions and pull requests all help improve this package.",
    "createdAt" : "2021-09-15T04:05:08+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "RE_kwDOFDfRzs4C-h6s",
    "owner" : "apple",
    "publishedAt" : "2021-09-21T08:09:21+09:00",
    "repository" : "swift-collections",
    "title" : "Swift Collections 1.0.1",
    "url" : "https://github.com/apple/swift-collections/releases/tag/1.0.1",
    "version" : "1.0.1"
  },
  {
    "body" : "This release marks an important milestone for this package -- the advent of source stability!\r\n\r\n### Changes\r\n\r\n- The public API of Swift Collections is now considered source stable. The README defines what we consider public API.\r\n- The three `OrderedDictionary` methods that were deprecated in 0.0.7 are now marked unavailable.\r\n- `OrderedDictionary.init(uncheckedUniqueElements:)` no longer creates large dictionary instances without an associated hash table.\r\n\r\n### Pull requests\r\n\r\n- #95 Follow stdlib's leading underscore rule (by @ejmarchant)\r\n- #96 Documentation: Remove in-place mutation comments (by @ejmarchant)\r\n- #97 Freeze some types for consistency with their inlinable initializers (by @lorentey)\r\n- #102 1.0 release preparations (by @lorentey)\r\n- #106 [OrderedSet] Make _checkInvariants public and call it in more operations (by @lorentey)\r\n- #107 [OrderedSet] Don't let the unchecked init create large sets with no hash table (by @lorentey)\r\n- #110 [run-full-tests.sh] Fix bashism: == vs = (by @lorentey)\r\n\r\nThank you to everyone who contributed to this release! Your bug reports, discussions and pull requests all help improve this package.",
    "createdAt" : "2021-09-11T06:10:14+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "RE_kwDOFDfRzs4C8IKd",
    "owner" : "apple",
    "publishedAt" : "2021-09-11T07:10:24+09:00",
    "repository" : "swift-collections",
    "title" : "Swift Collections 1.0.0",
    "url" : "https://github.com/apple/swift-collections/releases/tag/1.0.0",
    "version" : "1.0.0"
  },
  {
    "body" : "This release resolves issues uncovered since 1.0.1 was tagged, including a high severity crash in `OrderedSet` and `OrderedDictionary`. Upgrading is recommended for all clients.\r\n\r\n### Fixes\r\n\r\n- Fixed a value semantic violation in `OrderedSet` and `OrderedDictionary` that could result in some mutation methods corrupting shared copies of the same value, leading to subsequent crashes. (Issue #104)\r\n- `Deque.append(contentsOf:)` now uses an exponential storage resizing strategy, as expected. Calling it in a loop no longer results in O(n) reallocations. (Issue #113)\r\n\r\n### Pull requests\r\n\r\n- #113 [Deque] append(contentsOf:): Use exponential capacity reservation (by @lorentey)\r\n- #123 [OrderedSet] Add missing uniqueness check (by @lorentey)\r\n- #126 [Utils] run-full-tests.sh: Keep going after a failure (by @lorentey)\r\n- #128 [Utils] run-full-tests.sh: Add support for testing on Swift 5.3 without manual editing (by @lorentey)\r\n\r\nThank you to everyone who contributed to this release! Your bug reports, discussions and pull requests all help improve this package.",
    "createdAt" : "2021-11-16T09:15:59+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "RE_kwDOFDfRzs4DL1Ie",
    "owner" : "apple",
    "publishedAt" : "2021-11-16T09:59:32+09:00",
    "repository" : "swift-collections",
    "title" : "Swift Collections 1.0.2",
    "url" : "https://github.com/apple/swift-collections/releases/tag/1.0.2",
    "version" : "1.0.2"
  },
  {
    "body" : "This release resolves issues uncovered since 1.0.2 was tagged. The fixes improve performance of some operations, resolve compile-time issues and update documentation. This release contains no observable behavioral changes.\r\n\r\n### Changes\r\n\r\n- [Clutter] When opened in Xcode, the package no longer adds spurious schemes to dependent projects. (#155)\r\n\r\n### Fixes\r\n\r\n- [Build-time issue] Code that is calling `OrderedDictionary`'s uniquing/unique/grouping initializers and merge operations no longer gets flagged as ambiguous in certain cases involving type inference. (#125, #139)\r\n- [Build-time issue] The package no longer fails to build when library evolution is enabled. (#157) (Note: this configuration remains unsupported. This package does not provide any guarantees about ABI stability.)\r\n- [Performance] In-place mutations of collection contents no longer result in unnecessary heap allocations. (#164)\r\n- [Performance] On Swift 5.6 and better, some operations in the `OrderedCollections` module now make use of the stdlib's [temporary allocation facility](https://github.com/apple/swift-evolution/blob/main/proposals/0322-temporary-buffers.md). (#160)\r\n- [Docs] Documentation was updated to clarify behavior of the `filter` and `merge` methods of `OrderedDictionary`. (#145)\r\n\r\n### Pull requests\r\n\r\n- #140 [OrderedDictionary] Fix type inference issue with OrderedDictionary.init(grouping:by:) (by @lorentey)\r\n- #153 [OrderedDictionary][doc] Update docs for merge/filter operations (by @lorentey)\r\n- #155 Remove Swift PM Artifacts to avoid Generated Schemes in Xcode (by @hectormatos2011)\r\n- #156 Reinstate custom schemes under Utils/swift-collections.xcworkspace (by @lorentey)\r\n- #160 [OrderedCollection] Use standard temp allocation facility, if available (by @lorentey)\r\n- #161 [Xcode] Update schemes & file template (by @lorentey)\r\n- #162 [OrderedSet] Work around weird name lookup issue in compiler (by @lorentey)\r\n- #165 Force-inline _modify accessors to work around a performance issue (by @lorentey)\r\n- #169 [OrderedDictionary] Resolve call-site ambiguities (by @lorentey)\r\n- #170 Update README for 1.0.3 (by @lorentey)\r\n\r\n**Full Changelog**: https://github.com/apple/swift-collections/compare/1.0.2...1.0.3\r\n\r\nThank you to everyone who contributed to this release! Your bug reports, discussions and pull requests all help improve this package.\r\n\r\n",
    "createdAt" : "2022-09-02T09:32:57+09:00",
    "fetchedFromAPIAt" : "2022-09-03T09:54:10+09:00",
    "id" : "RE_kwDOFDfRzs4EiTkf",
    "owner" : "apple",
    "publishedAt" : "2022-09-03T05:29:51+09:00",
    "repository" : "swift-collections",
    "title" : "Swift Collections 1.0.3",
    "url" : "https://github.com/apple/swift-collections/releases/tag/1.0.3",
    "version" : "1.0.3"
  },
  {
    "body" : "This is a documentation update, including the addition of basic DocC documentation bundles. This release has no functional changes.\r\n\r\n### Changes\r\n\r\n- The package now contains documentation bundles, enabling nicer presentation of API documentation in DocC.\r\n\r\n### Fixes\r\n\r\n- #186 [OrderedCollections] Document Sorting as Stable (by @benrimmington)\r\n\r\n### Pull requests\r\n\r\n- #178 [OrderedDictionary] Tiny documentation fix (by @lorentey)\r\n- #187 Fix `rethrows` position (by @ensan-hcl)\r\n- #189 [OrderedSet] Tiny doc fixes for isSuperset (by @lorentey)\r\n- #201 [OrderedCollections] Update docs to state that the sort algorithm is stable (by @lorentey)\r\n- #214 [OrderedSet] Small doc updates/fixes (by @lorentey)\r\n- #252 [1.0] Add DocC documentation bundles (by @lorentey)\r\n\r\n**Full Changelog**: https://github.com/apple/swift-collections/compare/1.0.3...1.0.4\r\n\r\nThank you to everyone who contributed to this release! Your bug reports, discussions and pull requests all help improve this package.\r\n",
    "createdAt" : "2022-12-09T03:54:21+09:00",
    "fetchedFromAPIAt" : "2022-12-09T09:44:16+09:00",
    "id" : "RE_kwDOFDfRzs4FGIcl",
    "owner" : "apple",
    "publishedAt" : "2022-12-09T07:30:54+09:00",
    "repository" : "swift-collections",
    "title" : "Swift Collections 1.0.4",
    "url" : "https://github.com/apple/swift-collections/releases/tag/1.0.4",
    "version" : "1.0.4"
  },
  {
    "body" : "This bugfix release improves compatibility with recent Swift versions, eliminating several compiler warnings on Swift 5.8 and 5.9. It contains no API-level changes.\r\n\r\n## What's Changed\r\n* build: add ARM64 to the architecture mappings for Windows by @compnerd in https://github.com/apple/swift-collections/pull/265\r\n* Fix deprecated UnsafeMutablePointer.assign(repeating:count) method by @FelixHerrmann in https://github.com/apple/swift-collections/pull/268\r\n* [1.0][test] Fix typename shadowing warning in Swift 5.9 by @lorentey in https://github.com/apple/swift-collections/pull/315\r\n* [1.0][benchmark] Update std::function syntax for current C++ by @lorentey in https://github.com/apple/swift-collections/pull/314\r\n\r\n## New Contributors\r\n* @FelixHerrmann made their first contribution in https://github.com/apple/swift-collections/pull/268\r\n\r\n**Full Changelog**: https://github.com/apple/swift-collections/compare/1.0.4...1.0.5\r\n\r\nThank you to everyone who contributed to this release!",
    "createdAt" : "2023-10-03T13:27:26+09:00",
    "fetchedFromAPIAt" : "2024-07-14T22:49:45+09:00",
    "id" : "RE_kwDOFDfRzs4HW1Y9",
    "owner" : "apple",
    "publishedAt" : "2023-10-03T13:37:45+09:00",
    "repository" : "swift-collections",
    "title" : "Swift Collections 1.0.5",
    "url" : "https://github.com/apple/swift-collections/releases/tag/1.0.5",
    "version" : "1.0.5"
  },
  {
    "body" : "This bugfix release adds `Sendable` conformances to all public types (fixing compatibility with Swift's strict concurrency checking), and speeds up equality checks (`==`) of identical collection values.\r\n\r\n## What's Changed\r\n* Fix typos: OrderedSet Documentation by @kati-kms in https://github.com/apple/swift-collections/pull/322\r\n* [1.0] build: support building in Debug mode on Windows by @compnerd in https://github.com/apple/swift-collections/pull/337\r\n* build: tweak search path for embedding by @compnerd in https://github.com/apple/swift-collections/pull/338\r\n* [OrderedDictionary] forward ordered dictionary values equality to values property by @vanvoorden in https://github.com/apple/swift-collections/pull/335\r\n* [OrderedSet] forward ordered set equality to elements property by @vanvoorden in https://github.com/apple/swift-collections/pull/340\r\n* [Deque] check deque equality with buffer identity by @vanvoorden in https://github.com/apple/swift-collections/pull/341\r\n* [OrderedDictionary] Fix usage of deprecated API in index(forKey:) docs by @lorentey in https://github.com/apple/swift-collections/pull/342\r\n* [1.0] Backport Sendable conformances on all public types by @lorentey in https://github.com/apple/swift-collections/pull/343\r\n* OrderedSet: Fix sendable conformance on old swifts by @lorentey in https://github.com/apple/swift-collections/pull/346\r\n* Update CMake configuration by @lorentey in https://github.com/apple/swift-collections/pull/347\r\n\r\n## New Contributors\r\n* @kati-kms made their first contribution in https://github.com/apple/swift-collections/pull/322\r\n* @vanvoorden made their first contribution in https://github.com/apple/swift-collections/pull/335\r\n\r\n**Full Changelog**: https://github.com/apple/swift-collections/compare/1.0.5...1.0.6\r\n\r\nThank you to everyone who contributed to this release!\r\n",
    "createdAt" : "2023-12-20T10:50:54+09:00",
    "fetchedFromAPIAt" : "2024-07-14T22:49:45+09:00",
    "id" : "RE_kwDOFDfRzs4IAs0W",
    "owner" : "apple",
    "publishedAt" : "2023-12-21T10:07:02+09:00",
    "repository" : "swift-collections",
    "title" : "Swift Collections 1.0.6",
    "url" : "https://github.com/apple/swift-collections/releases/tag/1.0.6",
    "version" : "1.0.6"
  },
  {
    "body" : "This feature release adds a number of new data structure implementations, along with minor changes to existing constructs.\r\n\r\n## New Data Structures\r\n\r\n- `Heap` implements a min-max heap, backed by a native array. (Contributed by @AquaGeek)\r\n- `BitSet` and `BitArray` are two alternate representations of a bitmap type, backed by dynamically allocated storage. (Contributed by @MahanazAtiqullah)\r\n- `TreeSet` and `TreeDictionary` are hashed collections implementing Compressed Hash-Array Mapped Prefix Trees (CHAMP). They provide similar API as `Set`/`Dictionary` in the Standard Library, but as persistent data structures, supporting incremental mutations of shared instances and efficient structural diffing. (Contributed by @msteindorfer)\r\n\r\n## Other Changes\r\n\r\n- This version of the package can only be built using Swift 5.7.2 or later.\r\n- New methods: the `OrderedSet.isEqualSet` family of functions provide a way to test that two containers contain the same members, ignoring the order of elements. (https://github.com/apple/swift-collections/issues/183, https://github.com/apple/swift-collections/pull/234)\r\n- New method: `OrderedSet.filter` implements a version of the standard filter operation that returns an `OrderedSet` instead of an `Array`. (https://github.com/apple/swift-collections/pull/159)\r\n- `debugDescription` implementations have been updated to follow Swift best practice. (These are called by container types like `Array` to print their elements, so they work best when they're succinct variants of `description` that are suitable for embedding in structured output: specifically, they must not produce unpaired delimiter characters (`[`/`]`, `(`/`)`, `{`/`}`, `<`/`>` etc), raw top level commas, semicolons, colons, unquoted strings etc. `debugDescription` should not needlessly print type names etc.)\r\n\r\n## New Contributors\r\n\r\n* @AquaGeek made their first contribution in https://github.com/apple/swift-collections/pull/61\r\n* @ejmarchant made their first contribution in https://github.com/apple/swift-collections/pull/82\r\n* @just-gull made their first contribution in https://github.com/apple/swift-collections/pull/115\r\n* @jPaolantonio made their first contribution in https://github.com/apple/swift-collections/pull/121\r\n* @MahanazAtiqullah made their first contribution in https://github.com/apple/swift-collections/pull/83\r\n* @hectormatos2011 made their first contribution in https://github.com/apple/swift-collections/pull/155\r\n* @ktoso made their first contribution in https://github.com/apple/swift-collections/pull/159\r\n* @CTMacUser made their first contribution in https://github.com/apple/swift-collections/pull/116\r\n* @hassila made their first contribution in https://github.com/apple/swift-collections/pull/297\r\n\r\nMany thanks to our contributors for their great work (and patience)!\r\n\r\n\r\n## List of Pull Requests\r\n\r\n**Full Changelog**: https://github.com/apple/swift-collections/compare/1.0.6...1.1.0\r\n\r\n* Add a min-max heap implementation that can be used to back a priority queue by @AquaGeek in https://github.com/apple/swift-collections/pull/61\r\n* [benchmark] Review and extend Heap benchmarks by @lorentey in https://github.com/apple/swift-collections/pull/76\r\n* Add reference benchmarks for bit vector implementations by @lorentey in https://github.com/apple/swift-collections/pull/79\r\n* Fix Markdown link in README by @AquaGeek in https://github.com/apple/swift-collections/pull/77\r\n* Fix documentation for types conforming to ExpressibleByArrayLiteral o… by @ejmarchant in https://github.com/apple/swift-collections/pull/82\r\n* [Heap] Performance tweaks by @lorentey in https://github.com/apple/swift-collections/pull/78\r\n* Fix typos: missing subscript parameters by @ejmarchant in https://github.com/apple/swift-collections/pull/81\r\n* [Heap] Update implementation details section in docs by @lorentey in https://github.com/apple/swift-collections/pull/84\r\n* Update CMakeLists.txt by @compnerd in https://github.com/apple/swift-collections/pull/85\r\n* Stop depending on swift-collections-benchmark by @lorentey in https://github.com/apple/swift-collections/pull/86\r\n* [OrderedDictionary] modifyValue → updateValue by @lorentey in https://github.com/apple/swift-collections/pull/91\r\n* Add Benchmarks package to workspace by @lorentey in https://github.com/apple/swift-collections/pull/93\r\n* [OrderedDictionary] Deprecate `subscript(offset:)` for now by @lorentey in https://github.com/apple/swift-collections/pull/92\r\n* Documentation: Remove in-place mutation comments by @ejmarchant in https://github.com/apple/swift-collections/pull/96\r\n* [main] Freeze some types for consistency with their inlinable initializers by @lorentey in https://github.com/apple/swift-collections/pull/98\r\n* Follow stdlib's leading underscore rule by @ejmarchant in https://github.com/apple/swift-collections/pull/95\r\n* [Heap] Disable heap tests in release builds by @lorentey in https://github.com/apple/swift-collections/pull/100\r\n* [NFC] Merge release/1.0 to main by @lorentey in https://github.com/apple/swift-collections/pull/105\r\n* Merge `release/1.0` into `main` by @lorentey in https://github.com/apple/swift-collections/pull/108\r\n* [README] Note that `Heap` hasn't been tagged yet & list other enhancements in progress by @lorentey in https://github.com/apple/swift-collections/pull/109\r\n* PriorityQueueModule: remove `import Foundation` by @compnerd in https://github.com/apple/swift-collections/pull/118\r\n* [Heap] Remove Heap's `ascending` and `descending` views by @lorentey in https://github.com/apple/swift-collections/pull/119\r\n* [Heap] Enable heap tests in optimized builds (#101) by @just-gull in https://github.com/apple/swift-collections/pull/115\r\n* Update CMakeLists.txt by @compnerd in https://github.com/apple/swift-collections/pull/122\r\n* Fix link to package internal documentation by @jPaolantonio in https://github.com/apple/swift-collections/pull/121\r\n* Merge release/1.0 to main by @lorentey in https://github.com/apple/swift-collections/pull/130\r\n* BitArray and BitSet data structures by @MahanazAtiqullah in https://github.com/apple/swift-collections/pull/83\r\n* Sorted collections by @vihanb in https://github.com/apple/swift-collections/pull/65\r\n* Merge `release/1.0` to `main` by @lorentey in https://github.com/apple/swift-collections/pull/141\r\n* Remove Swift PM Artifacts to avoid Generated Schemes in Xcode by @hectormatos2011 in https://github.com/apple/swift-collections/pull/155\r\n* Reinstate custom schemes under Utils/swift-collections.xcworkspace by @lorentey in https://github.com/apple/swift-collections/pull/156\r\n* +OrderedSet add filter #158 by @ktoso in https://github.com/apple/swift-collections/pull/159\r\n* [Xcode] Update schemes & file template by @lorentey in https://github.com/apple/swift-collections/pull/161\r\n* [OrderedCollection] Use standard temp allocation facility, if available by @lorentey in https://github.com/apple/swift-collections/pull/160\r\n* [OrderedSet] Work around weird name lookup issue in compiler by @lorentey in https://github.com/apple/swift-collections/pull/162\r\n* =OrderedSet.filter Attempt to optimize filter impl by @ktoso in https://github.com/apple/swift-collections/pull/163\r\n* Force-inline _modify accessors to work around a performance issue by @lorentey in https://github.com/apple/swift-collections/pull/165\r\n* Merge release/1.0 branch to main by @lorentey in https://github.com/apple/swift-collections/pull/172\r\n* Incubate persistent data structures by @msteindorfer in https://github.com/apple/swift-collections/pull/31\r\n* Persistent collections updates by @lorentey in https://github.com/apple/swift-collections/pull/174\r\n* Persistent collections updates by @lorentey in https://github.com/apple/swift-collections/pull/175\r\n* Persistent collections updates (part 3) by @lorentey in https://github.com/apple/swift-collections/pull/176\r\n* Persistent collections updates (part 4) by @lorentey in https://github.com/apple/swift-collections/pull/177\r\n* [OrderedDictionary] Tiny documentation fix by @lorentey in https://github.com/apple/swift-collections/pull/178\r\n* Persistent collections updates (part 5) by @lorentey in https://github.com/apple/swift-collections/pull/179\r\n* Integrate PriorityQueueModule, BitCollections, PersistentCollections, SortedCollections into release/1.1 by @lorentey in https://github.com/apple/swift-collections/pull/181\r\n* Persistent collections updates (part 6) by @lorentey in https://github.com/apple/swift-collections/pull/180\r\n* Persistent collections updates (part 7) by @lorentey in https://github.com/apple/swift-collections/pull/182\r\n* [BitSet] Fix decoding format on 32 bit architectures by @lorentey in https://github.com/apple/swift-collections/pull/185\r\n* Persistent collections updates (part 8) by @lorentey in https://github.com/apple/swift-collections/pull/184\r\n* Persistent collections updates (part 9) by @lorentey in https://github.com/apple/swift-collections/pull/188\r\n* Add Sendable conformances to all public types by @lorentey in https://github.com/apple/swift-collections/pull/191\r\n* [test] Check baseline API expectations for set-like types by @lorentey in https://github.com/apple/swift-collections/pull/192\r\n* Fleshing out `PersistentSet` by @lorentey in https://github.com/apple/swift-collections/pull/193\r\n* Rename `PriorityQueueModule` to `HeapModule` by @lorentey in https://github.com/apple/swift-collections/pull/194\r\n* [BitSet] Fix invariant violation in member subscript by @lorentey in https://github.com/apple/swift-collections/pull/195\r\n* [1.1.0] Bump minimum required Swift toolchain to 5.5 by @lorentey in https://github.com/apple/swift-collections/pull/196\r\n* Restore support for building with Swift 5.5 by @lorentey in https://github.com/apple/swift-collections/pull/198\r\n* Merge release/1.0 to release/1.1 by @lorentey in https://github.com/apple/swift-collections/pull/199\r\n* Update CMake configuration in preparation for 1.1 by @lorentey in https://github.com/apple/swift-collections/pull/200\r\n* Update CMakeLists.txt by @compnerd in https://github.com/apple/swift-collections/pull/202\r\n* [1.1][SortedCollections] Remove for now by @lorentey in https://github.com/apple/swift-collections/pull/205\r\n* [Heap] Change value of minimum or maximum element by @CTMacUser in https://github.com/apple/swift-collections/pull/116\r\n* [Heap] Prerelease preparations by @lorentey in https://github.com/apple/swift-collections/pull/210\r\n* Update README files by @lorentey in https://github.com/apple/swift-collections/pull/212\r\n* [manifest] Exclude CMakeLists.txt; remove unnecessary path settings; reindent file by @lorentey in https://github.com/apple/swift-collections/pull/213\r\n* Review and finalize (?) set relation predicates for 1.1 by @lorentey in https://github.com/apple/swift-collections/pull/216\r\n* Merge.1.0→1.1 by @lorentey in https://github.com/apple/swift-collections/pull/217\r\n* Update CMake configuration by @lorentey in https://github.com/apple/swift-collections/pull/218\r\n* Cherry pick changes from main to release/1.1 by @lorentey in https://github.com/apple/swift-collections/pull/219\r\n* Fix unusual build problems by @lorentey in https://github.com/apple/swift-collections/pull/221\r\n* Review & update descriptions throughout the package by @lorentey in https://github.com/apple/swift-collections/pull/222\r\n* Review and finalize (?) binary set operations for 1.1 by @lorentey in https://github.com/apple/swift-collections/pull/223\r\n* [Xcode] Disable implicit dependencies by @lorentey in https://github.com/apple/swift-collections/pull/227\r\n* [OrderedSet] Improve sequence-taking initializer by @lorentey in https://github.com/apple/swift-collections/pull/226\r\n* [OrderedSet, BitSet] Fix custom mirror display style by @lorentey in https://github.com/apple/swift-collections/pull/225\r\n* Finalize persistent collections API by @lorentey in https://github.com/apple/swift-collections/pull/224\r\n* Start working on DocC support by @lorentey in https://github.com/apple/swift-collections/pull/228\r\n* Update CMake build configuration by @lorentey in https://github.com/apple/swift-collections/pull/230\r\n* [PersistentSet] Iterator.next(): Make inlinable by @lorentey in https://github.com/apple/swift-collections/pull/233\r\n* [SetAlgebra types] isEqual(to:) → isEqualSet(to:) by @lorentey in https://github.com/apple/swift-collections/pull/234\r\n* [PersistentCollections] Doc & benchmark updates in preparation of API review by @lorentey in https://github.com/apple/swift-collections/pull/235\r\n* Apply changes from in-progress review thread by @lorentey in https://github.com/apple/swift-collections/pull/237\r\n* [ShareableHashedCollections] API Review: add missing `mutating` keywords by @lorentey in https://github.com/apple/swift-collections/pull/238\r\n* [Benchmarks] Split default huge library up into individual files, one per type by @lorentey in https://github.com/apple/swift-collections/pull/240\r\n* [ShareableHashedCollections] Add missing import by @lorentey in https://github.com/apple/swift-collections/pull/243\r\n* Unify unsafe bit set implementations by @lorentey in https://github.com/apple/swift-collections/pull/244\r\n* Fix warnings in development versions of Swift by @lorentey in https://github.com/apple/swift-collections/pull/245\r\n* [HashTreeCollections] Change prefix `Shareable` to `Tree` by @lorentey in https://github.com/apple/swift-collections/pull/242\r\n* [TreeDictionary] Fix in-place merge operation to properly update the count by @lorentey in https://github.com/apple/swift-collections/pull/247\r\n* [cmake] Update CMake configuration by @lorentey in https://github.com/apple/swift-collections/pull/249\r\n* Add not so experimental rope implementation by @lorentey in https://github.com/apple/swift-collections/pull/264\r\n* Fix off by one error in BitSet by @lorentey in https://github.com/apple/swift-collections/pull/267\r\n* Monomodule support by @lorentey in https://github.com/apple/swift-collections/pull/266\r\n* Expose a handful of BigString.Index methods by @lorentey in https://github.com/apple/swift-collections/pull/269\r\n* BitArray API refinements & additions by @lorentey in https://github.com/apple/swift-collections/pull/263\r\n* Make most of Rope inlinable by @lorentey in https://github.com/apple/swift-collections/pull/270\r\n* BigString: Fix String.Index._knownScalarAligned by @lorentey in https://github.com/apple/swift-collections/pull/272\r\n* Rope: Fix `Sendable` conformance by @lorentey in https://github.com/apple/swift-collections/pull/271\r\n* Require Swift 5.6 by @lorentey in https://github.com/apple/swift-collections/pull/273\r\n* [OrderedDictionary] Explicitly mention in documentation that keys/values are ordered by @lorentey in https://github.com/apple/swift-collections/pull/275\r\n* [HashCollections] Ensure `self` doesn’t get destroyed before we’re done working with it by @lorentey in https://github.com/apple/swift-collections/pull/276\r\n* Remove obsolete swift(>=5.5)/swift(>=5.6) checks by @lorentey in https://github.com/apple/swift-collections/pull/277\r\n* [Xcode] Update Xcode project by @lorentey in https://github.com/apple/swift-collections/pull/278\r\n* Minor rope updates by @lorentey in https://github.com/apple/swift-collections/pull/279\r\n* [Rope] remove(at:): Fix assertion when removing the last item creates a deficiency by @lorentey in https://github.com/apple/swift-collections/pull/280\r\n* Merge changes from release 1.0 to release 1.1 by @lorentey in https://github.com/apple/swift-collections/pull/283\r\n* [CollectionUtilities] Silence a warning on 32 bit platforms by @lorentey in https://github.com/apple/swift-collections/pull/286\r\n* [BitSet] Fix a thinko in BitSet.isEqualSet by @lorentey in https://github.com/apple/swift-collections/pull/287\r\n* Grab bag of fixes for small test issues by @lorentey in https://github.com/apple/swift-collections/pull/288\r\n* [Xcode] Set a code sign identity in the Xcode project by @lorentey in https://github.com/apple/swift-collections/pull/285\r\n* Rope: Fix trap when replaceSubrange is called on an empty rope by @lorentey in https://github.com/apple/swift-collections/pull/290\r\n* `Rope.find` returns a bogus remainder for the end position by @lorentey in https://github.com/apple/swift-collections/pull/291\r\n* Update TreeSet.md by @hassila in https://github.com/apple/swift-collections/pull/297\r\n* Fix CustomStringConvertible/CustomDebugStringConvertible conformances by @lorentey in https://github.com/apple/swift-collections/pull/302\r\n* [RopeModule] Fix issues in Swift's ABI stable dialect by @lorentey in https://github.com/apple/swift-collections/pull/318\r\n* [CMake, Xcode] Update configurations for alternate build systems by @lorentey in https://github.com/apple/swift-collections/pull/319\r\n* [RopeModule] Remove unnecessary typealiases by @lorentey in https://github.com/apple/swift-collections/pull/320\r\n* [Heap] Improve type-level doc comment by @lorentey in https://github.com/apple/swift-collections/pull/326\r\n* [Heap] insert(contentsOf:) Switch to Floyd’s if we’re inserting too many items by @lorentey in https://github.com/apple/swift-collections/pull/327\r\n* [1.1] build: support building in Debug mode on Windows by @compnerd in https://github.com/apple/swift-collections/pull/336\r\n* Merge release/1.0 to release/1.1 by @lorentey in https://github.com/apple/swift-collections/pull/348\r\n* [Heap] Convert min() and max() to properties by @lorentey in https://github.com/apple/swift-collections/pull/328\r\n* [BitArray] Disable bitwise operators for now by @lorentey in https://github.com/apple/swift-collections/pull/353\r\n* [Heap] Final(?) Heap API adjustments for 1.1 by @lorentey in https://github.com/apple/swift-collections/pull/354\r\n* [Benchmarks] Add Collection Equality Benchmarks by @vanvoorden in https://github.com/apple/swift-collections/pull/351\r\n* Release preparations for 1.1 by @lorentey in https://github.com/apple/swift-collections/pull/355\r\n* [1.1] Fix typos by @lorentey in https://github.com/apple/swift-collections/pull/357\r\n* [TreeDictionary][Keys] Add Equatable and Hashable Conformance to TreeDictionary.Keys  by @vanvoorden in https://github.com/apple/swift-collections/pull/352\r\n\r\n",
    "createdAt" : "2024-02-07T11:58:46+09:00",
    "fetchedFromAPIAt" : "2024-07-14T22:49:45+09:00",
    "id" : "RE_kwDOFDfRzs4IXtp1",
    "owner" : "apple",
    "publishedAt" : "2024-02-08T09:59:33+09:00",
    "repository" : "swift-collections",
    "title" : "Swift Collections 1.1.0",
    "url" : "https://github.com/apple/swift-collections/releases/tag/1.1.0",
    "version" : "1.1.0"
  },
  {
    "body" : "This patch release resolves issues uncovered since version 1.1.0 was published.\r\n\r\n## What's Changed\r\n\r\n- This version fixes a bogus assertion in `Deque` that can cause incorrect runtime traps in debug builds. (#381)\r\n- The unstable module `_CollectionsUtilities` was renamed to `InternalCollectionsUtilities` to work around an issue in shipping versions of Xcode. This renaming is not intended to make this module public -- it remains an unstable implementation detail. (#364)\r\n\r\n## New Contributors\r\n* @iCharlesHu made their first contribution in https://github.com/apple/swift-collections/pull/373\r\n* @jmschonfeld made their first contribution in https://github.com/apple/swift-collections/pull/385\r\n\r\nMany thanks to our contributors for their work!\r\n\r\n## List of Pull Requests\r\n\r\n**Full Changelog**: https://github.com/apple/swift-collections/compare/1.1.0...1.1.1\r\n\r\n* Update README by @lorentey in https://github.com/apple/swift-collections/pull/360\r\n* Add post-merge CI support for release/1.1 branch by @shahmishal in https://github.com/apple/swift-collections/pull/368\r\n* Rename RopeModule to _RopeModule in CMakeLists.txt to match Package.swift by @iCharlesHu in https://github.com/apple/swift-collections/pull/373\r\n* Fix the incorrect file name in OrderedCollections cmake file by @iCharlesHu in https://github.com/apple/swift-collections/pull/377\r\n* [Deque]: Fix bogus assert in Deque._Storage._ensureUnique by @lorentey in https://github.com/apple/swift-collections/pull/381\r\n* [test] TreeDictionary.Keys: Remove stray print that’s flooding test output by @lorentey in https://github.com/apple/swift-collections/pull/370\r\n* Rename _CollectionsUtilities to InternalCollectionsUtilities by @lorentey in https://github.com/apple/swift-collections/pull/382\r\n* [Rope] Fix copy-on-write violation in Rope.join by @lorentey in https://github.com/apple/swift-collections/pull/384\r\n* Add Single Module Build Mode to CMake for Foundation by @jmschonfeld in https://github.com/apple/swift-collections/pull/385\r\n",
    "createdAt" : "2024-06-04T08:15:50+09:00",
    "fetchedFromAPIAt" : "2024-07-14T22:49:45+09:00",
    "id" : "RE_kwDOFDfRzs4JfmL2",
    "owner" : "apple",
    "publishedAt" : "2024-06-08T08:33:23+09:00",
    "repository" : "swift-collections",
    "title" : "Swift Collections 1.1.1",
    "url" : "https://github.com/apple/swift-collections/releases/tag/1.1.1",
    "version" : "1.1.1"
  },
  {
    "body" : "This patch release updates the (unstable) CMake build configuration to support the [swift-foundation](https://github.com/apple/swift-foundation) project.\r\n\r\nThere were no changes outside of the CMake configuration.\r\n\r\n## What's Changed\r\n* Install the Foundation toolchain module during the static swift build by @jmschonfeld in https://github.com/apple/swift-collections/pull/391\r\n* [CMake] Reduce path lengths in single-module build by @jmschonfeld in https://github.com/apple/swift-collections/pull/392\r\n* Reduce the size of the _FoundationCollections toolchain module by @jmschonfeld in https://github.com/apple/swift-collections/pull/395\r\n\r\n\r\n**Full Changelog**: https://github.com/apple/swift-collections/compare/1.1.1...1.1.2",
    "createdAt" : "2024-07-09T03:23:21+09:00",
    "fetchedFromAPIAt" : "2024-07-14T22:49:45+09:00",
    "id" : "RE_kwDOFDfRzs4JzgEN",
    "owner" : "apple",
    "publishedAt" : "2024-07-09T07:04:31+09:00",
    "repository" : "swift-collections",
    "title" : "Swift Collections 1.1.2",
    "url" : "https://github.com/apple/swift-collections/releases/tag/1.1.2",
    "version" : "1.1.2"
  },
  {
    "body" : "This patch release ships bug fixes for issues discovered since 1.1.2.\r\n\r\n## What's Changed\r\n* [BigString] Fix accidentally quadratic `BigString.init` by @lorentey in https://github.com/apple/swift-collections/pull/405\r\n* add 'final' keyword to class by @quokkaKyu in https://github.com/apple/swift-collections/pull/403\r\n* [CMake] Add support for WebAssembly target architectures by @kateinoigakukun in https://github.com/apple/swift-collections/pull/408\r\n* [concurrency] conform Deque.Iterator to unchecked-Sendable by @glessard in https://github.com/apple/swift-collections/pull/414\r\n\r\n## New Contributors\r\n* @quokkaKyu made their first contribution in https://github.com/apple/swift-collections/pull/403\r\n* @kateinoigakukun made their first contribution in https://github.com/apple/swift-collections/pull/408\r\n\r\n**Full Changelog**: https://github.com/apple/swift-collections/compare/1.1.2...1.1.3",
    "createdAt" : "2024-08-20T10:45:56+09:00",
    "fetchedFromAPIAt" : "2024-08-27T10:02:32+09:00",
    "id" : "RE_kwDOFDfRzs4KPLDU",
    "owner" : "apple",
    "publishedAt" : "2024-08-27T02:35:56+09:00",
    "repository" : "swift-collections",
    "title" : "Swift Collections 1.1.3",
    "url" : "https://github.com/apple/swift-collections/releases/tag/1.1.3",
    "version" : "1.1.3"
  },
  {
    "body" : "This patch release consists of changes to the (unstable) CMake configuration. It includes no code level modifications.\r\n\r\nThis is expected to be the last planned release in the 1.1 release series. The next tagged release will be 1.2.0, bumping the required Swift toolchain to 5.9.\r\n\r\n## What's Changed\r\n* Add more file in Sources/BitCollections/CMakeLists.txt by @lamtrinhdev in https://github.com/apple/swift-collections/pull/419\r\n* [Build] Use `SWIFT_SYSTEM_NAME` rather than just lowercasing. by @al45tair in https://github.com/apple/swift-collections/pull/421\r\n* [CMake] Handle riscv64 by @futurejones in https://github.com/apple/swift-collections/pull/422\r\n\r\n## New Contributors\r\n* @lamtrinhdev made their first contribution in https://github.com/apple/swift-collections/pull/419\r\n* @al45tair made their first contribution in https://github.com/apple/swift-collections/pull/421\r\n* @futurejones made their first contribution in https://github.com/apple/swift-collections/pull/422\r\n\r\n**Full Changelog**: https://github.com/apple/swift-collections/compare/1.1.3...1.1.4",
    "createdAt" : "2024-09-25T08:12:49+09:00",
    "fetchedFromAPIAt" : "2024-09-25T10:09:21+09:00",
    "id" : "RE_kwDOFDfRzs4KiNFY",
    "owner" : "apple",
    "publishedAt" : "2024-09-25T08:21:03+09:00",
    "repository" : "swift-collections",
    "title" : "Swift Collections 1.1.4",
    "url" : "https://github.com/apple/swift-collections/releases/tag/1.1.4",
    "version" : "1.1.4"
  }
]