[
  {
    "body" : "This is the last release to support building with Swift 5.0.x.\r\n\r\n#### Breaking\r\n\r\n* None.\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* Add configuration options to the `unused_import` rule to require\r\n  explicit import statements for each module referenced in a source\r\n  file (`require_explicit_imports`). When this setting is enabled,\r\n  an `allowed_transitive_imports` setting may also be specified to allow\r\n  a mapping of modules to transitively imported modules. See PR for\r\n  details: https://github.com/realm/SwiftLint/pull/3123  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3116](https://github.com/realm/SwiftLint/issues/3116)\r\n\r\n#### Bug Fixes\r\n\r\n* Fix more false positives in `implicit_getter` rule in extensions when using\r\n  Swift 5.2.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#3149](https://github.com/realm/SwiftLint/issues/3149)\r\n\r\n* Fix false positives in `redundant_objc_attribute` rule in extensions when \r\n  using Swift 5.2.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n\r\n* Fix false positives in `attributes` rule when using `rethrows` using\r\n  Swift 5.2.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* Fix false positives in `valid_ibinspectable` rule when defining inspectable\r\n  properties in class extensions with computed properties using Swift 5.2.  \r\n  [JP Simard](https://github.com/jpsim)",
    "createdAt" : "2020-04-04T12:22:50+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTI1MTkzMjE3",
    "owner" : "realm",
    "publishedAt" : "2020-04-04T12:23:38+09:00",
    "repository" : "SwiftLint",
    "title" : "0.39.2: Stay Home",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.39.2",
    "version" : "0.39.2"
  },
  {
    "body" : "#### Breaking\r\n\r\n* SwiftLint now requires Swift 5.1 or higher to build.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* Improve compile commands json file validation. If you previously\r\n  provided invalid files or arguments, the command will now abort.  \r\n  [Keith Smiley](https://github.com/keith)\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* JUnit reporter for GitLab artifact:report:junit with better representation of\r\n  found issues.  \r\n  [krin-san](https://github.com/krin-san)\r\n  [#3177](https://github.com/realm/SwiftLint/pull/3177)\r\n\r\n* Add opt-in `ibinspectable_in_extension` rule to lint against `@IBInspectable`\r\n  properties in `extensions`.  \r\n  [Keith Smiley](https://github.com/keith)\r\n\r\n* Add `computed_accessors_order` rule to validate the order of `get` and `set`\r\n  accessors in computed properties and subscripts.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#3158](https://github.com/realm/SwiftLint/issues/3158)\r\n\r\n* Extend `empty_enum_arguments` rule to support `if case` and `guard case`.  \r\n  [Zsolt Kov√°cs](https://github.com/lordzsolt)\r\n  [#3103](https://github.com/realm/SwiftLint/issues/3103)\r\n\r\n* Add `prefer_zero_over_explicit_init` opt-in rule to enforce using\r\n  `.zero` instead of calling constructor with zero arguments\r\n  (e.g. `CGPoint(x: 0, y: 0)`) when using CoreGraphics types.  \r\n  [Anton Nazarov](https://github.com/MortyMerr)\r\n  [#3190](https://github.com/realm/SwiftLint/issues/3190)  \r\n\r\n* Add `swiftlint docs` command to easily open online documentation.  \r\n  [417-72KI](https://github.com/417-72KI)\r\n\r\n* Add `unneeded_notification_center_removal` rule to warn against using\r\n  `NotificationCenter.removeObserver(self)` in `deinit` since it's not required\r\n  after iOS 9/macOS 10.11.  \r\n  [Amzd](https://github.com/Amzd)\r\n  [#2755](https://github.com/realm/SwiftLint/issues/2755)  \r\n\r\n#### Bug Fixes\r\n\r\n* Fix UnusedImportRule breaking transitive imports.  \r\n  [keith](https://github.com/keith)\r\n\r\n* Fix severity level configuration for `duplicate_imports`.  \r\n  [Yusuke Goto](https://github.com/yusukegoto)\r\n\r\n* Fixes false positives for `multiline_parameters_brackets` and\r\n  `multiline_arguments_brackets`.  \r\n  [Noah Gilmore](https://github.com/noahsark769)\r\n  [#3167](https://github.com/realm/SwiftLint/issues/3167)\r\n\r\n* Fix conflict of 'opening_brace' with 'implicit_return' for functions\r\n  implicitly returning a closure.  \r\n  [SimplyDanny](https://github.com/SimplyDanny)\r\n  [#3034](https://github.com/realm/SwiftLint/issues/3034)\r\n\r\n* Fix false positive on `switch_case_on_newline` rule with `do/catch`\r\n  statements when using Swift 5.3.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#3253](https://github.com/realm/SwiftLint/issues/3253)\r\n\r\n* Fix false positive uppercase enum case in\r\n  `raw_value_for_camel_cased_codable_enum` rule.  \r\n  [Teameh](https://github.com/teameh)\r\n\r\n* Fix false positive in `no_space_in_method_call` rule with multiple trailing\r\n  closures (Swift 5.3).  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#3259](https://github.com/realm/SwiftLint/issues/3259)\r\n\r\n* Fix false negative in `explicit_acl` rule when using `extension` with\r\n  Swift 5.2+.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#3186](https://github.com/realm/SwiftLint/issues/3186)\r\n\r\n* `closure_parameter_position` now triggers in closures that are not inside a\r\n  function call and also validates captured variables.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#3225](https://github.com/realm/SwiftLint/issues/3225)\r\n\r\n* Fix some cases where the output would be incomplete when running \r\n  SwiftLint on Linux.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#3214](https://github.com/realm/SwiftLint/issues/3214)\r\n  \r\n* `compiler_protocol_init` now triggers on `IndexSet(arrayLiteral:)`.  \r\n  [Janak Shah](https://github.com/janakshah)\r\n  [#3284](https://github.com/realm/SwiftLint/pull/3284)\r\n\r\n* Fix false positives in `extension_access_modifier` rule when using\r\n  Swift 5.2.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#3150](https://github.com/realm/SwiftLint/issues/3150)",
    "createdAt" : "2020-08-11T00:23:58+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTI5NTE3NTc1",
    "owner" : "realm",
    "publishedAt" : "2020-08-11T00:32:06+09:00",
    "repository" : "SwiftLint",
    "title" : "0.40.0: Washable Mask",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.40.0",
    "version" : "0.40.0"
  },
  {
    "body" : "#### Breaking\r\n\r\n* The new rules introduced in 0.39.0 that depend on SwiftSyntax have been\r\n  temporarily removed as we work out release packaging issues.\r\n    * `prohibited_nan_comparison`\r\n    * `return_value_from_void_function`\r\n    * `tuple_pattern`\r\n    * `void_function_in_ternary`  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3105](https://github.com/realm/SwiftLint/issues/3105)\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* None.\r\n\r\n#### Bug Fixes\r\n\r\n* Fix unused_import rule reported locations and corrections when\r\n  multiple `@testable` imports are involved.  \r\n  [JP Simard](https://github.com/jpsim)",
    "createdAt" : "2020-02-12T06:43:28+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTIzNTg1MDI0",
    "owner" : "realm",
    "publishedAt" : "2020-02-12T06:50:54+09:00",
    "repository" : "SwiftLint",
    "title" : "0.39.1: The Laundromat has a Rotating Door",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.39.1",
    "version" : "0.39.1"
  },
  {
    "body" : "This is a prerelease version. It won't be published to Homebrew or CocoaPods. But there are many other ways to install:\r\n\r\n* Downloading the attached `SwiftLint.pkg` installer and launching it\r\n* Downloading the attached `portable_swiftlint.zip` archive, extracting it and moving the binary from `portable_swiftlint/swiftlint` to `/usr/local/bin` or elsewhere in your `PATH`\r\n* Using [Mint](https://github.com/yonaskolb/Mint): `mint install realm/SwiftLint@0.42.0-rc.1`\r\n* Cloning and building from source: `git clone https://github.com/realm/SwiftLint.git && cd SwiftLint && git checkout 0.42.0-rc.1 && make install`\r\n\r\n---\r\n\r\n#### Breaking\r\n\r\n* SwiftLint now requires Swift 5.2 or higher to build.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* SwiftLintFramework can no longer be integrated as a Carthage\r\n  depdendency.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3412](https://github.com/realm/SwiftLint/issues/3412)\r\n\r\n* `SwiftLint.xcworkspace` and `SwiftLint.xcproject` have been completely\r\n  removed. You can still use Xcode to develop SwiftLint by opening it as\r\n  a Swift Package by typing `xed .` or `xed Package.swift` from your\r\n  shell.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3412](https://github.com/realm/SwiftLint/issues/3412)\r\n\r\n* Renamed `statement_level` to `function_level` in `nesting` rule\r\n  configuration.  \r\n  [Skoti](https://github.com/Skoti)\r\n\r\n* Separated `type_level` and `function_level` counting in `nesting`\r\n  rule.  \r\n  [Skoti](https://github.com/Skoti)\r\n  [#1151](https://github.com/realm/SwiftLint/issues/1151)\r\n\r\n* `function_level` in `nesting` rule defaults to 2 levels.  \r\n  [Skoti](https://github.com/Skoti)\r\n\r\n* Added `check_nesting_in_closures_and_statements` in `nesting` rule to\r\n  search for nested types and functions within closures and statements.\r\n  Defaults to `true`.  \r\n  [Skoti](https://github.com/Skoti)\r\n\r\n* Renamed `OverridenSuperCallConfiguration` to\r\n  `OverriddenSuperCallConfiguration`.  \r\n  [Bryan Ricker](https://github.com/bricker)\r\n  [#3426](https://github.com/realm/SwiftLint/pull/3426)\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* Don't report `unavailable_function` violations for functions returning\r\n  `Never`.  \r\n  [Artem Garmash](https://github.com/agarmash)\r\n  [#3286](https://github.com/realm/SwiftLint/issues/3286)\r\n\r\n* Added `always_allow_one_type_in_functions` option in `nesting` rule\r\n  configuration. Defaults to `false`. This allows to nest one type\r\n  within a function even if breaking the maximum `type_level`.  \r\n  [Skoti](https://github.com/Skoti)\r\n  [#1151](https://github.com/realm/SwiftLint/issues/1151)\r\n  \r\n* Add option to specify a `child_config` / `parent_config` file\r\n  (local or remote) in any SwiftLint configuration file.\r\n  Allow passing multiple configuration files via the command line.\r\n  Improve documentation for multiple configuration files.  \r\n  [Frederick Pietschmann](https://github.com/fredpi)\r\n  [#1352](https://github.com/realm/SwiftLint/issues/1352)\r\n\r\n* Add an `always_keep_imports` configuration option for the\r\n  `unused_import` rule.  \r\n  [Keith Smiley](https://github.com/keith)\r\n\r\n* Add `comment_spacing` rule.  \r\n  [Noah Gilmore](https://github.com/noahsark769)\r\n  [#3233](https://github.com/realm/SwiftLint/issues/3233)\r\n\r\n* Add `codeclimate` reporter to generate JSON reports in codeclimate\r\n  format. Could be used for GitLab Code Quality MR Widget.  \r\n  [jkroepke](https://github.com/jkroepke)\r\n  [#3424](https://github.com/realm/SwiftLint/issues/3424)\r\n\r\n* Add `non_private_xctest_member` rule.  \r\n  [Keith Smiley](https://github.com/keith)\r\n\r\n* Add an `override_allowed_terms` configuration parameter to the\r\n  `inclusive_language` rule, with a default value of `mastercard`.  \r\n  [Dalton Claybrook](https://github.com/daltonclaybrook)\r\n  [#3415](https://github.com/realm/SwiftLint/issues/3415)\r\n\r\n#### Bug Fixes\r\n\r\n* Remove `@IBOutlet` and `@IBInspectable` from UnusedDeclarationRule.  \r\n  [Keith Smiley](https://github.com/keith)\r\n  [#3184](https://github.com/realm/SwiftLint/issues/3184)",
    "createdAt" : "2020-12-05T00:11:35+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTM0ODMxNzE4",
    "owner" : "realm",
    "publishedAt" : "2020-12-05T00:13:02+09:00",
    "repository" : "SwiftLint",
    "title" : "0.42.0-rc.1",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.42.0-rc.1",
    "version" : "0.42.0-rc.1"
  },
  {
    "body" : "This is a prerelease version. It won't be published to Homebrew or CocoaPods. But there are many other ways to install:\r\n\r\n* Downloading the attached `SwiftLint.pkg` installer and launching it\r\n* Downloading the attached `portable_swiftlint.zip` archive, extracting it and moving the binary from `portable_swiftlint/swiftlint` to `/usr/local/bin` or elsewhere in your `PATH`\r\n* Using [Mint](https://github.com/yonaskolb/Mint): `mint install realm/SwiftLint@0.42.0-rc.2`\r\n* Cloning and building from source: `git clone https://github.com/realm/SwiftLint.git && cd SwiftLint && git checkout 0.42.0-rc.2 && make install`\r\n\r\nChanges from 0.42.0-rc.1: https://github.com/realm/SwiftLint/compare/0.42.0-rc.1...0.42.0-rc.2\r\n\r\n---\r\n\r\n#### Breaking\r\n\r\n* SwiftLint now requires Swift 5.2 or higher to build.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* SwiftLintFramework can no longer be integrated as a Carthage\r\n  depdendency.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3412](https://github.com/realm/SwiftLint/issues/3412)\r\n\r\n* `SwiftLint.xcworkspace` and `SwiftLint.xcproject` have been completely\r\n  removed. You can still use Xcode to develop SwiftLint by opening it as\r\n  a Swift Package by typing `xed .` or `xed Package.swift` from your\r\n  shell.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3412](https://github.com/realm/SwiftLint/issues/3412)\r\n\r\n* Renamed `statement_level` to `function_level` in `nesting` rule\r\n  configuration.  \r\n  [Skoti](https://github.com/Skoti)\r\n\r\n* Separated `type_level` and `function_level` counting in `nesting`\r\n  rule.  \r\n  [Skoti](https://github.com/Skoti)\r\n  [#1151](https://github.com/realm/SwiftLint/issues/1151)\r\n\r\n* `function_level` in `nesting` rule defaults to 2 levels.  \r\n  [Skoti](https://github.com/Skoti)\r\n\r\n* Added `check_nesting_in_closures_and_statements` in `nesting` rule to\r\n  search for nested types and functions within closures and statements.\r\n  Defaults to `true`.  \r\n  [Skoti](https://github.com/Skoti)\r\n\r\n* Renamed `OverridenSuperCallConfiguration` to\r\n  `OverriddenSuperCallConfiguration`.  \r\n  [Bryan Ricker](https://github.com/bricker)\r\n  [#3426](https://github.com/realm/SwiftLint/pull/3426)\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* Don't report `@UIApplicationDelegateAdaptor` statements in `weak-delegate` rule.\r\n  [Richard Turton](https://github.com/jrturton)\r\n  [#3286](https://github.com/realm/SwiftLint/issues/3456)\r\n\r\n* Don't report `unavailable_function` violations for functions returning\r\n  `Never`.  \r\n  [Artem Garmash](https://github.com/agarmash)\r\n  [#3286](https://github.com/realm/SwiftLint/issues/3286)\r\n\r\n* Added `always_allow_one_type_in_functions` option in `nesting` rule\r\n  configuration. Defaults to `false`. This allows to nest one type\r\n  within a function even if breaking the maximum `type_level`.  \r\n  [Skoti](https://github.com/Skoti)\r\n  [#1151](https://github.com/realm/SwiftLint/issues/1151)\r\n  \r\n* Add option to specify a `child_config` / `parent_config` file\r\n  (local or remote) in any SwiftLint configuration file.\r\n  Allow passing multiple configuration files via the command line.\r\n  Improve documentation for multiple configuration files.  \r\n  [Frederick Pietschmann](https://github.com/fredpi)\r\n  [#1352](https://github.com/realm/SwiftLint/issues/1352)\r\n\r\n* Add an `always_keep_imports` configuration option for the\r\n  `unused_import` rule.  \r\n  [Keith Smiley](https://github.com/keith)\r\n\r\n* Add `comment_spacing` rule.  \r\n  [Noah Gilmore](https://github.com/noahsark769)\r\n  [#3233](https://github.com/realm/SwiftLint/issues/3233)\r\n\r\n* Add `codeclimate` reporter to generate JSON reports in codeclimate\r\n  format. Could be used for GitLab Code Quality MR Widget.  \r\n  [jkroepke](https://github.com/jkroepke)\r\n  [#3424](https://github.com/realm/SwiftLint/issues/3424)\r\n\r\n* Add `non_private_xctest_member` rule.  \r\n  [Keith Smiley](https://github.com/keith)\r\n\r\n* Add an `override_allowed_terms` configuration parameter to the\r\n  `inclusive_language` rule, with a default value of `mastercard`.  \r\n  [Dalton Claybrook](https://github.com/daltonclaybrook)\r\n  [#3415](https://github.com/realm/SwiftLint/issues/3415)\r\n\r\n#### Bug Fixes\r\n\r\n* Remove `@IBOutlet` and `@IBInspectable` from UnusedDeclarationRule.  \r\n  [Keith Smiley](https://github.com/keith)\r\n  [#3184](https://github.com/realm/SwiftLint/issues/3184)",
    "createdAt" : "2020-12-09T23:21:12+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTM1MDQ1OTM3",
    "owner" : "realm",
    "publishedAt" : "2020-12-09T23:24:52+09:00",
    "repository" : "SwiftLint",
    "title" : "0.42.0-rc.2",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.42.0-rc.2",
    "version" : "0.42.0-rc.2"
  },
  {
    "body" : "#### Breaking\r\n\r\n* SwiftLint now requires Swift 5.2 or higher to build.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* SwiftLintFramework can no longer be integrated as a Carthage\r\n  depdendency.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3412](https://github.com/realm/SwiftLint/issues/3412)\r\n\r\n* `SwiftLint.xcworkspace` and `SwiftLint.xcproject` have been completely\r\n  removed. You can still use Xcode to develop SwiftLint by opening it as\r\n  a Swift Package by typing `xed .` or `xed Package.swift` from your\r\n  shell.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3412](https://github.com/realm/SwiftLint/issues/3412)\r\n\r\n* Renamed `statement_level` to `function_level` in `nesting` rule\r\n  configuration.  \r\n  [Skoti](https://github.com/Skoti)\r\n\r\n* Separated `type_level` and `function_level` counting in `nesting`\r\n  rule.  \r\n  [Skoti](https://github.com/Skoti)\r\n  [#1151](https://github.com/realm/SwiftLint/issues/1151)\r\n\r\n* `function_level` in `nesting` rule defaults to 2 levels.  \r\n  [Skoti](https://github.com/Skoti)\r\n\r\n* Added `check_nesting_in_closures_and_statements` in `nesting` rule to\r\n  search for nested types and functions within closures and statements.\r\n  Defaults to `true`.  \r\n  [Skoti](https://github.com/Skoti)\r\n\r\n* Renamed `OverridenSuperCallConfiguration` to\r\n  `OverriddenSuperCallConfiguration`.  \r\n  [Bryan Ricker](https://github.com/bricker)\r\n  [#3426](https://github.com/realm/SwiftLint/pull/3426)\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* Don't report `@UIApplicationDelegateAdaptor` statements in `weak-delegate` rule.\r\n  [Richard Turton](https://github.com/jrturton)\r\n  [#3286](https://github.com/realm/SwiftLint/issues/3456)\r\n\r\n* Don't report `unavailable_function` violations for functions returning\r\n  `Never`.  \r\n  [Artem Garmash](https://github.com/agarmash)\r\n  [#3286](https://github.com/realm/SwiftLint/issues/3286)\r\n\r\n* Added `always_allow_one_type_in_functions` option in `nesting` rule\r\n  configuration. Defaults to `false`. This allows to nest one type\r\n  within a function even if breaking the maximum `type_level`.  \r\n  [Skoti](https://github.com/Skoti)\r\n  [#1151](https://github.com/realm/SwiftLint/issues/1151)\r\n  \r\n* Add option to specify a `child_config` / `parent_config` file\r\n  (local or remote) in any SwiftLint configuration file.\r\n  Allow passing multiple configuration files via the command line.\r\n  Improve documentation for multiple configuration files.  \r\n  [Frederick Pietschmann](https://github.com/fredpi)\r\n  [#1352](https://github.com/realm/SwiftLint/issues/1352)\r\n\r\n* Add an `always_keep_imports` configuration option for the\r\n  `unused_import` rule.  \r\n  [Keith Smiley](https://github.com/keith)\r\n\r\n* Add `comment_spacing` rule.  \r\n  [Noah Gilmore](https://github.com/noahsark769)\r\n  [#3233](https://github.com/realm/SwiftLint/issues/3233)\r\n\r\n* Add `codeclimate` reporter to generate JSON reports in codeclimate\r\n  format. Could be used for GitLab Code Quality MR Widget.  \r\n  [jkroepke](https://github.com/jkroepke)\r\n  [#3424](https://github.com/realm/SwiftLint/issues/3424)\r\n\r\n* Add an `override_allowed_terms` configuration parameter to the\r\n  `inclusive_language` rule, with a default value of `mastercard`.  \r\n  [Dalton Claybrook](https://github.com/daltonclaybrook)\r\n  [#3415](https://github.com/realm/SwiftLint/issues/3415)\r\n\r\n#### Bug Fixes\r\n\r\n* Remove `@IBOutlet` and `@IBInspectable` from UnusedDeclarationRule.  \r\n  [Keith Smiley](https://github.com/keith)\r\n  [#3184](https://github.com/realm/SwiftLint/issues/3184)",
    "createdAt" : "2020-12-15T05:26:56+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTM1MjU3MDcw",
    "owner" : "realm",
    "publishedAt" : "2020-12-15T05:30:52+09:00",
    "repository" : "SwiftLint",
    "title" : "0.42.0: He Chutes, He Scores",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.42.0",
    "version" : "0.42.0"
  },
  {
    "body" : "This is a prerelease version. It won't be published to Homebrew or CocoaPods. But there are many other ways to install:\r\n\r\n* Downloading the attached `SwiftLint.pkg` installer and launching it\r\n* Downloading the attached `portable_swiftlint.zip` archive, extracting it and moving the binary from `portable_swiftlint/swiftlint` to `/usr/local/bin` or elsewhere in your `PATH`\r\n* Using [Mint](https://github.com/yonaskolb/Mint): `mint install realm/SwiftLint@0.43.0-rc.1`\r\n* Cloning and building from source: `git clone https://github.com/realm/SwiftLint.git && cd SwiftLint && git checkout 0.43.0-rc.1 && make install`\r\n\r\n#### Breaking\r\n\r\n* The command line syntax has slightly changed due to migrating from the\r\n  Commandant command line parsing library to swift-argument-parser.\r\n  For the most part the breaking changes are all to make the syntax more\r\n  unix compliant and intuitive to use. For example, commands such as\r\n  `swiftlint --help` or `swiftlint -h` now work as expected.\r\n  The help output from various commands has greatly improved as well.\r\n  Notably: `swiftlint autocorrect` was removed in favor of\r\n  `swiftlint --fix`.\r\n  Previous commands should continue to work temporarily to help with the\r\n  transition. Please let us know if there's a command that no longer\r\n  works and we'll attempt to add a bridge to help with its transition.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* Support relative paths in compilation databases for SwiftLint analyzer\r\n  rules.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n#### Bug Fixes\r\n\r\n* Fix typos in configuration options for `file_name` rule.  \r\n  [advantis](https://github.com/advantis)",
    "createdAt" : "2021-01-23T03:53:13+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTM2Nzg0MzM1",
    "owner" : "realm",
    "publishedAt" : "2021-01-23T03:54:41+09:00",
    "repository" : "SwiftLint",
    "title" : "0.43.0-rc.1: Clothes Line Interface",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.43.0-rc.1",
    "version" : "0.43.0-rc.1"
  },
  {
    "body" : "This is a prerelease version. It won't be published to Homebrew or CocoaPods. But there are many other ways to install:\r\n\r\n* Downloading the attached `SwiftLint.pkg` installer and launching it\r\n* Downloading the attached `portable_swiftlint.zip` archive, extracting it and moving the binary from `portable_swiftlint/swiftlint` to `/usr/local/bin` or elsewhere in your `PATH`\r\n* Using [Mint](https://github.com/yonaskolb/Mint): `mint install realm/SwiftLint@0.43.0-rc.2`\r\n* Cloning and building from source: `git clone https://github.com/realm/SwiftLint.git && cd SwiftLint && git checkout 0.43.0-rc.2 && make install`\r\n\r\nChanges from 0.43.0-rc.1: https://github.com/realm/SwiftLint/compare/0.43.0-rc.1...0.43.0-rc.2\r\n\r\n#### Breaking\r\n\r\n* The command line syntax has slightly changed due to migrating from the\r\n  Commandant command line parsing library to swift-argument-parser.\r\n  For the most part the breaking changes are all to make the syntax more\r\n  unix compliant and intuitive to use. For example, commands such as\r\n  `swiftlint --help` or `swiftlint -h` now work as expected.\r\n  The help output from various commands has greatly improved as well.\r\n  Notably: `swiftlint autocorrect` was removed in favor of\r\n  `swiftlint --fix`.\r\n  Previous commands should continue to work temporarily to help with the\r\n  transition. Please let us know if there's a command that no longer\r\n  works and we'll attempt to add a bridge to help with its transition.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* Support relative paths in compilation databases for SwiftLint analyzer\r\n  rules.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* Add opt-in rule `discouraged_assert` to encourage the use of\r\n  `assertionFailure()` and/or `preconditionFailure()` over\r\n  `assert(false)`.  \r\n  [Otavio Cordeiro](https://github.com/otaviocc)\r\n\r\n#### Bug Fixes\r\n\r\n* Fix typos in configuration options for `file_name` rule.  \r\n  [advantis](https://github.com/advantis)\r\n\r\n* Fix violation location and misplaced corrections for some function\r\n  references in `explicit_self` rule.  \r\n  [JP Simard](https://github.com/jpsim)",
    "createdAt" : "2021-01-30T05:24:33+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTM3MTAzNzQ5",
    "owner" : "realm",
    "publishedAt" : "2021-01-30T05:26:53+09:00",
    "repository" : "SwiftLint",
    "title" : "0.43.0-rc.2: Clothes Line Interface",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.43.0-rc.2",
    "version" : "0.43.0-rc.2"
  },
  {
    "body" : "This is a prerelease version. It won't be published to Homebrew or CocoaPods. But there are many other ways to install:\r\n\r\n* Downloading the attached `SwiftLint.pkg` installer and launching it\r\n* Downloading the attached `portable_swiftlint.zip` archive, extracting it and moving the binary from `portable_swiftlint/swiftlint` to `/usr/local/bin` or elsewhere in your `PATH`\r\n* Using [Mint](https://github.com/yonaskolb/Mint): `mint install realm/SwiftLint@0.43.0-rc.3`\r\n* Cloning and building from source: `git clone https://github.com/realm/SwiftLint.git && cd SwiftLint && git checkout 0.43.0-rc.3 && make install`\r\n\r\nChanges from 0.43.0-rc.2: https://github.com/realm/SwiftLint/compare/0.43.0-rc.2...0.43.0-rc.3\r\n\r\n#### Breaking\r\n\r\n* The command line syntax has slightly changed due to migrating from the\r\n  Commandant command line parsing library to swift-argument-parser.\r\n  For the most part the breaking changes are all to make the syntax more\r\n  unix compliant and intuitive to use. For example, commands such as\r\n  `swiftlint --help` or `swiftlint -h` now work as expected.\r\n  The help output from various commands has greatly improved as well.\r\n  Notably: `swiftlint autocorrect` was removed in favor of\r\n  `swiftlint --fix`.\r\n  Previous commands should continue to work temporarily to help with the\r\n  transition. Please let us know if there's a command that no longer\r\n  works and we'll attempt to add a bridge to help with its transition.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* Added `allows_single_line` option in `multiline_parameters` rule\r\n  configuration. Defaults to `true`. This enforces parameters in a method\r\n  with multiple parameters to always be in different lines.  \r\n  [Otavio Cordeiro](https://github.com/otaviocc)\r\n\r\n* Support relative paths in compilation databases for SwiftLint analyzer\r\n  rules.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* Add opt-in rule `discouraged_assert` to encourage the use of\r\n  `assertionFailure()` and/or `preconditionFailure()` over\r\n  `assert(false)`.  \r\n  [Otavio Cordeiro](https://github.com/otaviocc)\r\n\r\n* Add opt-in rule `private_subject` rule which warns against\r\n  public Combine subjects.  \r\n  [Otavio Cordeiro](https://github.com/otaviocc)\r\n\r\n* Allow configuring related USRs to skip in UnusedDeclarationRule by\r\n  specifying a list of USRs in the `related_usrs_to_skip` key.\r\n  For example you might have custom source tooling that does something\r\n  with types conforming to a procotol even if that type is never\r\n  explicitly referenced by other code.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n#### Bug Fixes\r\n\r\n* Fix typos in configuration options for `file_name` rule.  \r\n  [advantis](https://github.com/advantis)\r\n\r\n* Fix violation location and misplaced corrections for some function\r\n  references in `explicit_self` rule.  \r\n  [JP Simard](https://github.com/jpsim)",
    "createdAt" : "2021-02-18T05:43:04+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTM4MTkyMTE4",
    "owner" : "realm",
    "publishedAt" : "2021-02-18T05:49:46+09:00",
    "repository" : "SwiftLint",
    "title" : "0.43.0-rc.3: Clothes Line Interface",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.43.0-rc.3",
    "version" : "0.43.0-rc.3"
  },
  {
    "body" : "This is a prerelease version. It won't be published to Homebrew or CocoaPods. But there are many other ways to install:\r\n\r\n* Downloading the attached `SwiftLint.pkg` installer and launching it\r\n* Downloading the attached `portable_swiftlint.zip` archive, extracting it and moving the binary from `portable_swiftlint/swiftlint` to `/usr/local/bin` or elsewhere in your `PATH`\r\n* Using [Mint](https://github.com/yonaskolb/Mint): `mint install realm/SwiftLint@0.43.0-rc.4`\r\n* Cloning and building from source: `git clone https://github.com/realm/SwiftLint.git && cd SwiftLint && git checkout 0.43.0-rc.4 && make install`\r\n\r\nChanges from 0.43.0-rc.3: https://github.com/realm/SwiftLint/compare/0.43.0-rc.3...0.43.0-rc.4\r\n\r\n#### Breaking\r\n\r\n* The command line syntax has slightly changed due to migrating from the\r\n  Commandant command line parsing library to swift-argument-parser.\r\n  For the most part the breaking changes are all to make the syntax more\r\n  unix compliant and intuitive to use. For example, commands such as\r\n  `swiftlint --help` or `swiftlint -h` now work as expected.\r\n  The help output from various commands has greatly improved as well.\r\n  Notably: `swiftlint autocorrect` was removed in favor of\r\n  `swiftlint --fix`.\r\n  Previous commands should continue to work temporarily to help with the\r\n  transition. Please let us know if there's a command that no longer\r\n  works and we'll attempt to add a bridge to help with its transition.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* Configuration files now consistently have their `included`/`excluded`\r\n  relative file paths applied relative to their location in the file\r\n  system. Previously the root configuration file applied these relative\r\n  to the current working directory, but nested configurations applied\r\n  these to their location in the file system.  \r\n  [Frederick Pietschmann](https://github.com/fredpi)\r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* The `discarded_notification_center_observer` is now opt-in due to some\r\n  difficult to resolve false positives, such as\r\n  [#3498](https://github.com/realm/SwiftLint/issues/3498).  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* Added `allows_single_line` option in `multiline_parameters` rule\r\n  configuration. Defaults to `true`. This enforces parameters in a method\r\n  with multiple parameters to always be in different lines.  \r\n  [Otavio Cordeiro](https://github.com/otaviocc)\r\n\r\n* Support relative paths in compilation databases for SwiftLint analyzer\r\n  rules.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* Add opt-in rule `discouraged_assert` to encourage the use of\r\n  `assertionFailure()` and/or `preconditionFailure()` over\r\n  `assert(false)`.  \r\n  [Otavio Cordeiro](https://github.com/otaviocc)\r\n\r\n* Add opt-in rule `private_subject` rule which warns against\r\n  public Combine subjects.  \r\n  [Otavio Cordeiro](https://github.com/otaviocc)\r\n\r\n* Tweak the auto-correction result console output for clarity.  \r\n  [mokagio](https://github.com/mokagio)\r\n  [#3522](https://github.com/realm/SwiftLint/issues/3522)\r\n\r\n* Allow configuring related USRs to skip in UnusedDeclarationRule by\r\n  specifying a list of USRs in the `related_usrs_to_skip` key.\r\n  For example you might have custom source tooling that does something\r\n  with types conforming to a procotol even if that type is never\r\n  explicitly referenced by other code.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* Make `strong_iboutlet` rule correctable.  \r\n  [MaxHaertwig](https://github.com/maxhaertwig)\r\n\r\n* Add `legacy_objc_type` opt-in rule to warn against using\r\n  bridged Objective-C reference types instead of Swift value types.  \r\n  [Blake](https://github.com/72A12F4E)\r\n  [#2758](https://github.com/realm/SwiftLint/issues/2758)\r\n\r\n* Support Swift Playground control comments in the `comment_spacing`\r\n  rule.  \r\n  [Thomas Goyne](https://github.com/tgoyne)\r\n\r\n* [Internal] Integrate OS Signposts to help profile SwiftLint\r\n  performance.  \r\n  [jpsim](https://github.com/jpsim)\r\n\r\n* Update CodeClimateReporter to produce relative paths.  \r\n  [bmwalters](https://github.com/bmwalters)\r\n\r\n* Add Bool violation reporting in `redundant_type_annotation`.  \r\n  [Artem Garmash](https://github.com/agarmash)\r\n  [#3423](https://github.com/realm/SwiftLint/issues/3423)\r\n\r\n* Log references to a specified module when running the `unused_import`\r\n  by setting the `SWIFTLINT_LOG_MODULE_USAGE=<module-name>` environment\r\n  variable when running analyze.  \r\n  [jpsim](https://github.com/jpsim)\r\n\r\n#### Bug Fixes\r\n\r\n* Fix `custom_rules` merging when the parent configuration is based on\r\n  `only_rules`.  \r\n  [Frederick Pietschmann](https://github.com/fredpi)\r\n  [#3468](https://github.com/realm/SwiftLint/issues/3468)\r\n\r\n* Fix misleading warnings about rules defined in the `custom_rules` not\r\n  being available (when using multiple configurations).  \r\n  [Frederick Pietschmann](https://github.com/fredpi)\r\n  [#3472](https://github.com/realm/SwiftLint/issues/3472)\r\n  \r\n* Fix bug that prevented the reconfiguration of a custom rule in a child\r\n  config.  \r\n  [Frederick Pietschmann](https://github.com/fredpi)\r\n  [#3477](https://github.com/realm/SwiftLint/issues/3477)\r\n  \r\n* Fix typos in configuration options for `file_name` rule.  \r\n  [advantis](https://github.com/advantis)\r\n  \r\n* Fix issue that prevented the inclusion of a configuration file from a\r\n  parent folder.  \r\n  [Frederick Pietschmann](https://github.com/fredpi)\r\n  [#3485](https://github.com/realm/SwiftLint/issues/3485)\r\n\r\n* Fix violation location and misplaced corrections for some function\r\n  references in `explicit_self` rule.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* Fix false positives with result builders in `unused_declaration`.  \r\n  [JP Simard](https://github.com/jpsim)",
    "createdAt" : "2021-02-27T05:08:43+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTM4ODE5OTU5",
    "owner" : "realm",
    "publishedAt" : "2021-02-27T05:09:58+09:00",
    "repository" : "SwiftLint",
    "title" : "0.43.0-rc.4: Clothes Line Interface",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.43.0-rc.4",
    "version" : "0.43.0-rc.4"
  },
  {
    "body" : "#### Breaking\r\n\r\n* The command line syntax has slightly changed due to migrating from the\r\n  Commandant command line parsing library to swift-argument-parser.\r\n  For the most part the breaking changes are all to make the syntax more\r\n  unix compliant and intuitive to use. For example, commands such as\r\n  `swiftlint --help` or `swiftlint -h` now work as expected.\r\n  The help output from various commands has greatly improved as well.\r\n  Notably: `swiftlint autocorrect` was removed in favor of\r\n  `swiftlint --fix`.\r\n  Previous commands should continue to work temporarily to help with the\r\n  transition. Please let us know if there's a command that no longer\r\n  works and we'll attempt to add a bridge to help with its transition.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* Configuration files now consistently have their `included`/`excluded`\r\n  relative file paths applied relative to their location in the file\r\n  system. Previously the root configuration file applied these relative\r\n  to the current working directory, but nested configurations applied\r\n  these to their location in the file system.  \r\n  [Frederick Pietschmann](https://github.com/fredpi)\r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* The `discarded_notification_center_observer` is now opt-in due to some\r\n  difficult to resolve false positives, such as\r\n  [#3498](https://github.com/realm/SwiftLint/issues/3498).  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* Added `allows_single_line` option in `multiline_parameters` rule\r\n  configuration. Defaults to `true`. This enforces parameters in a method\r\n  with multiple parameters to always be in different lines.  \r\n  [Otavio Cordeiro](https://github.com/otaviocc)\r\n\r\n* Support relative paths in compilation databases for SwiftLint analyzer\r\n  rules.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* Add opt-in rule `discouraged_assert` to encourage the use of\r\n  `assertionFailure()` and/or `preconditionFailure()` over\r\n  `assert(false)`.  \r\n  [Otavio Cordeiro](https://github.com/otaviocc)\r\n\r\n* Adds `balanced_xctest_lifecycle` opt-in rule to enforce balanced `setUp`\r\n  and `tearDown` methods in a test class.  \r\n  [Otavio Cordeiro](https://github.com/otaviocc)\r\n  [#3452](https://github.com/realm/SwiftLint/issues/3452)\r\n\r\n* Tweak the auto-correction result console output for clarity.  \r\n  [mokagio](https://github.com/mokagio)\r\n  [#3522](https://github.com/realm/SwiftLint/issues/3522)\r\n\r\n* Allow configuring related USRs to skip in UnusedDeclarationRule by\r\n  specifying a list of USRs in the `related_usrs_to_skip` key.\r\n  For example you might have custom source tooling that does something\r\n  with types conforming to a procotol even if that type is never\r\n  explicitly referenced by other code.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* Make `strong_iboutlet` rule correctable.  \r\n  [MaxHaertwig](https://github.com/maxhaertwig)\r\n\r\n* Add `legacy_objc_type` opt-in rule to warn against using\r\n  bridged Objective-C reference types instead of Swift value types.  \r\n  [Blake](https://github.com/72A12F4E)\r\n  [#2758](https://github.com/realm/SwiftLint/issues/2758)\r\n\r\n* Support Swift Playground control comments in the `comment_spacing`\r\n  rule.  \r\n  [Thomas Goyne](https://github.com/tgoyne)\r\n\r\n* [Internal] Integrate OS Signposts to help profile SwiftLint\r\n  performance.  \r\n  [jpsim](https://github.com/jpsim)\r\n\r\n* Update CodeClimateReporter to produce relative paths.  \r\n  [bmwalters](https://github.com/bmwalters)\r\n\r\n* Add Bool violation reporting in `redundant_type_annotation`.  \r\n  [Artem Garmash](https://github.com/agarmash)\r\n  [#3423](https://github.com/realm/SwiftLint/issues/3423)\r\n\r\n* Add a new `capture_variable` analyzer rule to warn about listing a\r\n  non-constant (`var`) variable in a closure's capture list. This\r\n  captures the variable's value at closure creation time instead of\r\n  closure call time, which may be unexpected.  \r\n  [Laszlo Kustra](https://github.com/kustra)\r\n\r\n* Log references to a specified module when running the `unused_import`\r\n  by setting the `SWIFTLINT_LOG_MODULE_USAGE=<module-name>` environment\r\n  variable when running analyze.  \r\n  [jpsim](https://github.com/jpsim)\r\n\r\n* Add opt-in rule `private_subject` rule which warns against\r\n  public Combine subjects.  \r\n  [Otavio Cordeiro](https://github.com/otaviocc)\r\n\r\n#### Bug Fixes\r\n\r\n* Fix `custom_rules` merging when the parent configuration is based on\r\n  `only_rules`.  \r\n  [Frederick Pietschmann](https://github.com/fredpi)\r\n  [#3468](https://github.com/realm/SwiftLint/issues/3468)\r\n\r\n* Fix misleading warnings about rules defined in the `custom_rules` not\r\n  being available (when using multiple configurations).  \r\n  [Frederick Pietschmann](https://github.com/fredpi)\r\n  [#3472](https://github.com/realm/SwiftLint/issues/3472)\r\n  \r\n* Fix bug that prevented the reconfiguration of a custom rule in a child\r\n  config.  \r\n  [Frederick Pietschmann](https://github.com/fredpi)\r\n  [#3477](https://github.com/realm/SwiftLint/issues/3477)\r\n  \r\n* Fix typos in configuration options for `file_name` rule.  \r\n  [advantis](https://github.com/advantis)\r\n  \r\n* Fix issue that prevented the inclusion of a configuration file from a\r\n  parent folder.  \r\n  [Frederick Pietschmann](https://github.com/fredpi)\r\n  [#3485](https://github.com/realm/SwiftLint/issues/3485)\r\n\r\n* Fix violation location and misplaced corrections for some function\r\n  references in `explicit_self` rule.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* Fix false positives with result builders in `unused_declaration`.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* Find more unused declarations in `unused_declaration`.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* Fix parsing xcode logs for analyzer rules for target names with\r\n  spaces.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3021](https://github.com/realm/SwiftLint/issues/3021)",
    "createdAt" : "2021-03-04T06:01:42+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTM5MjEyMjc3",
    "owner" : "realm",
    "publishedAt" : "2021-03-04T06:02:02+09:00",
    "repository" : "SwiftLint",
    "title" : "0.43.0: Clothes Line Interface",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.43.0",
    "version" : "0.43.0"
  },
  {
    "body" : "#### Breaking\r\n\r\n* None.\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* None.\r\n\r\n#### Bug Fixes\r\n\r\n* Fix the File Length rule name.  \r\n  [onato](https://github.com/onato)\r\n  [#3560](https://github.com/realm/SwiftLint/issues/3560)\r\n\r\n* Re-add `--format` flag to reformat Swift files using SourceKit.\r\n  Only applied with `--fix`/`--autocorrect`.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3571](https://github.com/realm/SwiftLint/issues/3571)",
    "createdAt" : "2021-03-16T01:02:26+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTM5ODI3OTMx",
    "owner" : "realm",
    "publishedAt" : "2021-03-16T01:03:01+09:00",
    "repository" : "SwiftLint",
    "title" : "0.43.1: Laundroformat",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.43.1",
    "version" : "0.43.1"
  },
  {
    "body" : "#### Breaking\r\n\r\n* None.\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* Add support for params files for file paths.  \r\n  [keith](https://github.com/keith)\r\n\r\n#### Bug Fixes\r\n\r\n* Fix .swift-version to use Swift 5.1.  \r\n  [cfiken](https://github.com/cfiken)\r\n  [#3297](https://github.com/realm/SwiftLint/issues/3297)\r\n\r\n* Fix test `testDetectSwiftVersion` for Swift 5.2.5.  \r\n  [cfiken](https://github.com/cfiken)\r\n  [#3299](https://github.com/realm/SwiftLint/pull/3299)",
    "createdAt" : "2020-08-28T00:33:45+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTMwMjI3Mjk0",
    "owner" : "realm",
    "publishedAt" : "2020-08-28T00:35:05+09:00",
    "repository" : "SwiftLint",
    "title" : "0.40.1: A Baffling Response",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.40.1",
    "version" : "0.40.1"
  },
  {
    "body" : "#### Breaking\r\n\r\n* None.\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* Improve description for `empty_enum_arguments`.  \r\n  [Lukas Schmidt](https://github.com/lightsprint09)\r\n\r\n* Add support for `excluded_match_kinds` custom rule config parameter.  \r\n  [Ryan Demo](https://github.com/ryandemo)\r\n\r\n#### Bug Fixes\r\n\r\n* None.",
    "createdAt" : "2020-09-11T11:25:10+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTMxMDk4Mzg5",
    "owner" : "realm",
    "publishedAt" : "2020-09-11T11:37:07+09:00",
    "repository" : "SwiftLint",
    "title" : "0.40.2: Demo Unit",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.40.2",
    "version" : "0.40.2"
  },
  {
    "body" : "#### Breaking\r\n\r\n* None.\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* Make the `unused_declaration` rule run 3-5 times faster, and\r\n  enable it to detect more occurrences of unused declarations.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* Remove unneeded internal locking overhead, leading to increased\r\n  performance in multithreaded operations.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* Skip correcting file if the swift parser reports a warning or an\r\n  error.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3343](https://github.com/realm/SwiftLint/issues/3343)\r\n\r\n#### Bug Fixes\r\n\r\n* Rule `unused_capture_list` should not be triggered by self keyword.  \r\n  [hank121314](https://github.com/hank121314)\r\n  [#2367](https://github.com/realm/SwiftLint/issues/3267)\r\n\r\n* Rule `multiple_closures_with_trailing_closure` no longer triggers when Swift\r\n  5.3's 'multiple trailing closures' feature is used.\r\n  [Jumhyn](https://github.com/jumhyn)\r\n  [#3295](https://github.com/realm/SwiftLint/issues/3295)",
    "createdAt" : "2020-09-23T06:22:18+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTMxNjc2MjMw",
    "owner" : "realm",
    "publishedAt" : "2020-09-23T06:24:55+09:00",
    "repository" : "SwiftLint",
    "title" : "0.40.3: Greased Up Drum Bearings",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.40.3",
    "version" : "0.40.3"
  },
  {
    "body" : "![laundromat voting](https://cms.qz.com/wp-content/uploads/2012/11/laundromat-voting-11062012-web.jpg?quality=75&strip=all&w=550&h=310)\r\n\r\n#### Breaking\r\n\r\n* Changed behavior of `strict` option on `lint` and `analyze` to treat\r\n  all warnings as errors instead of only changing the exit code.  \r\n  [Jeehut](https://github.com/Jeehut)\r\n  [#3312](https://github.com/realm/SwiftLint/issues/3312)\r\n\r\n* Removed the `unneeded_notification_center_removal` rule because it was\r\n  based on an incorrect premise.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3338](https://github.com/realm/SwiftLint/issues/3338)\r\n\r\n* The `whitelist_rules` configuration key has been renamed to\r\n  `only_rules`.  \r\n  [Dalton Claybrook](https://github.com/daltonclaybrook)\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* Add `use-alternative-excluding` option to speed up linting in cases\r\n  described in [#3325](https://github.com/realm/SwiftLint/pull/3325).\r\n  This option yields different exclusion behavior.  \r\n  [JohnReeze](https://github.com/JohnReeze)\r\n  [#3304](https://github.com/realm/SwiftLint/issues/3304)\r\n\r\n* Add `test_case_accessibility` rule.  \r\n  [Keith Smiley](https://github.com/keith)\r\n  [#3376](https://github.com/realm/SwiftLint/issues/3376)\r\n\r\n* Add more details to `CONTRIBUTING.md`.  \r\n  [mknabbe](https://github.com/mknabbe)\r\n  [#1280](https://github.com/realm/SwiftLint/issues/1280)\r\n\r\n* Remove `@IBOutlet` and `@IBInspectable` from UnusedDeclarationRule.  \r\n  [Keith Smiley](https://github.com/keith)\r\n  [#3184](https://github.com/realm/SwiftLint/issues/3184)\r\n\r\n* Add `allow_multiline_func` configuration option to `opening_brace`\r\n  rule, to allow placing `{` on new line in case of multiline function.\r\n  Defaults to `false`.  \r\n  [Zsolt Kov√°cs](https://github.com/lordzsolt)\r\n  [#1921](https://github.com/realm/SwiftLint/issues/1921)\r\n\r\n* Update the `nslocalizedstring_key` rule to validate the `comment`\r\n  argument in addition to the `key` argument.  \r\n  [Dalton Claybrook](https://github.com/daltonclaybrook)\r\n  [#3334](https://github.com/realm/SwiftLint/issues/3334)\r\n\r\n* Add `inclusive_language` rule to encourage the use of inclusive\r\n  language that avoids discrimination against groups of people.  \r\n  [Dalton Claybrook](https://github.com/daltonclaybrook)\r\n\r\n* Add `prefer_nimble` opt-in rule to encourage using Nimble matchers\r\n  over the XCTest ones.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#3293](https://github.com/realm/SwiftLint/issues/3293)\r\n\r\n* `unused_closure_parameter` rule now validates closures outside of\r\n  function calls.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#1082](https://github.com/realm/SwiftLint/issues/1082)\r\n\r\n* Improve documentation for running SwiftLint as Xcode build phase.  \r\n  [Christian Mitteldorf](https://github.com/christiankm)\r\n  [#3169](https://github.com/realm/SwiftLint/issues/3169)\r\n\r\n* Add `skip_aligned_constants` (defaults to `true`) and\r\n  `lines_look_around` (defaults to `2`) configuration parameters to the\r\n  `operator_usage_whitespace` rule.  \r\n  [Paul Taykalo](https://github.com/PaulTaykalo)\r\n  [#3388](https://github.com/realm/SwiftLint/issues/3388)\r\n\r\n#### Bug Fixes\r\n\r\n* Fix parsing of Xcode 12 compiler logs for analyzer rules.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3365](https://github.com/realm/SwiftLint/issues/3365)\r\n\r\n* Fix some SwiftUI unused declaration rule false positives.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3365](https://github.com/realm/SwiftLint/issues/3365)\r\n\r\n* Fix some false positives in rule `explicit_self`.  \r\n  [Sven M√ºnnich](https://github.com/svenmuennich)\r\n\r\n* Fix incorrect autocorrection in `prefer_zero_over_explicit_init` rule.  \r\n  [Paul Taykalo](https://github.com/PaulTaykalo)\r\n\r\n* Rule `unused_capture_list` should not be triggered by unowned self\r\n  keyword.  \r\n  [hank121314](https://github.com/hank121314)\r\n  [#3389](https://github.com/realm/SwiftLint/issues/3389)\r\n\r\n* Fix severity configuration for `indentation_width`.  \r\n  [Samasaur1](https://github.com/Samasaur1)\r\n  [#3346](https://github.com/realm/SwiftLint/issues/3389)\r\n\r\n* Fix DuplicateImportsRule's support for import attributes.  \r\n  [Keith Smiley](https://github.com/keith)\r\n  [#3402](https://github.com/realm/SwiftLint/issues/3402)\r\n\r\n* Allow \"allowed symbols\" as first character in `identifier_name`.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3306](https://github.com/realm/SwiftLint/issues/3306)\r\n\r\n* Fix false positives with parameterized attributes in `attributes`.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3316](https://github.com/realm/SwiftLint/issues/3316)\r\n\r\n* Fix some missed cases in rule `unavailable_function`.  \r\n  [Quinn Taylor](https://github.com/quinntaylor)\r\n  [#3374](https://github.com/realm/SwiftLint/issues/3374)\r\n\r\n* Fix incorrect violation message for line length violations.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3333](https://github.com/realm/SwiftLint/issues/3333)\r\n\r\n* Fix inconsistency in `operator_usage_whitespace` rule.  \r\n  [Paul Taykalo](https://github.com/PaulTaykalo)\r\n  [#3321](https://github.com/realm/SwiftLint/issues/3321)\r\n\r\n* Fix false positives in `convenience_type` rule for types that cannot\r\n  be converted to enums.  \r\n  [ZevEisenberg](https://github.com/ZevEisenberg)\r\n  [#3033](https://github.com/realm/SwiftLint/issues/3033)\r\n\r\n* Fix finding a nested config when a single file path is passed.  \r\n  [Seth Friedman](https://github.com/sethfri)\r\n\r\n* Fix incorrect calculation of the root path when a directory in the\r\n  tree is passed in as a path argument.  \r\n  [Seth Friedman](https://github.com/sethfri)\r\n  [#3383](https://github.com/realm/SwiftLint/issues/3383)\r\n\r\n* Fix rare false positive in `toggle_bool` rule.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#3398](https://github.com/realm/SwiftLint/issues/3398)",
    "createdAt" : "2020-11-09T02:07:40+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTMzNjE0ODkx",
    "owner" : "realm",
    "publishedAt" : "2020-11-09T02:10:47+09:00",
    "repository" : "SwiftLint",
    "title" : "0.41.0: World‚Äôs Cleanest Voting Booth",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.41.0",
    "version" : "0.41.0"
  },
  {
    "body" : "#### Breaking\r\n\r\n* SwiftLint now requires Swift 5.3 or higher to build.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* Add configuration options to `missing_docs` rule:\r\n  * `excludes_extensions` defaults to `true` to skip reporting violations\r\n     for extensions with missing documentation comments.\r\n  * `excludes_inherited_types` defaults to `true` to skip reporting\r\n     violations for inherited declarations, like subclass overrides.  \r\n  [Ben Fox](https://github.com/bdfox325)\r\n\r\n* Fix false negative on `redundant_optional_initialization` rule when variable\r\n  has observers.  \r\n  [Isaac Ressler](https://github.com/iressler)\r\n  [#3621](https://github.com/realm/SwiftLint/issues/3621)\r\n\r\n* Make `test_case_accessibility` rule identify invalid test functions\r\n  with parameters.  \r\n  [Keith Smiley](https://github.com/keith)\r\n  [#3612](https://github.com/realm/SwiftLint/pull/3612)\r\n\r\n* Add `duplicated_key_in_dictionary_literal` rule to warn against duplicated\r\n  keys in dictionary literals.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  \r\n* Fix the rule name from \"Colon\" to \"Colon Spacing\" to improve phrasing.  \r\n  [Radu](https://github.com/raduciobanu002)\r\n  [#3587](https://github.com/realm/SwiftLint/issues/3587)\r\n\r\n* Add `discouraged_none_name` opt-in rule to discourage naming cases and\r\n  static/class members \"none\", which can conflict with Swift's\r\n  `Optional<T>.none` when checking equality.  \r\n  [Kane Cheshire](https://github.com/kanecheshire)\r\n  [#3624](https://github.com/realm/SwiftLint/issues/3624)\r\n\r\n* Improve language and positioning of `file_length` warnings when\r\n  `ignore_comment_only_lines: true`.  \r\n  [Steven Grosmark](https://github.com/g-mark)\r\n  [#3654](https://github.com/realm/SwiftLint/pull/3654)\r\n\r\n* Add `anonymous_argument_in_multiline_closure` opt-in rule to validate that\r\n  named arguments are used in closures that span multiple lines.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n\r\n#### Bug Fixes\r\n\r\n* Fix false positives in `empty_enum_arguments` rule when comparing values\r\n  with a static member (e.g. `if number == .zero`).  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#3562](https://github.com/realm/SwiftLint/issues/3562)\r\n\r\n* Fix the regex for expiring-todos.  \r\n  [namolnad](https://github.com/namolnad)\r\n  [#3597](https://github.com/realm/SwiftLint/pull/3597)\r\n\r\n* Fix `type_contents_order` initializer detection.  \r\n  [StevenMagdy](https://github.com/StevenMagdy)\r\n  \r\n* Fix autocorrect when there's no space between the tuple the `in` keyword\r\n  on `unneeded_parentheses_in_closure_argument` rule.  \r\n  [p-x9](https://github.com/p-x9)\r\n  [#3633](https://github.com/realm/SwiftLint/issues/3633)\r\n\r\n* Fix `unused_capture_list`, `empty_enum_arguments`, `implicit_return` and\r\n  `explicit_type_interface` rules when using Swift 5.4.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#3615](https://github.com/realm/SwiftLint/issues/3615)\r\n  [#3685](https://github.com/realm/SwiftLint/issues/3685)\r\n\r\n* Fix Xcode build logs with spaces in paths preventing `analyze` from running.  \r\n  [adamawolf](https://github.com/adamawolf)",
    "createdAt" : "2021-09-10T06:59:13+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "RE_kwDOAiE69s4C8HNr",
    "owner" : "realm",
    "publishedAt" : "2021-09-10T07:00:02+09:00",
    "repository" : "SwiftLint",
    "title" : "0.44.0: Travel Size Lint Roller",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.44.0",
    "version" : "0.44.0"
  },
  {
    "body" : "#### Breaking\r\n\r\n* SwiftLint now requires Swift 5.4 or higher to build.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* Add `self_in_property_initialization` rule to catch uses of `self`\r\n  inside an inline closure used for initializing a variable. In this case, \r\n  `self` refers to the `NSObject.self` method and likely won't be what you\r\n  expect. You can make the variable `lazy` to be able to refer to the current\r\n  instance with `self` or use `MyClass.self` if you really want to reference \r\n  the method.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n\r\n* Exclude `id` from `identifier_name` by default.  \r\n  [Artem Garmash](https://github.com/agarmash)\r\n  [#3651](https://github.com/realm/SwiftLint/issues/3651)\r\n\r\n* Handle `get async` and `get throws` (introduced in Swift 5.5) in the\r\n  `implicit_getter` rule.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#3684](https://github.com/realm/SwiftLint/issues/3684)\r\n\r\n* Speed up explicit type interface rule.  \r\n  [PaulTaykalo](https://github.com/PaulTaykalo)\r\n  [#3745](https://github.com/realm/SwiftLint/issues/3745)\r\n\r\n* Speed up analyzer rules.  \r\n  [PaulTaykalo](https://github.com/PaulTaykalo)\r\n  [#3747](https://github.com/realm/SwiftLint/issues/3747)\r\n\r\n#### Bug Fixes\r\n\r\n* Fix a bug with the `missing_docs` rule where\r\n  `excludes_inherited_types` would not be set.  \r\n  [Ben Fox](https://github.com/bdfox325)\r\n\r\n* Fix redundant_optional_initialization autocorrect broken\r\n  in case observer's brace exists.\r\n  [Naruki Chigira](https://github.com/naru-jpn)\r\n  [#3718](https://github.com/realm/SwiftLint/issues/3718)\r\n\r\n* Fix a false positive in the `unneeded_break_in_switch` rule when\r\n  using `do/catch`.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#3724](https://github.com/realm/SwiftLint/issues/3724)\r\n\r\n* Speed up Computed Accessors Order rule.\r\n  [PaulTaykalo](https://github.com/PaulTaykalo)\r\n  [#3727](https://github.com/realm/SwiftLint/issues/3727)\r\n\r\n* [Colon Rule] Fix case when comment is used in function call.\r\n  [PaulTaykalo](https://github.com/PaulTaykalo)\r\n  [#3740](https://github.com/realm/SwiftLint/issues/3740)",
    "createdAt" : "2021-10-19T00:57:38+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "RE_kwDOAiE69s4DEqHm",
    "owner" : "realm",
    "publishedAt" : "2021-10-19T00:58:19+09:00",
    "repository" : "SwiftLint",
    "title" : "0.45.0: Effectful Apparel",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.45.0",
    "version" : "0.45.0"
  },
  {
    "body" : "#### Breaking\r\n\r\n* None.\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* Update Rule list documentation to distinguish between opt-in and\r\n  on-by-default rules.  \r\n  [Benny Wong](https://github.com/bdotdub)\r\n\r\n* Add opt-in `prefer_self_in_static_references` rule to warn if the\r\n  type name is used to reference static members the same type.\r\n  Prefer using `Self` instead which is not affected by renamings.  \r\n  [SimplyDanny](https://github.com/simplydanny)\r\n\r\n* Add support for running SwiftLint as a\r\n  [pre-commit](https://pre-commit.com/) hook.  \r\n  [Jesse Crocker](https://github.com/JesseCrocker)\r\n  [Hannes Ljungberg](https://github.com/hannseman)\r\n\r\n#### Bug Fixes\r\n\r\n* Fix `unused_import` rule incorrectly considering `SwiftShims` as a\r\n  used import.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* Fix false positives on `large_tuple` rule when using `async` closures.  \r\n  [Kaitlin Mahar](https://github.com/kmahar)\r\n  [#3753](https://github.com/realm/SwiftLint/issues/3753)\r\n\r\n* Fix false positive on `legacy_objc_type` rule when using\r\n  types with names that start with a legacy type name.  \r\n  [Isaac Ressler](https://github.com/iressler)\r\n  [#3555](https://github.com/realm/SwiftLint/issues/3555)",
    "createdAt" : "2021-11-30T06:47:21+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "RE_kwDOAiE69s4DPC_Y",
    "owner" : "realm",
    "publishedAt" : "2021-11-30T06:52:18+09:00",
    "repository" : "SwiftLint",
    "title" : "0.45.1: Clothes Drying Hooks",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.45.1",
    "version" : "0.45.1"
  },
  {
    "body" : "#### Breaking\r\n\r\n* The `weak_delegate` rule has been deprecated due to its high false\r\n  positive rate. The identifier will become invalid in a future\r\n  release.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#2786](https://github.com/realm/SwiftLint/issues/2786)\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* Official Docker images are now available. See the\r\n  [Docker section of the README](README.md#docker) for usage\r\n  instructions.  \r\n  [Francisco Javier Trujillo Mata](https://github.com/fjtrujy)\r\n\r\n* Allow `unused_setter_value` for overrides.  \r\n  [Adrian Debbeler](https://github.com/grosem)\r\n  [#2585](https://github.com/realm/SwiftLint/issues/2585)\r\n\r\n#### Bug Fixes\r\n\r\n* Fix `convenience_type` false positives when using actors.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3770](https://github.com/realm/SwiftLint/issues/3770)\r\n\r\n* Fix false positives in the `prefer_self_in_static_references` rule.  \r\n  [SimplyDanny](https://github.com/simplydanny)\r\n  [#3768](https://github.com/realm/SwiftLint/issues/3768)\r\n\r\n* Fix the regex for expiring TODO comments.  \r\n  [Sergei Shirokov](https://github.com/serges147)\r\n  [#3767](https://github.com/realm/SwiftLint/issues/3767)\r\n\r\n* Fix crash when parsing multi-line attributes with the `attributes`\r\n  rule.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3761](https://github.com/realm/SwiftLint/issues/3761)\r\n\r\n* Fix false positives in `unused_closure_parameter` when using\r\n  list element bindings in SwiftUI.  \r\n  [Paul Williamson](https://github.com/squarefrog)\r\n  [#3790](https://github.com/realm/SwiftLint/issues/3790)\r\n\r\n* Fix the cache path not being properly set when using nested\r\n  configurations.  \r\n  [Andr√©s Cecilia Luque](https://github.com/acecilia)",
    "createdAt" : "2022-01-22T05:57:49+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "RE_kwDOAiE69s4DcMJp",
    "owner" : "realm",
    "publishedAt" : "2022-01-22T05:59:17+09:00",
    "repository" : "SwiftLint",
    "title" : "0.46.0: Detergent Container",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.46.0",
    "version" : "0.46.0"
  },
  {
    "body" : "#### Breaking\r\n\r\n* The `weak_delegate` rule has been opt-in due to its high false\r\n  positive rate.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#2786](https://github.com/realm/SwiftLint/issues/2786)\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* Official Docker images are now available. See the\r\n  [Docker section of the README](README.md#docker) for usage\r\n  instructions.  \r\n  [Francisco Javier Trujillo Mata](https://github.com/fjtrujy)\r\n\r\n* Allow `unused_setter_value` for overrides.  \r\n  [Adrian Debbeler](https://github.com/grosem)\r\n  [#2585](https://github.com/realm/SwiftLint/issues/2585)\r\n\r\n#### Bug Fixes\r\n\r\n* Fix `convenience_type` false positives when using actors.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3770](https://github.com/realm/SwiftLint/issues/3770)\r\n\r\n* Fix false positives in the `prefer_self_in_static_references` rule.  \r\n  [SimplyDanny](https://github.com/simplydanny)\r\n  [#3768](https://github.com/realm/SwiftLint/issues/3768)\r\n\r\n* Fix the regex for expiring TODO comments.  \r\n  [Sergei Shirokov](https://github.com/serges147)\r\n  [#3767](https://github.com/realm/SwiftLint/issues/3767)\r\n\r\n* Fix crash when parsing multi-line attributes with the `attributes`\r\n  rule.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3761](https://github.com/realm/SwiftLint/issues/3761)\r\n\r\n* Fix false positives in `unused_closure_parameter` when using\r\n  list element bindings in SwiftUI.  \r\n  [Paul Williamson](https://github.com/squarefrog)\r\n  [#3790](https://github.com/realm/SwiftLint/issues/3790)\r\n\r\n* Fix the cache path not being properly set when using nested\r\n  configurations.  \r\n  [Andr√©s Cecilia Luque](https://github.com/acecilia)",
    "createdAt" : "2022-01-22T07:00:35+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "RE_kwDOAiE69s4DcNC3",
    "owner" : "realm",
    "publishedAt" : "2022-01-22T07:02:16+09:00",
    "repository" : "SwiftLint",
    "title" : "0.46.1: Detergent Container",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.46.1",
    "version" : "0.46.1"
  },
  {
    "body" : "#### Breaking\r\n\r\n* None.\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* None.\r\n\r\n#### Bug Fixes\r\n\r\n* Fix SwiftLint.pkg installer on macOS 11 or later.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3815](https://github.com/realm/SwiftLint/issues/3815)\r\n\r\n* Ignore `prefer_self_in_static_references` rule in extensions\r\n  generally.  \r\n  [SimplyDanny](https://github.com/SimplyDanny)\r\n  [#3775](https://github.com/realm/SwiftLint/issues/3775)\r\n\r\n* Fix `class_delegate_protocol` false positives when using `where`\r\n  clause.  \r\n  [Steven Magdy](https://github.com/StevenMagdy)",
    "createdAt" : "2022-01-27T23:16:25+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "RE_kwDOAiE69s4Ddo9q",
    "owner" : "realm",
    "publishedAt" : "2022-01-27T23:17:53+09:00",
    "repository" : "SwiftLint",
    "title" : "0.46.2: Detergent Package",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.46.2",
    "version" : "0.46.2"
  },
  {
    "body" : "#### Breaking\r\n\r\n* None.\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* Change fingerprint generation in `CodeClimateReporter.swift` to use\r\n  the relative file path to better support CI/CD on multiple machines.  \r\n  [HA Pors](https://github.com/hpors)\r\n\r\n#### Bug Fixes\r\n\r\n* Fix crash in the `closure_end_indentation` rule when linting with\r\n  Swift 5.6.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3830](https://github.com/realm/SwiftLint/issues/3830)\r\n  \r\n* Fix default rules section in documentation.  \r\n  [Natan Rolnik](https://github.com/natanrolnik)\r\n  [#3857](https://github.com/realm/SwiftLint/pull/3857)",
    "createdAt" : "2022-02-23T05:29:40+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "RE_kwDOAiE69s4DlhYU",
    "owner" : "realm",
    "publishedAt" : "2022-02-23T05:30:53+09:00",
    "repository" : "SwiftLint",
    "title" : "0.46.3: Detergent Spill",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.46.3",
    "version" : "0.46.3"
  },
  {
    "body" : "#### Breaking\r\n\r\n* None.\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* None.\r\n\r\n#### Bug Fixes\r\n\r\n* Fix `empty_parentheses_with_trailing_closure` rule when using Swift 5.6.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#3846](https://github.com/realm/SwiftLint/issues/3846)\r\n\r\n* Fix false negatives in `closure_parameter_position` rule with Swift 5.6.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#3845](https://github.com/realm/SwiftLint/issues/3845)\r\n\r\n* Fix regression in `last_where` rule when using Swift 5.6.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#3847](https://github.com/realm/SwiftLint/issues/3847)\r\n\r\n* Fix regression in `unused_import` rule when using Swift 5.6.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3849](https://github.com/realm/SwiftLint/issues/3849)\r\n\r\n* Fix regression in `trailing_closure` rule when using Swift 5.6.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#3848](https://github.com/realm/SwiftLint/issues/3848)",
    "createdAt" : "2022-03-09T06:18:50+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "RE_kwDOAiE69s4Dp6Pi",
    "owner" : "realm",
    "publishedAt" : "2022-03-09T06:21:18+09:00",
    "repository" : "SwiftLint",
    "title" : "0.46.5: Laundry Studio",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.46.5",
    "version" : "0.46.5"
  },
  {
    "body" : "This is a prerelease version. It won't be published to Homebrew or CocoaPods. But there are many other ways to install:\r\n\r\n* Downloading the attached `SwiftLint.pkg` installer and launching it\r\n* Downloading the attached `portable_swiftlint.zip` archive, extracting it and moving the binary from `portable_swiftlint/swiftlint` to `/usr/local/bin` or elsewhere in your `PATH`\r\n* Using [Mint](https://github.com/yonaskolb/Mint): `mint install realm/SwiftLint@0.47.0-rc.1`\r\n* Cloning and building from source: `git clone https://github.com/realm/SwiftLint.git && cd SwiftLint && git checkout 0.47.0-rc.1 && make install`\r\n* Docker: ```docker run -it -v `pwd`:`pwd` -w `pwd` ghcr.io/realm/swiftlint:0.47.0-rc.1```\r\n\r\nChanges from 0.46.5: https://github.com/realm/SwiftLint/compare/0.46.5...0.47.0-rc.1\r\n\r\n#### Breaking\r\n\r\n* SwiftLint now requires Swift 5.5 or higher to build.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* The `SwiftLintFramework` podspec has been removed. To our knowledge, this was\r\n  completely unused by other projects and was not worth the complexity needed\r\n  to justify its continued maintenance, especially in light of the integration\r\n  of SwiftSyntax. The `SwiftLint` podspec is still supported.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n#### Experimental\r\n\r\n* The `force_cast` rule and the comment command parsing mechanism have been\r\n  updated to use SwiftSyntax instead of SourceKit. Please report any problems\r\n  you encounter by opening a GitHub issue. If this is successful, more rules may\r\n  use Swift Syntax in the future.  \r\n  [JP Simard](https://github.com/jpsim)",
    "createdAt" : "2022-03-09T11:03:31+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "RE_kwDOAiE69s4Dp9kI",
    "owner" : "realm",
    "publishedAt" : "2022-03-09T11:13:32+09:00",
    "repository" : "SwiftLint",
    "title" : "0.47.0-rc.1: Smart Appliance",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.47.0-rc.1",
    "version" : "0.47.0-rc.1"
  },
  {
    "body" : "#### Breaking\r\n\r\n* None.\r\n\r\n#### Experimental\r\n\r\n* None.\r\n\r\n#### Enhancements\r\n\r\n* None.\r\n\r\n#### Bug Fixes\r\n\r\n* Ignore meta class types in `prefer_self_in_static_references` rule.  \r\n  [SimplyDanny](https://github.com/SimplyDanny)\r\n  [#3804](https://github.com/realm/SwiftLint/issues/3804)\r\n\r\n* Ignore MARK in multiline comment, fixing cases that would previously crash or\r\n  produce invalid results when correcting.  \r\n  [goranche](https://github.com/goranche)\r\n  [#1749](https://github.com/realm/SwiftLint/issues/1749)\r\n  [#3841](https://github.com/realm/SwiftLint/issues/3841)\r\n\r\n* Fix false positive in `EmptyEnumArgumentsRule` rule when using Swift 5.6.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#3850](https://github.com/realm/SwiftLint/issues/3850)",
    "createdAt" : "2022-03-08T01:15:27+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "RE_kwDOAiE69s4DpV2Q",
    "owner" : "realm",
    "publishedAt" : "2022-03-08T01:16:11+09:00",
    "repository" : "SwiftLint",
    "title" : "0.46.4: Detergent Tray",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.46.4",
    "version" : "0.46.4"
  },
  {
    "body" : "This is a prerelease version. It won't be published to Homebrew or CocoaPods. But there are many other ways to install:\r\n\r\n* Downloading the attached `SwiftLint.pkg` installer and launching it\r\n* Downloading the attached `portable_swiftlint.zip` archive, extracting it and moving the binary from `portable_swiftlint/swiftlint` to `/usr/local/bin` or elsewhere in your `PATH`\r\n* Using [Mint](https://github.com/yonaskolb/Mint): `mint install realm/SwiftLint@0.47.0-rc.2`\r\n* Cloning and building from source: `git clone https://github.com/realm/SwiftLint.git && cd SwiftLint && git checkout 0.47.0-rc.2 && make install`\r\n* Docker: ```docker run -it -v `pwd`:`pwd` -w `pwd` ghcr.io/realm/swiftlint:0.47.0-rc.2```\r\n\r\nChanges from 0.46.5: https://github.com/realm/SwiftLint/compare/0.46.5...0.47.0-rc.2\r\nChanges from 0.47.0-rc.1: https://github.com/realm/SwiftLint/compare/0.47.0-rc.1...0.47.0-rc.2\r\n\r\n#### Breaking\r\n\r\n* SwiftLint now requires Swift 5.5 or higher to build.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* The `SwiftLintFramework` podspec has been removed. To our knowledge, this was\r\n  completely unused by other projects and was not worth the complexity needed\r\n  to justify its continued maintenance, especially in light of the integration\r\n  of SwiftSyntax. The `SwiftLint` podspec is still supported.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* SwiftLint now requires at least Swift 5.0 installed in order to lint files.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n\r\n#### Experimental\r\n\r\n* The `force_cast` rule and the comment command parsing mechanism have been\r\n  updated to use SwiftSyntax instead of SourceKit. Please report any problems\r\n  you encounter by opening a GitHub issue. If this is successful, more rules may\r\n  use Swift Syntax in the future.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n#### Enhancements\r\n\r\n* Empty files no longer trigger any violations.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3854](https://github.com/realm/SwiftLint/issues/3854)\r\n\r\n* Support recursive globs.  \r\n  [funzin](https://github.com/funzin)\r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3789](https://github.com/realm/SwiftLint/issues/3789)\r\n  [#3891](https://github.com/realm/SwiftLint/issues/3891)\r\n\r\n* The `legacy_random` rule is now enabled by default.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n\r\n* The `deployment_target` rule now supports the `#unavailable` syntax\r\n  added in Swift 5.6.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#3896](https://github.com/realm/SwiftLint/issues/3896)\r\n\r\n* Add `IN_PROCESS_SOURCEKIT` environment variable, which uses\r\n  the in-process version of sourcekitd on macOS when Xcode 13 or later is\r\n  selected. This avoids the use of XPC, which is prohibited in some sandboxed\r\n  environments, such as in Swift Package Manager plugins.  \r\n  [Juozas Valancius](https://github.com/juozasvalancius)\r\n\r\n#### Bug Fixes\r\n\r\n* Extend `class_delegate_protocol` to correctly identify cases with the protocol\r\n  body opening brace on a new line.  \r\n  [Tobisaninfo](https://github.com/Tobisaninfo)\r\n\r\n* Fix SwiftLint.pkg installer installing multiple copies of SwiftLint.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3815](https://github.com/realm/SwiftLint/issues/3815)\r\n  [#3887](https://github.com/realm/SwiftLint/issues/3887)",
    "createdAt" : "2022-03-16T23:35:16+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "RE_kwDOAiE69s4DsiV8",
    "owner" : "realm",
    "publishedAt" : "2022-03-16T23:37:44+09:00",
    "repository" : "SwiftLint",
    "title" : "0.47.0-rc.2: Smart Appliance",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.47.0-rc.2",
    "version" : "0.47.0-rc.2"
  },
  {
    "body" : "This is a prerelease version. It won't be published to Homebrew or CocoaPods. But there are many other ways to install:\r\n\r\n* Downloading the attached `SwiftLint.pkg` installer and launching it\r\n* Downloading the attached `portable_swiftlint.zip` archive, extracting it and moving the binary from `portable_swiftlint/swiftlint` to `/usr/local/bin` or elsewhere in your `PATH`\r\n* Using [Mint](https://github.com/yonaskolb/Mint): `mint install realm/SwiftLint@0.47.0-rc.3`\r\n* Cloning and building from source: `git clone https://github.com/realm/SwiftLint.git && cd SwiftLint && git checkout 0.47.0-rc.3 && make install`\r\n* Docker: ```docker run -it -v `pwd`:`pwd` -w `pwd` ghcr.io/realm/swiftlint:0.47.0-rc.3```\r\n\r\nChanges from 0.46.5: https://github.com/realm/SwiftLint/compare/0.46.5...0.47.0-rc.3\r\nChanges from 0.47.0-rc.2: https://github.com/realm/SwiftLint/compare/0.47.0-rc.2...0.47.0-rc.3\r\n\r\n#### Breaking\r\n\r\n* SwiftLint now requires Swift 5.5 or higher to build.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* The `SwiftLintFramework` podspec has been removed. To our knowledge, this was\r\n  completely unused by other projects and was not worth the complexity needed\r\n  to justify its continued maintenance, especially in light of the integration\r\n  of SwiftSyntax. The `SwiftLint` podspec is still supported.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* SwiftLint now requires at least Swift 5.0 installed in order to lint files.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n\r\n#### Experimental\r\n\r\n* The `force_cast` rule and the comment command parsing mechanism have been\r\n  updated to use SwiftSyntax instead of SourceKit. Please report any problems\r\n  you encounter by opening a GitHub issue. If this is successful, more rules may\r\n  use Swift Syntax in the future.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n#### Enhancements\r\n\r\n* Empty files no longer trigger any violations.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3854](https://github.com/realm/SwiftLint/issues/3854)\r\n\r\n* Support recursive globs.  \r\n  [funzin](https://github.com/funzin)\r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3789](https://github.com/realm/SwiftLint/issues/3789)\r\n  [#3891](https://github.com/realm/SwiftLint/issues/3891)\r\n\r\n* The `legacy_random` rule is now enabled by default.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n\r\n* The `deployment_target` rule now supports the `#unavailable` syntax\r\n  added in Swift 5.6.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#3896](https://github.com/realm/SwiftLint/issues/3896)\r\n\r\n* SwiftSyntax has been updated to its Swift 5.6 release and may improve parsing\r\n  of Swift 5.6 code.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* Add `IN_PROCESS_SOURCEKIT` environment variable, which uses\r\n  the in-process version of sourcekitd on macOS when Xcode 13 or later is\r\n  selected. This avoids the use of XPC, which is prohibited in some sandboxed\r\n  environments, such as in Swift Package Manager plugins.  \r\n  [Juozas Valancius](https://github.com/juozasvalancius)\r\n\r\n#### Bug Fixes\r\n\r\n* Extend `class_delegate_protocol` to correctly identify cases with the protocol\r\n  body opening brace on a new line.  \r\n  [Tobisaninfo](https://github.com/Tobisaninfo)\r\n\r\n* Fix SwiftLint.pkg installer installing multiple copies of SwiftLint.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3815](https://github.com/realm/SwiftLint/issues/3815)\r\n  [#3887](https://github.com/realm/SwiftLint/issues/3887)",
    "createdAt" : "2022-03-18T03:38:23+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "RE_kwDOAiE69s4DtAJi",
    "owner" : "realm",
    "publishedAt" : "2022-03-18T04:04:04+09:00",
    "repository" : "SwiftLint",
    "title" : "0.47.0-rc.3: Smart Appliance",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.47.0-rc.3",
    "version" : "0.47.0-rc.3"
  },
  {
    "body" : "This is a prerelease version. It won't be published to Homebrew or CocoaPods. But there are many other ways to install:\r\n\r\n* Downloading the attached `SwiftLint.pkg` installer and launching it\r\n* Downloading the attached `portable_swiftlint.zip` archive, extracting it and moving the binary from `portable_swiftlint/swiftlint` to `/usr/local/bin` or elsewhere in your `PATH`\r\n* Using [Mint](https://github.com/yonaskolb/Mint): `mint install realm/SwiftLint@0.47.0-rc.4`\r\n* Cloning and building from source: `git clone https://github.com/realm/SwiftLint.git && cd SwiftLint && git checkout 0.47.0-rc.4 && make install`\r\n* Docker: ```docker run -it -v `pwd`:`pwd` -w `pwd` ghcr.io/realm/swiftlint:0.47.0-rc.4```\r\n\r\nChanges from 0.46.5: https://github.com/realm/SwiftLint/compare/0.46.5...0.47.0-rc.4\r\nChanges from 0.47.0-rc.3: https://github.com/realm/SwiftLint/compare/0.47.0-rc.3...0.47.0-rc.4\r\n\r\n#### Breaking\r\n\r\n* SwiftLint now requires Swift 5.5 or higher to build.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* The `SwiftLintFramework` podspec has been removed. To our knowledge, this was\r\n  completely unused by other projects and was not worth the complexity needed\r\n  to justify its continued maintenance, especially in light of the integration\r\n  of SwiftSyntax. The `SwiftLint` podspec is still supported.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* SwiftLint now requires at least Swift 5.0 installed in order to lint files.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n\r\n#### Experimental\r\n\r\n* The `force_cast` rule and the comment command parsing mechanism have been\r\n  updated to use SwiftSyntax instead of SourceKit. Please report any problems\r\n  you encounter by opening a GitHub issue. If this is successful, more rules may\r\n  use Swift Syntax in the future.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n#### Enhancements\r\n\r\n* Empty files no longer trigger any violations.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3854](https://github.com/realm/SwiftLint/issues/3854)\r\n\r\n* Support recursive globs.  \r\n  [funzin](https://github.com/funzin)\r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3789](https://github.com/realm/SwiftLint/issues/3789)\r\n  [#3891](https://github.com/realm/SwiftLint/issues/3891)\r\n\r\n* The `legacy_random` rule is now enabled by default.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n\r\n* The `deployment_target` rule now supports the `#unavailable` syntax\r\n  added in Swift 5.6.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#3896](https://github.com/realm/SwiftLint/issues/3896)\r\n\r\n* Set the `IN_PROCESS_SOURCEKIT` environment variable, which will use\r\n  the in-process version of sourcekitd on macOS when Xcode 13 or later is\r\n  selected. This avoids the use of XPC, which is prohibited in some sandboxed\r\n  environments, such as in Swift Package Manager plugins.  \r\n  [Juozas Valancius](https://github.com/juozasvalancius)\r\n\r\n#### Bug Fixes\r\n\r\n* Extend `class_delegate_protocol` to correctly identify cases with the protocol\r\n  body opening brace on a new line.  \r\n  [Tobisaninfo](https://github.com/Tobisaninfo)\r\n\r\n* Fix SwiftLint.pkg installer installing multiple copies of SwiftLint.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3815](https://github.com/realm/SwiftLint/issues/3815)\r\n  [#3887](https://github.com/realm/SwiftLint/issues/3887)",
    "createdAt" : "2022-03-19T08:05:28+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "RE_kwDOAiE69s4DtZo3",
    "owner" : "realm",
    "publishedAt" : "2022-03-19T08:07:17+09:00",
    "repository" : "SwiftLint",
    "title" : "0.47.0-rc.4: Smart Appliance",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.47.0-rc.4",
    "version" : "0.47.0-rc.4"
  },
  {
    "body" : "#### Breaking\r\n\r\n* SwiftLint now requires Swift 5.5 or higher to build.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* The `SwiftLintFramework` podspec has been removed. To our knowledge, this was\r\n  completely unused by other projects and was not worth the complexity needed\r\n  to justify its continued maintenance, especially in light of the integration\r\n  of SwiftSyntax. The `SwiftLint` podspec is still supported.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n* SwiftLint now requires at least Swift 5.0 installed in order to lint files.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n\r\n#### Experimental\r\n\r\n* The `force_cast` rule and the comment command parsing mechanism have been\r\n  updated to use SwiftSyntax instead of SourceKit. Please report any problems\r\n  you encounter by opening a GitHub issue. If this is successful, more rules may\r\n  use Swift Syntax in the future.  \r\n  [JP Simard](https://github.com/jpsim)\r\n\r\n#### Enhancements\r\n\r\n* Empty files no longer trigger any violations.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3854](https://github.com/realm/SwiftLint/issues/3854)\r\n\r\n* Support recursive globs.  \r\n  [funzin](https://github.com/funzin)\r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3789](https://github.com/realm/SwiftLint/issues/3789)\r\n  [#3891](https://github.com/realm/SwiftLint/issues/3891)\r\n\r\n* The `legacy_random` rule is now enabled by default.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n\r\n* The `deployment_target` rule now supports the `#unavailable` syntax\r\n  added in Swift 5.6.  \r\n  [Marcelo Fabri](https://github.com/marcelofabri)\r\n  [#3896](https://github.com/realm/SwiftLint/issues/3896)\r\n\r\n* Set the `IN_PROCESS_SOURCEKIT` environment variable, which will use\r\n  the in-process version of sourcekitd on macOS when Xcode 13 or later is\r\n  selected. This avoids the use of XPC, which is prohibited in some sandboxed\r\n  environments, such as in Swift Package Manager plugins.  \r\n  [Juozas Valancius](https://github.com/juozasvalancius)\r\n\r\n* Add ability to run only one (focused) example.  \r\n  [PaulTaykalo](https://github.com/PaulTaykalo)\r\n  [#3911](https://github.com/realm/SwiftLint/issues/3911)\r\n\r\n#### Bug Fixes\r\n\r\n* Extend `class_delegate_protocol` to correctly identify cases with the protocol\r\n  body opening brace on a new line.  \r\n  [Tobisaninfo](https://github.com/Tobisaninfo)\r\n\r\n* Fix SwiftLint.pkg installer installing multiple copies of SwiftLint.  \r\n  [JP Simard](https://github.com/jpsim)\r\n  [#3815](https://github.com/realm/SwiftLint/issues/3815)\r\n  [#3887](https://github.com/realm/SwiftLint/issues/3887)",
    "createdAt" : "2022-03-23T23:58:54+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "RE_kwDOAiE69s4DuwMs",
    "owner" : "realm",
    "publishedAt" : "2022-03-23T23:59:50+09:00",
    "repository" : "SwiftLint",
    "title" : "0.47.0: Smart Appliance",
    "url" : "https://github.com/realm/SwiftLint/releases/tag/0.47.0",
    "version" : "0.47.0"
  }
]