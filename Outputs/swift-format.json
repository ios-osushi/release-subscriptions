[
  {
    "body" : "This release is compatible with Swift 5.2.",
    "createdAt" : "2020-04-02T07:22:42+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTI1MTExOTc5",
    "owner" : "apple",
    "publishedAt" : "2020-04-02T07:25:32+09:00",
    "repository" : "swift-format",
    "title" : "0.50200.0",
    "url" : "https://github.com/apple/swift-format/releases/tag/0.50200.0",
    "version" : "0.50200.0"
  },
  {
    "body" : "Significant changes in this release:\r\n\r\n* Format property wrappers correctly. (e829789)\r\n* Move open group token past ifstmt's if token to avoid extra newlines. (5df9eb4)\r\n* Handle `@derivative` attribute without a `wrt:` clause. (2c29da1)\r\n* Disallow discretionary newlines before trailing closures. (a4100c3)\r\n* Disallow line breaks inside completely empty array and dictionary expressions. (66cac37)\r\n* Force all branches of an `if/else if/else` sequence to break inside the `{...}` if the sequence requires more than one line, even for branches that contain a single statement. (c52e0d2)\r\n* Fix indentation of wrapped conditions in `while` statements. (8fbc3f1)\r\n* Fix formatting of `@differentiable` containing only `wrt:` and `where` clauses. (0da09d0)\r\n* Fix counting of consecutive newlines. (513a2c7)\r\n* Apply `NoEmptyTrailingClosureParentheses` rule recursively. (5cca489)\r\n* Fix some cases where `class` declarations would overflow line length. (20162cd)\r\n* Prevent trailing commas from overflowing the maximum line length. (ed5f980)\r\n* Detect `()` cases previously missed by `ReturnVoidInsteadOfEmptyTuple`. (ff7ac9a)\r\n* Allow right parenthesis of an `enum` `case` to be on the same line as the last parameter. (a50d4fe)\r\n* Add spaces after labels for all statement types. (c7db906)\r\n* Fix `@differentiable` attribute formatting when the `where` clause is the first thing in the attribute, or when the `wrt:` clause is a tuple. (428b33c)\r\n* Remove calls to `FileHandle.synchronizeFile()` that were crashing on Linux. (744ca11)\r\n* Restrict doc-block to doc-line transform to first doc comment on a declaration. (58ccbf3)\r\n* Discard newlines when sorting imports. (47b5015)\r\n",
    "createdAt" : "2020-05-01T08:22:52+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTI2MDY4Mjky",
    "owner" : "apple",
    "publishedAt" : "2020-05-01T08:23:59+09:00",
    "repository" : "swift-format",
    "title" : "0.50200.1",
    "url" : "https://github.com/apple/swift-format/releases/tag/0.50200.1",
    "version" : "0.50200.1"
  },
  {
    "body" : "This release is compatible with Swift 5.3.\r\n\r\nSignificant changes since the last release:\r\n\r\n*   Support is added for rules to be opt-in rather than on-by-default. (40bab4e8b99d52dc561e62aa14e39d0d6cda7c17)\r\n*   The following rules have been made opt-in, because they are either too strict for many real-world use cases or are not yet correct enough to enable universally. Existing configuration files will not be affected, but when using the default configuration, these rules will be off by default: (1c2a5a2d244b89ef10195799bbe9ca86ecc15bf3, 642c2d17e50936aa517f08c72eed9826bc163e4d)\r\n    *   `AllPublicDeclarationsHaveDocumentation`\r\n    *   `NeverForceUnwrap`\r\n    *   `NeverUseForceTry`\r\n    *   `NeverUseImplicitlyUnwrappedOptionals`\r\n    *   `NoLeadingUnderscores`\r\n    *   `ValidateDocumentationComments`\r\n*   Improvements to `AlwaysUseLowerCamelCase`:\r\n    *   It is now applied to closure arguments and variables bound in `if/guard let` patterns. (7867cda76f800f6031cafa83793dd136f17b1c38)\r\n    *   Diagnostics are now clearer about the kind of declaration affected. (97628a8b0068fd0977ce50915c36f3dee8c5426a)\r\n    *   Functions that look like test case methods are excluded; for example, to support common naming schemes like `testSomeObject_inSomeState_actsSomeWay`. (90807621e2a52ca3432c56c3bb855bc89146b360)\r\n*   Improvements to `ValidateDocumentationComments`:\r\n    *   A `Returns` section is no longer required for functions that return `Never`. (674b34df5114291df26f0f9edba8b94b76c28f80)\r\n    *   Presence of absence of the `Throws` section is now validated against the function signature. (57a5cb66a72bd04c9a07635b8a980573033dcc96)\r\n*   Multiple trailing closures are formatted. (e286081a1342944236bde8653f5ca763ba61cfc3)\r\n*   Fix a crash when linting a collection literal with single element and a trailing comma. (483580f1d3047272292aa516e06a02adc8b365aa)\r\n*   Fixed invalid locations in some diagnostics. (ea02880b86bee22da9fbbfe37e43e17d75b673dd)\r\n*   Keep `try` keyword next to the expression following it whenever possible, only breaking between them when necessary. (35fdb4fff0aeb9a506fccdfad98fab16d907c173)\r\n*   Recursively apply `NoParensAroundCondition` to pick up nested occurrences. (ed45527f1c1891f90bb98c642275f43d164d56a1)\r\n*   Do not remove semicolons between a `do` block and a `while` block. (cb4e6210c637b4ce3fd3ae81d0241c2c02895bfb)\r\n*   Fix some situations where `OneVariableDeclarationPerLine` would incorrectly break declarations. (2b4364b7676964b430e66449e2981029e99ddd20)\r\n*   Add a `indentSwitchCaseLabels` configuration option to control whether `case` statements inside a `switch` are indented. (2107603c7a0cb549a2e3fc7c35e5740dd4bee90e)\r\n*   Speed and memory usage improvements when formatting and linting.\r\n",
    "createdAt" : "2020-09-19T13:21:35+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTMxNTYwNTUw",
    "owner" : "apple",
    "publishedAt" : "2020-09-20T01:44:38+09:00",
    "repository" : "swift-format",
    "title" : "0.50300.0",
    "url" : "https://github.com/apple/swift-format/releases/tag/0.50300.0",
    "version" : "0.50300.0"
  },
  {
    "body" : "This release is compatible with Swift 5.4.\r\n\r\nSignificant changes since the last release:\r\n\r\n*   The `--parallel` flag supports formatting multiple files in parallel. This should be much faster when formatting large numbers of files. (a062ec84d3230f9b9055123c7bb2903780c84608)\r\n*   The `--ignore-unparsable-files` flag is now honored in `lint` mode; unparsable files are silently ignored and no diagnostic is emitted. (fc3fab6bf6541e611830b122711af0bd750dec6f)\r\n*   `#if` declarations surrounding `case` clauses inside a `switch` statement are formatted correctly. (8df2cb04f2aa41089cd14379552cb97bcc89133a)\r\n*   `UseLetInEveryBoundCaseVariable` no longer produces incorrect diagnostics for certain patterns. (c3c17adbd93d9117f1d23fb05ffb7c435c23b581)\r\n*   `BeginDocumentationCommentWithOneLineSummary` has been made opt-in by default. (22118db1668bb22af878d1ce31184533e419411b)\r\n*   `UseSynthesizedInitializer` now produces more accurate diagnostics by considering the visibility of the stored properties in the type. (dd87cc2c9696ce8460265533471c75c225cde4fe)\r\n",
    "createdAt" : "2021-04-29T07:32:12+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "MDc6UmVsZWFzZTQyMTY4OTYx",
    "owner" : "apple",
    "publishedAt" : "2021-04-29T07:49:59+09:00",
    "repository" : "swift-format",
    "title" : "0.50400.0",
    "url" : "https://github.com/apple/swift-format/releases/tag/0.50400.0",
    "version" : "0.50400.0"
  },
  {
    "body" : "This release is compatible with Swift 5.5.\r\n\r\nSignificant changes since the last release:\r\n\r\n* New concurrency syntax added in Swift 5.5 is supported. (https://github.com/apple/swift-format/pull/258/commits/427d31451c36c2f7fb45dbd832c3b6f269bc1414)\r\n* Closures with attributes in their function signature are supported. (https://github.com/apple/swift-format/pull/258/commits/35e8687aff623042d188f6aaa24a1ecd27d55854)\r\n* Significant stability and performance improvements have been made to `--parallel` format mode. (https://github.com/apple/swift-format/pull/261/commits/6d500ea71337bc0581cc407b71fe09c106753fe8)\r\n* `generate-pipeline` no longer uses a hardcoded list of suppressed rules, instead marking those rules as opt-in. This makes two \"new\" rules available (they have always had implementations but have been suppressed): `UseEarlyExits` and `UseWhereClausesInForLoops`. These rules are not currently stable or well-tested so they are disabled by default. (https://github.com/apple/swift-format/pull/263/commits/6bd3a5512e3f686592c52f87ad6970f5a60e42b4)\r\n",
    "createdAt" : "2021-09-22T08:40:09+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "RE_kwDOC7ABTs4C-0bo",
    "owner" : "apple",
    "publishedAt" : "2021-09-22T08:59:57+09:00",
    "repository" : "swift-format",
    "title" : "0.50500.0",
    "url" : "https://github.com/apple/swift-format/releases/tag/0.50500.0",
    "version" : "0.50500.0"
  },
  {
    "body" : "This release is compatible with Swift 5.6.\r\n\r\nSignificant changes since the last release:\r\n\r\n* Diagnostics have been refactored as \"findings\". Users of swift-format as an API (via the `SwiftFormatter` and `SwiftLinter` classes) now receive warnings and errors via a new `Finding` type that is independent of `SwiftSyntax` diagnostic types, for greater flexibility. (7aa5df515fb910b95fbae67277dd782e1a641efc)\r\n* Diagnostics are now printed in color if standard error is connected to a terminal. This can be controlled with the `--color-diagnostics/--no-color-diagnostics` command line flags (to force color output when redirected to something other than a terminal, or to disable color output to a terminal). (4f90887ba823784e1d3b76cdd9779310843c5a57)\r\n* Formatting of `throws` and `async` property effects has been fixed. (f646a1f6803b7bd131553d1a348f3552d8c4f62e, 55fc4e23e16f463d650c45dc53c7abc731ca6de1)\r\n* The legacy `-m/--mode` flag has been removed. (defb00db9aa9b0564d487eba52a222c5267ba81a)\r\n",
    "createdAt" : "2022-03-19T04:32:09+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "RE_kwDOC7ABTs4DtXG0",
    "owner" : "apple",
    "publishedAt" : "2022-03-19T05:11:29+09:00",
    "repository" : "swift-format",
    "title" : "0.50600.0",
    "url" : "https://github.com/apple/swift-format/releases/tag/0.50600.0",
    "version" : "0.50600.0"
  },
  {
    "body" : "This release is compatible with Swift 5.6.\r\n\r\nThis update fixes a build error caused by a conflicting Windows-only conformance from `swift-tools-support-core` and one that we added in our code base. (22f1843880ff57a3c288b7d76a204dec34397032)",
    "createdAt" : "2022-03-23T03:04:06+09:00",
    "fetchedFromAPIAt" : "2022-04-18T23:56:32+09:00",
    "id" : "RE_kwDOC7ABTs4DuYnC",
    "owner" : "apple",
    "publishedAt" : "2022-03-23T04:47:57+09:00",
    "repository" : "swift-format",
    "title" : "0.50600.1",
    "url" : "https://github.com/apple/swift-format/releases/tag/0.50600.1",
    "version" : "0.50600.1"
  },
  {
    "body" : "This release is compatible with Swift 5.7.\r\n\r\nSignificant changes since the last release:\r\n\r\n*   The `AlwaysUseLowerCamelCase` rule no longer emits a warning for `override` declarations. (0e705f43b1b265c510b39b22d6eadcc1463f85a2)\r\n*   The `UseWhereClausesInForLoops` rule won't hoist an `if` condition into a `where` clause if it also has an `else` block. (793d764d628bd16222f18e0678edbc28a93057b9)\r\n*   `#if` postfix expressions now have improved formatting. (7216a18c7967fad06bae9211e0ee710fa9b788f7)\r\n*   Files will not be overwritten if they are not changed during formatting, preserving their modification time and other metadata. (3b2b9b4349247927e2ae2d09169f6ad267977299)",
    "createdAt" : "2022-09-21T01:07:43+09:00",
    "fetchedFromAPIAt" : "2022-09-21T10:02:33+09:00",
    "id" : "RE_kwDOC7ABTs4EoUJK",
    "owner" : "apple",
    "publishedAt" : "2022-09-21T01:12:48+09:00",
    "repository" : "swift-format",
    "title" : "0.50700.0",
    "url" : "https://github.com/apple/swift-format/releases/tag/0.50700.0",
    "version" : "0.50700.0"
  },
  {
    "body" : "This release is compatible with Swift 5.7.\r\n\r\nThis update pins the swift-syntax dependency to at least 0.50700.1, which fixes an issue where new `if let` shorthand syntax was not recognized.\r\n",
    "createdAt" : "2022-10-11T00:22:35+09:00",
    "fetchedFromAPIAt" : "2022-10-11T09:59:43+09:00",
    "id" : "RE_kwDOC7ABTs4EvDG_",
    "owner" : "apple",
    "publishedAt" : "2022-10-11T00:24:07+09:00",
    "repository" : "swift-format",
    "title" : "0.50700.1",
    "url" : "https://github.com/apple/swift-format/releases/tag/0.50700.1",
    "version" : "0.50700.1"
  },
  {
    "body" : "This release is compatible with Swift 5.8.\r\n\r\nSignificant changes since the last release:\r\n\r\n* The `spacesAroundRangeFormationOperators` configuration option has been added to force a space around range formation operators like `...` and `..<`.\r\n* A new rule, `NoAssignmentInExpressions`, has been added that emits a linter finding if an assignment expression is found in another expression context (for example, `return x = y`).\r\n* Format and Lint plug-ins have been added that can be used from Swift Package Manager and Xcode.\r\n* Detection of \"files that contain `XCTest`s\" has been improved to include cases where `XCTest` is imported conditionally in a `#if` block.\r\n* Primary associated type clauses in `protocol` declarations are formatted correctly.\r\n* When a closure literal contains both a leading attribute and a capture list (e.g., `{ @MainActor [weak self] in ...`), a space is guaranteed between the attribute and capture list.\r\n* `Optional<T>` will not be automatically converted to the shorthand `T?` in positions where it would cause a performance issue due to subtle Swift initialization characteristics, like in member variable declarations.\r\n",
    "createdAt" : "2023-04-08T03:01:49+09:00",
    "fetchedFromAPIAt" : "2023-04-08T10:46:32+09:00",
    "id" : "RE_kwDOC7ABTs4F4Fxu",
    "owner" : "apple",
    "publishedAt" : "2023-04-08T03:14:59+09:00",
    "repository" : "swift-format",
    "title" : "508.0.0",
    "url" : "https://github.com/apple/swift-format/releases/tag/508.0.0",
    "version" : "508.0.0"
  },
  {
    "body" : "This is a development snapshot of the 0.50800.0 release of swift-format.",
    "createdAt" : "2023-01-06T06:23:15+09:00",
    "fetchedFromAPIAt" : "2023-01-06T09:43:51+09:00",
    "id" : "RE_kwDOC7ABTs4FP8cM",
    "owner" : "apple",
    "publishedAt" : "2023-01-06T06:25:44+09:00",
    "repository" : "swift-format",
    "title" : "0.50800.0-SNAPSHOT-2022-12-29-a",
    "url" : "https://github.com/apple/swift-format/releases/tag/0.50800.0-SNAPSHOT-2022-12-29-a",
    "version" : "0.50800.0-SNAPSHOT-2022-12-29-a"
  },
  {
    "body" : "This release is compatible with Swift 5.8.\r\n\r\nCompared to 508.0.0, this release relaxes the version requirement for `swift-argument-parser`, resulting in fewer version conflicts for users of swift-format and SwiftSyntax.",
    "createdAt" : "2023-05-18T05:09:28+09:00",
    "fetchedFromAPIAt" : "2023-05-18T09:48:27+09:00",
    "id" : "RE_kwDOC7ABTs4GKVvx",
    "owner" : "apple",
    "publishedAt" : "2023-05-18T05:11:24+09:00",
    "repository" : "swift-format",
    "title" : "508.0.1",
    "url" : "https://github.com/apple/swift-format/releases/tag/508.0.1",
    "version" : "508.0.1"
  },
  {
    "body" : "This release is compatible with Swift 5.9.\r\n\r\nSignificant changes since the last release:\r\n\r\n### New rules\r\n\r\n- `AlwaysUseLiteralForEmptyCollectionInit`: transforms no-argument initializer calls on collection types to use the empty collection literal instead. For example, `let x = [Int]()` will be transformed into `let x: [Int] = []`. This rule is **opt-in** (disabled by default).\r\n- `NoPlaygroundLiterals`: emits lint findings when the playground literals (`#colorLiteral`, `#fileLiteral`, `#imageLiteral`) are used in code. Enabled by default.\r\n- `OmitExplicitReturns`: removes unnecessary `return` keywords from single-expression function/closure/subscript/accessor bodies. This rule is **opt-in** (disabled by default).\r\n- `ReplaceForEachWithForLoop`: emits lint findings when the `forEach` method is called with a closure literal at the end of a member access chain, indicating that it should be replaced by a `for` loop instead. Enabled by default.\r\n- `TypeNamesShouldBeCapitalized`: emits lint findings when a type is declared with a name that is not `UpperCamelCase`. Enabled by default.\r\n\r\n### New configuration settings\r\n\r\n- `multiElementCollectionTrailingCommas` (boolean): When set to `false`, the last element of a multi-element array or dictionary literal will not have a trailing comma, even when the literal wraps across multiple lines. Defaults to `true` (preserving the behavior of previous releases).\r\n\r\n### Bug fixes and behavior changes\r\n\r\n- swift-format no longer crashes when formatting a `case` block that contains no statements.\r\n- In multi-statement closures, there is now always a line break between the `in` keyword and the first statement.\r\n- Attributes before `import` statements are no longer wrapped.\r\n- The `NoParensAroundConditions` rule no longer removes parentheses around an immediately called closure.\r\n- The `NoAssignmentInExpressions` rule can be configured to ignore assignments that occur inside certain function calls. The default configuration ignores assignments inside `XCTAssertNoThrow`.\r\n- When an editor placeholder is found in the source, this is now treated as a warning instead of an error. This allows formatting to continue, treating the placeholder as a regular identifier.\r\n- Keypath literals are properly wrapped and indented.\r\n- Postfix-`#if` expressions are no longer indented too far when they follow a closing parenthesis.\r\n- Indentation of multiline strings has been fixed in a number of locations.\r\n- Documentation comment parsing has improved for rules like `BeginDocumentationCommentWithOneLineSummary`, `UseTripleSlashForDocumentationComments`, and `ValidateDocumentationComments`.\r\n- Diagnostic messages throughout swift-format have been cleaned up and improved.\r\n- The `UseShorthandTypeNames` rule properly parenthesizes optional `some/any` types; for example, `Optional<any P>` becomes `(any P)?`, not `any P?` (which is invalid).\r\n- The `UseSynthesizedInitializer` rule no longer warns that an initializer is redundant if it is declared with any attributes.\r\n- The lint/format plugins for SPM now default to processing all targets if the `--target` argument is not specified.\r\n- swift-format now emits a warning if you configure a rule that does not exist. This is meant to help catch typos in the configuration file.\r\n- swift-format now does nothing if its input is empty (i.e., a zero-byte file). This suppresses a single trailing newline that would have otherwise been added in this case.\r\n\r\n### API changes\r\n\r\nFor developers using swift-format as a library, the types in the `SwiftFormatConfiguration` module have been folded into the `SwiftFormat` module. The `SwiftFormat` module is now the sole module you should import to use the linter/formatter APIs.\r\n\r\nThe `SwiftFormatConfiguration` module still exists to re-export the types for backwards compatibility, but this will be removed in the 510.0.0 release.",
    "createdAt" : "2023-09-15T20:23:27+09:00",
    "fetchedFromAPIAt" : "2024-07-14T22:49:45+09:00",
    "id" : "RE_kwDOC7ABTs4HOrUl",
    "owner" : "swiftlang",
    "publishedAt" : "2023-09-15T20:29:36+09:00",
    "repository" : "swift-format",
    "title" : "509.0.0",
    "url" : "https://github.com/swiftlang/swift-format/releases/tag/509.0.0",
    "version" : "509.0.0"
  },
  {
    "body" : "## What's Changed\r\n* Update to non-optional leading/trailingTrivia swift-syntax API by @bnbarham in https://github.com/apple/swift-format/pull/497\r\n* Adjustments to split `FunctionParameterSyntax` into multiple nodes for function parameters, closure parameters and enum parameters by @ahoppen in https://github.com/apple/swift-format/pull/495\r\n* Prepare 508.0.0 release. by @allevato in https://github.com/apple/swift-format/pull/506\r\n* Fix formatting of import with multiple attributes (fixes #445) and ensure that imports never wrap by @stackotter in https://github.com/apple/swift-format/pull/501\r\n* Fix fatal error caused by switch cases without any statements (#473) by @stackotter in https://github.com/apple/swift-format/pull/499\r\n* Remove the `swift-tools-support-core` dependency from swift-format. by @allevato in https://github.com/apple/swift-format/pull/509\r\n* Fix pretty printing of multi-statement closures (issue #494) by @stackotter in https://github.com/apple/swift-format/pull/498\r\n* Avoid removing certain disambiguating parens from conditions (fixes #298) by @stackotter in https://github.com/apple/swift-format/pull/503\r\n* Fix more postfix pound if scenarios by @DavidBrunow in https://github.com/apple/swift-format/pull/402\r\n* Remove usages of functions that shouldn’t be part of SwiftSyntax’s public API by @ahoppen in https://github.com/apple/swift-format/pull/504\r\n* Removed warnings by @CippoX in https://github.com/apple/swift-format/pull/510\r\n* Adjustment for SwiftSyntax rename `members` -> `memberBlock` by @ahoppen in https://github.com/apple/swift-format/pull/512\r\n* [SwiftSyntax] Remove force unwrapping for source location by @kimdv in https://github.com/apple/swift-format/pull/513\r\n* Change version dependency on `swift-argument-parser` to from `upToNextMinor` to `upToNextMajor` by @ahoppen in https://github.com/apple/swift-format/pull/517\r\n* Replace deprecated code of swift-syntax with the latest code to remove warning by @TTOzzi in https://github.com/apple/swift-format/pull/531\r\n* Fix indentation of multiline strings when part of a larger expression. by @allevato in https://github.com/apple/swift-format/pull/532\r\n* Fix `try`/`await` expressions in `NoAssignmentInExpressions`. by @allevato in https://github.com/apple/swift-format/pull/533\r\n* Further improve multiline string formatting. by @allevato in https://github.com/apple/swift-format/pull/534\r\n* Allow exceptions to `NoAssignmentInExpressions`. by @allevato in https://github.com/apple/swift-format/pull/535\r\n* Add `Token.break` after fixity in operator declaration by @StevenWong12 in https://github.com/apple/swift-format/pull/536\r\n* Rename `elementList` in `TupleExprSyntax` to `elements` by @StevenWong12 in https://github.com/apple/swift-format/pull/537\r\n* Fix `async throws` function types when they appear in an expression context. by @allevato in https://github.com/apple/swift-format/pull/539\r\n* Replace deprecated code from swift-syntax by @TTOzzi in https://github.com/apple/swift-format/pull/540\r\n* Wrap keypath literals appropriately. by @allevato in https://github.com/apple/swift-format/pull/545\r\n* Format `macro` declarations. by @allevato in https://github.com/apple/swift-format/pull/546\r\n* Insert white space before trailing closure of a macro expression by @kimberninger in https://github.com/apple/swift-format/pull/544\r\n* Rename 'squareBracket' to 'square' by @TTOzzi in https://github.com/apple/swift-format/pull/541\r\n* Delete `UnknownNodeTests`. by @allevato in https://github.com/apple/swift-format/pull/548\r\n* Fix formatting of `@backDeploy` attribute. by @allevato in https://github.com/apple/swift-format/pull/550\r\n* Don't insert an extra break inside empty multiline strings. by @allevato in https://github.com/apple/swift-format/pull/551\r\n* Downgrade `editor placeholder in source file` from error to warning. by @allevato in https://github.com/apple/swift-format/pull/547\r\n* Improve wrapping of if/switch expressions. by @allevato in https://github.com/apple/swift-format/pull/553\r\n* Fix postfix-`#if` formatting when they come after a closing parenthesis. by @allevato in https://github.com/apple/swift-format/pull/554\r\n* Fix indentation of multiline strings in enum case raw values. by @allevato in https://github.com/apple/swift-format/pull/555\r\n* Fix deprecated SwiftSyntax api warnings  by @kitasuke in https://github.com/apple/swift-format/pull/558\r\n* Remove the compiler condition guarding `DerivativeRegistrationAttributeArgumentsSyntax`. by @allevato in https://github.com/apple/swift-format/pull/559\r\n* Use swift-markdown to parse documentation comments. by @allevato in https://github.com/apple/swift-format/pull/560\r\n* Adjustment because of a property rename in swift-syntax by @ahoppen in https://github.com/apple/swift-format/pull/561\r\n* Replace `[TriviaPiece].Index` with `Array<TriviaPiece>.Index`. by @allevato in https://github.com/apple/swift-format/pull/565\r\n* Remove --mode flag for configuration dump by @Gray-Wind in https://github.com/apple/swift-format/pull/566\r\n* Use newer equivalents of deprecated nodes names by @Matejkob in https://github.com/apple/swift-format/pull/567\r\n* Add XCTest exclusion comment for lint rules by @kitasuke in https://github.com/apple/swift-format/pull/568\r\n* Use methods on Sequence instead of SyntaxCollection by @kitasuke in https://github.com/apple/swift-format/pull/569\r\n* Update swift-format for renamed children in SwiftSyntax by @ahoppen in https://github.com/apple/swift-format/pull/562\r\n* Fix deprecated warnings regarding swift-syntax changes by @kitasuke in https://github.com/apple/swift-format/pull/570\r\n* Adjustments for node renames in swift-syntax by @ahoppen in https://github.com/apple/swift-format/pull/572\r\n* Remove `initializer` from `TupleTypeElementSyntax` initializer call by @ahoppen in https://github.com/apple/swift-format/pull/573\r\n* Rename children of differentiability nodes by @ahoppen in https://github.com/apple/swift-format/pull/574\r\n* Adjustments for refactoring of representation of Accessors in SwiftSyntax by @ahoppen in https://github.com/apple/swift-format/pull/576\r\n* Use `where` instead of filter for `for` loops by @ahoppen in https://github.com/apple/swift-format/pull/575\r\n* Adjustments for usage of `DeclReferenceExprSyntax` as child of `MemberAccessExprSyntax` by @ahoppen in https://github.com/apple/swift-format/pull/577\r\n* [Core] Add new finding severity kinds - `refactoring` and `convention` by @xedin in https://github.com/apple/swift-format/pull/578\r\n* Fix deprecation warnings from renamed nodes / types in SwiftSyntax by @ahoppen in https://github.com/apple/swift-format/pull/579\r\n* Move the default `Configuration.init()` into a separate file. by @allevato in https://github.com/apple/swift-format/pull/580\r\n* Don't alter doc line comments unnecessarily. by @allevato in https://github.com/apple/swift-format/pull/581\r\n* Improve a bunch of diagnostic messages. by @allevato in https://github.com/apple/swift-format/pull/583\r\n* Migrate away from the latest deprecated APIs. by @allevato in https://github.com/apple/swift-format/pull/584\r\n* Replace the `ReplaceTrivia` rewriter with direct trivia mutations. by @allevato in https://github.com/apple/swift-format/pull/588\r\n* Parenthesize `some/any` types when converting `Optional` to `?`. by @allevato in https://github.com/apple/swift-format/pull/589\r\n* Update for the fact that syntax collections are always non-optional in SwiftSyntax now by @ahoppen in https://github.com/apple/swift-format/pull/585\r\n* Make `shebang` a child of `SourceFileSyntax` by @StevenWong12 in https://github.com/apple/swift-format/pull/590\r\n* [Lint] Add a rule to detect that type declarations are not capitalized by @xedin in https://github.com/apple/swift-format/pull/587\r\n* Don't warn about a redundant synthesized memberwise init if it has attributes. by @allevato in https://github.com/apple/swift-format/pull/592\r\n* Collapse almost everything into a single `SwiftFormat` module. by @allevato in https://github.com/apple/swift-format/pull/593\r\n* Refactor tests. by @allevato in https://github.com/apple/swift-format/pull/595\r\n* Don't do anything if the input is empty. by @allevato in https://github.com/apple/swift-format/pull/599\r\n* Fix a bunch of FIXMEs around linter findings. by @allevato in https://github.com/apple/swift-format/pull/597\r\n* [Lint/Format] Add a rule to omit `return` from functions, closures, subscripts, and variables by @xedin in https://github.com/apple/swift-format/pull/596\r\n* [Lint] Add a rule to replace `.forEach` with a for-in loop by @xedin in https://github.com/apple/swift-format/pull/603\r\n* Replace `with` calls with in-place mutation; clean up helpers. by @allevato in https://github.com/apple/swift-format/pull/609\r\n* Actually implement `NoPlaygroundLiterals` rule. by @allevato in https://github.com/apple/swift-format/pull/613\r\n* Adjust for \"remark\" diagnostic severity by @DougGregor in https://github.com/apple/swift-format/pull/605\r\n* Move `Configuration` into the `SwiftFormat` module. by @allevato in https://github.com/apple/swift-format/pull/614\r\n* Fix invalid links in README by @woxtu in https://github.com/apple/swift-format/pull/594\r\n* Default to all targets when plugin `--target` parameter missing. Fix #483 by @BrianHenryIE in https://github.com/apple/swift-format/pull/608\r\n* Remove unnecessary casting by @Matejkob in https://github.com/apple/swift-format/pull/618\r\n* Output a warning for unknown configuration rules in `.swift-format` by @natikgadzhi in https://github.com/apple/swift-format/pull/612\r\n* Generate rule docs automatically by @natikgadzhi in https://github.com/apple/swift-format/pull/615\r\n* [5.10] Add fixes that were present in 509.0.0 but not release/5.10 by @ahoppen in https://github.com/apple/swift-format/pull/704\r\n\r\n## New Contributors\r\n* @stackotter made their first contribution in https://github.com/apple/swift-format/pull/501\r\n* @CippoX made their first contribution in https://github.com/apple/swift-format/pull/510\r\n* @StevenWong12 made their first contribution in https://github.com/apple/swift-format/pull/536\r\n* @kimberninger made their first contribution in https://github.com/apple/swift-format/pull/544\r\n* @Gray-Wind made their first contribution in https://github.com/apple/swift-format/pull/566\r\n* @Matejkob made their first contribution in https://github.com/apple/swift-format/pull/567\r\n* @woxtu made their first contribution in https://github.com/apple/swift-format/pull/594\r\n* @BrianHenryIE made their first contribution in https://github.com/apple/swift-format/pull/608\r\n* @natikgadzhi made their first contribution in https://github.com/apple/swift-format/pull/612\r\n",
    "createdAt" : "2024-03-19T20:32:37+09:00",
    "fetchedFromAPIAt" : "2024-07-14T22:49:45+09:00",
    "id" : "RE_kwDOC7ABTs4I0Lkq",
    "owner" : "swiftlang",
    "publishedAt" : "2024-03-22T21:15:01+09:00",
    "repository" : "swift-format",
    "title" : "510.1.0",
    "url" : "https://github.com/swiftlang/swift-format/releases/tag/510.1.0",
    "version" : "510.1.0"
  },
  {
    "body" : "## What's Changed\r\n* Update to non-optional leading/trailingTrivia swift-syntax API by @bnbarham in https://github.com/apple/swift-format/pull/497\r\n* Adjustments to split `FunctionParameterSyntax` into multiple nodes for function parameters, closure parameters and enum parameters by @ahoppen in https://github.com/apple/swift-format/pull/495\r\n* Prepare 508.0.0 release. by @allevato in https://github.com/apple/swift-format/pull/506\r\n* Fix formatting of import with multiple attributes (fixes #445) and ensure that imports never wrap by @stackotter in https://github.com/apple/swift-format/pull/501\r\n* Fix fatal error caused by switch cases without any statements (#473) by @stackotter in https://github.com/apple/swift-format/pull/499\r\n* Remove the `swift-tools-support-core` dependency from swift-format. by @allevato in https://github.com/apple/swift-format/pull/509\r\n* Fix pretty printing of multi-statement closures (issue #494) by @stackotter in https://github.com/apple/swift-format/pull/498\r\n* Avoid removing certain disambiguating parens from conditions (fixes #298) by @stackotter in https://github.com/apple/swift-format/pull/503\r\n* Fix more postfix pound if scenarios by @DavidBrunow in https://github.com/apple/swift-format/pull/402\r\n* Remove usages of functions that shouldn’t be part of SwiftSyntax’s public API by @ahoppen in https://github.com/apple/swift-format/pull/504\r\n* Removed warnings by @CippoX in https://github.com/apple/swift-format/pull/510\r\n* Adjustment for SwiftSyntax rename `members` -> `memberBlock` by @ahoppen in https://github.com/apple/swift-format/pull/512\r\n* [SwiftSyntax] Remove force unwrapping for source location by @kimdv in https://github.com/apple/swift-format/pull/513\r\n* Change version dependency on `swift-argument-parser` to from `upToNextMinor` to `upToNextMajor` by @ahoppen in https://github.com/apple/swift-format/pull/517\r\n* Replace deprecated code of swift-syntax with the latest code to remove warning by @TTOzzi in https://github.com/apple/swift-format/pull/531\r\n* Fix indentation of multiline strings when part of a larger expression. by @allevato in https://github.com/apple/swift-format/pull/532\r\n* Fix `try`/`await` expressions in `NoAssignmentInExpressions`. by @allevato in https://github.com/apple/swift-format/pull/533\r\n* Further improve multiline string formatting. by @allevato in https://github.com/apple/swift-format/pull/534\r\n* Allow exceptions to `NoAssignmentInExpressions`. by @allevato in https://github.com/apple/swift-format/pull/535\r\n* Add `Token.break` after fixity in operator declaration by @StevenWong12 in https://github.com/apple/swift-format/pull/536\r\n* Rename `elementList` in `TupleExprSyntax` to `elements` by @StevenWong12 in https://github.com/apple/swift-format/pull/537\r\n* Fix `async throws` function types when they appear in an expression context. by @allevato in https://github.com/apple/swift-format/pull/539\r\n* Replace deprecated code from swift-syntax by @TTOzzi in https://github.com/apple/swift-format/pull/540\r\n* Wrap keypath literals appropriately. by @allevato in https://github.com/apple/swift-format/pull/545\r\n* Format `macro` declarations. by @allevato in https://github.com/apple/swift-format/pull/546\r\n* Insert white space before trailing closure of a macro expression by @kimberninger in https://github.com/apple/swift-format/pull/544\r\n* Rename 'squareBracket' to 'square' by @TTOzzi in https://github.com/apple/swift-format/pull/541\r\n* Delete `UnknownNodeTests`. by @allevato in https://github.com/apple/swift-format/pull/548\r\n* Fix formatting of `@backDeploy` attribute. by @allevato in https://github.com/apple/swift-format/pull/550\r\n* Don't insert an extra break inside empty multiline strings. by @allevato in https://github.com/apple/swift-format/pull/551\r\n* Downgrade `editor placeholder in source file` from error to warning. by @allevato in https://github.com/apple/swift-format/pull/547\r\n* Improve wrapping of if/switch expressions. by @allevato in https://github.com/apple/swift-format/pull/553\r\n* Fix postfix-`#if` formatting when they come after a closing parenthesis. by @allevato in https://github.com/apple/swift-format/pull/554\r\n* Fix indentation of multiline strings in enum case raw values. by @allevato in https://github.com/apple/swift-format/pull/555\r\n* Fix deprecated SwiftSyntax api warnings  by @kitasuke in https://github.com/apple/swift-format/pull/558\r\n* Remove the compiler condition guarding `DerivativeRegistrationAttributeArgumentsSyntax`. by @allevato in https://github.com/apple/swift-format/pull/559\r\n* Use swift-markdown to parse documentation comments. by @allevato in https://github.com/apple/swift-format/pull/560\r\n* Adjustment because of a property rename in swift-syntax by @ahoppen in https://github.com/apple/swift-format/pull/561\r\n* Replace `[TriviaPiece].Index` with `Array<TriviaPiece>.Index`. by @allevato in https://github.com/apple/swift-format/pull/565\r\n* Remove --mode flag for configuration dump by @Gray-Wind in https://github.com/apple/swift-format/pull/566\r\n* Use newer equivalents of deprecated nodes names by @Matejkob in https://github.com/apple/swift-format/pull/567\r\n* Add XCTest exclusion comment for lint rules by @kitasuke in https://github.com/apple/swift-format/pull/568\r\n* Use methods on Sequence instead of SyntaxCollection by @kitasuke in https://github.com/apple/swift-format/pull/569\r\n* Update swift-format for renamed children in SwiftSyntax by @ahoppen in https://github.com/apple/swift-format/pull/562\r\n* Fix deprecated warnings regarding swift-syntax changes by @kitasuke in https://github.com/apple/swift-format/pull/570\r\n* Adjustments for node renames in swift-syntax by @ahoppen in https://github.com/apple/swift-format/pull/572\r\n* Remove `initializer` from `TupleTypeElementSyntax` initializer call by @ahoppen in https://github.com/apple/swift-format/pull/573\r\n* Rename children of differentiability nodes by @ahoppen in https://github.com/apple/swift-format/pull/574\r\n* Adjustments for refactoring of representation of Accessors in SwiftSyntax by @ahoppen in https://github.com/apple/swift-format/pull/576\r\n* Use `where` instead of filter for `for` loops by @ahoppen in https://github.com/apple/swift-format/pull/575\r\n* Adjustments for usage of `DeclReferenceExprSyntax` as child of `MemberAccessExprSyntax` by @ahoppen in https://github.com/apple/swift-format/pull/577\r\n* [Core] Add new finding severity kinds - `refactoring` and `convention` by @xedin in https://github.com/apple/swift-format/pull/578\r\n* Fix deprecation warnings from renamed nodes / types in SwiftSyntax by @ahoppen in https://github.com/apple/swift-format/pull/579\r\n* Move the default `Configuration.init()` into a separate file. by @allevato in https://github.com/apple/swift-format/pull/580\r\n* Don't alter doc line comments unnecessarily. by @allevato in https://github.com/apple/swift-format/pull/581\r\n* Improve a bunch of diagnostic messages. by @allevato in https://github.com/apple/swift-format/pull/583\r\n* Migrate away from the latest deprecated APIs. by @allevato in https://github.com/apple/swift-format/pull/584\r\n* Replace the `ReplaceTrivia` rewriter with direct trivia mutations. by @allevato in https://github.com/apple/swift-format/pull/588\r\n* Parenthesize `some/any` types when converting `Optional` to `?`. by @allevato in https://github.com/apple/swift-format/pull/589\r\n* Update for the fact that syntax collections are always non-optional in SwiftSyntax now by @ahoppen in https://github.com/apple/swift-format/pull/585\r\n* Make `shebang` a child of `SourceFileSyntax` by @StevenWong12 in https://github.com/apple/swift-format/pull/590\r\n* [Lint] Add a rule to detect that type declarations are not capitalized by @xedin in https://github.com/apple/swift-format/pull/587\r\n* Don't warn about a redundant synthesized memberwise init if it has attributes. by @allevato in https://github.com/apple/swift-format/pull/592\r\n* Collapse almost everything into a single `SwiftFormat` module. by @allevato in https://github.com/apple/swift-format/pull/593\r\n* Refactor tests. by @allevato in https://github.com/apple/swift-format/pull/595\r\n* Don't do anything if the input is empty. by @allevato in https://github.com/apple/swift-format/pull/599\r\n* Fix a bunch of FIXMEs around linter findings. by @allevato in https://github.com/apple/swift-format/pull/597\r\n* [Lint/Format] Add a rule to omit `return` from functions, closures, subscripts, and variables by @xedin in https://github.com/apple/swift-format/pull/596\r\n* [Lint] Add a rule to replace `.forEach` with a for-in loop by @xedin in https://github.com/apple/swift-format/pull/603\r\n* Replace `with` calls with in-place mutation; clean up helpers. by @allevato in https://github.com/apple/swift-format/pull/609\r\n* Actually implement `NoPlaygroundLiterals` rule. by @allevato in https://github.com/apple/swift-format/pull/613\r\n* Adjust for \"remark\" diagnostic severity by @DougGregor in https://github.com/apple/swift-format/pull/605\r\n* Move `Configuration` into the `SwiftFormat` module. by @allevato in https://github.com/apple/swift-format/pull/614\r\n* Fix invalid links in README by @woxtu in https://github.com/apple/swift-format/pull/594\r\n* Default to all targets when plugin `--target` parameter missing. Fix #483 by @BrianHenryIE in https://github.com/apple/swift-format/pull/608\r\n* Remove unnecessary casting by @Matejkob in https://github.com/apple/swift-format/pull/618\r\n* Output a warning for unknown configuration rules in `.swift-format` by @natikgadzhi in https://github.com/apple/swift-format/pull/612\r\n* Generate rule docs automatically by @natikgadzhi in https://github.com/apple/swift-format/pull/615\r\n\r\n## New Contributors\r\n* @stackotter made their first contribution in https://github.com/apple/swift-format/pull/501\r\n* @CippoX made their first contribution in https://github.com/apple/swift-format/pull/510\r\n* @StevenWong12 made their first contribution in https://github.com/apple/swift-format/pull/536\r\n* @kimberninger made their first contribution in https://github.com/apple/swift-format/pull/544\r\n* @Gray-Wind made their first contribution in https://github.com/apple/swift-format/pull/566\r\n* @Matejkob made their first contribution in https://github.com/apple/swift-format/pull/567\r\n* @woxtu made their first contribution in https://github.com/apple/swift-format/pull/594\r\n* @BrianHenryIE made their first contribution in https://github.com/apple/swift-format/pull/608\r\n* @natikgadzhi made their first contribution in https://github.com/apple/swift-format/pull/612\r\n\r\n**Full Changelog**: https://github.com/apple/swift-format/compare/swift-5.9.2-RELEASE...swift-5.10-RELEASE",
    "createdAt" : "2023-09-08T03:12:16+09:00",
    "fetchedFromAPIAt" : "2024-07-14T22:49:45+09:00",
    "id" : "RE_kwDOC7ABTs4IpfQg",
    "owner" : "swiftlang",
    "publishedAt" : "2024-03-07T01:12:04+09:00",
    "repository" : "swift-format",
    "title" : "Swift 5.10 Release",
    "url" : "https://github.com/swiftlang/swift-format/releases/tag/swift-5.10-RELEASE",
    "version" : "swift-5.10-RELEASE"
  },
  {
    "body" : "## What's Changed\r\n* Add option to disable trailing commas on multi-line collections by @mlavergn in https://github.com/swiftlang/swift-format/pull/619\r\n* [Lint] Add a rule to detect and transform `[<Type>]()` into literal … by @xedin in https://github.com/swiftlang/swift-format/pull/617\r\n* Add support for various new 5.9 features. by @allevato in https://github.com/swiftlang/swift-format/pull/622\r\n* Disable testable imports when testing swift-format by @ahoppen in https://github.com/swiftlang/swift-format/pull/624\r\n* Don’t set `SWIFT_BUILD_SCRIPT_ENVIRONMENT` when building swift-format by @ahoppen in https://github.com/swiftlang/swift-format/pull/630\r\n* Add the `UseExplicitNilCheckInConditions` rule. by @allevato in https://github.com/swiftlang/swift-format/pull/627\r\n* Add option to print number of instructions executed by `swift-format` by @ahoppen in https://github.com/swiftlang/swift-format/pull/625\r\n* Fix building error by @kimdv in https://github.com/swiftlang/swift-format/pull/631\r\n* Rename `_InstructionCounter` by @bnbarham in https://github.com/swiftlang/swift-format/pull/632\r\n* Fix up import of renamed `_InstructionCount` by @bnbarham in https://github.com/swiftlang/swift-format/pull/633\r\n* Fix broken links in docs by @japanese-goblinn in https://github.com/swiftlang/swift-format/pull/635\r\n* Allow JSON configuration text to be passed directly on the command line. by @allevato in https://github.com/swiftlang/swift-format/pull/634\r\n* Make all `Finding.Message` extensions file-private. by @allevato in https://github.com/swiftlang/swift-format/pull/636\r\n* Remove the `SwiftFormatConfiguration` module. by @allevato in https://github.com/swiftlang/swift-format/pull/637\r\n* Rename `generate-pipeline` to `generate-swift-format`. by @allevato in https://github.com/swiftlang/swift-format/pull/638\r\n* Add installation instructions for Homebrew by @beatrupp in https://github.com/swiftlang/swift-format/pull/639\r\n* Fix a bug where an unfolded `SequenceExpr` would make it to the pretty-printer. by @allevato in https://github.com/swiftlang/swift-format/pull/641\r\n* Ignore too long end of line comments when they're wrapped in `printCo… by @dylansturg in https://github.com/swiftlang/swift-format/pull/642\r\n* Don't lose a trailing comma in `UseExplicitNilCheckInConditions`. by @allevato in https://github.com/swiftlang/swift-format/pull/645\r\n* Ignore symlinks and hidden (dot) files during `--recursive`. by @allevato in https://github.com/swiftlang/swift-format/pull/644\r\n* Remove the legacy trivia workaround. by @allevato in https://github.com/swiftlang/swift-format/pull/646\r\n* Add parentheses when needed to convert `let _ = expr` to `expr != nil`. by @allevato in https://github.com/swiftlang/swift-format/pull/647\r\n* Various trivia-related fixes. by @allevato in https://github.com/swiftlang/swift-format/pull/648\r\n* Some minor frontend tweaks. by @allevato in https://github.com/swiftlang/swift-format/pull/649\r\n* [AllPublicDeclarationsHaveDocumentation] Fix behavior for `override` methods. by @allevato in https://github.com/swiftlang/swift-format/pull/655\r\n* Fix multi-line string wrapping in `@available` attributes. by @allevato in https://github.com/swiftlang/swift-format/pull/656\r\n* Respect SyntaxVisitorContinueKind of rules when run in Pipeline by @thunderseethe in https://github.com/swiftlang/swift-format/pull/659\r\n* Remove deprecated variants from parameterClause case match by @thunderseethe in https://github.com/swiftlang/swift-format/pull/661\r\n* Various fixes for some 509.0.0 bugs. by @allevato in https://github.com/swiftlang/swift-format/pull/666\r\n* [OrderedImports] Fix dropped trailing comments on top-level code items. by @allevato in https://github.com/swiftlang/swift-format/pull/674\r\n* Allow cross-compiling swift-format by @ahoppen in https://github.com/swiftlang/swift-format/pull/679\r\n* Don’t include the toolchain rpath when installing swift-format by @ahoppen in https://github.com/swiftlang/swift-format/pull/680\r\n* Order package manifest to start with the package declaration by @ahoppen in https://github.com/swiftlang/swift-format/pull/682\r\n* [CI] Only use 'required' for Python >= 3.7 by @bnbarham in https://github.com/swiftlang/swift-format/pull/686\r\n* build: introduce a CMake based build for swift-format by @compnerd in https://github.com/swiftlang/swift-format/pull/677\r\n* Clean up rpaths of installed swift-format by @ahoppen in https://github.com/swiftlang/swift-format/pull/683\r\n* Ignore sentence terminators inside quotes when applying the 'BeginDocumentationCommentWithOneLineSummary' option. by @TTOzzi in https://github.com/swiftlang/swift-format/pull/687\r\n* Find configuration based on CWD when formatting from stdin by @judemille in https://github.com/swiftlang/swift-format/pull/685\r\n* fix readme typo by @saturnboy in https://github.com/swiftlang/swift-format/pull/688\r\n* Renamed plugin configuration parameter by @dmonagle in https://github.com/swiftlang/swift-format/pull/696\r\n* [6.0] Depend on swift-syntax `release/6.0` instead of `main` by @ahoppen in https://github.com/swiftlang/swift-format/pull/706\r\n* Update README to specify version 510.1.0 for building from source by @mh-mobile in https://github.com/swiftlang/swift-format/pull/709\r\n* Fix comment for multiElementCollectionTrailingCommas by @ozumin in https://github.com/swiftlang/swift-format/pull/710\r\n* Fix some typos by @mrs1669 in https://github.com/swiftlang/swift-format/pull/711\r\n* Fix @_originallyDefinedIn argument spacing by @dduan in https://github.com/swiftlang/swift-format/pull/717\r\n* Fix incorrect spacing when pretty-printing @_documentation by @dduan in https://github.com/swiftlang/swift-format/pull/719\r\n* Merge `main` into `release/6.0` by @ahoppen in https://github.com/swiftlang/swift-format/pull/720\r\n* Update RuleDocumentation.md by @fawkeswei in https://github.com/swiftlang/swift-format/pull/727\r\n* Remove check for prioritizeKeepingFunctionOutputTogether on enum decl. by @shawnhyam in https://github.com/swiftlang/swift-format/pull/728\r\n* Make sure there is a break after an #endif. by @shawnhyam in https://github.com/swiftlang/swift-format/pull/729\r\n* Merge `main` into `release/6.0` by @ahoppen in https://github.com/swiftlang/swift-format/pull/731\r\n* Merge `main` into `release/6.0` by @ahoppen in https://github.com/swiftlang/swift-format/pull/733\r\n* Merge adjacent .line and .docLine comments into a single element. by @shawnhyam in https://github.com/swiftlang/swift-format/pull/732\r\n* Merge `main` into `release/6.0` by @ahoppen in https://github.com/swiftlang/swift-format/pull/742\r\n* Support for formatting a selection by @DaveEwing in https://github.com/swiftlang/swift-format/pull/708\r\n* Fix `@_expose` attribute argument spacing by @kateinoigakukun in https://github.com/swiftlang/swift-format/pull/750\r\n* Handle indented block comments with ASCII art correctly. by @shawnhyam in https://github.com/swiftlang/swift-format/pull/746\r\n* Delete CODE_OF_CONDUCT.md by @parispittman in https://github.com/swiftlang/swift-format/pull/753\r\n* Update README.md by @parispittman in https://github.com/swiftlang/swift-format/pull/755\r\n* Delete CONTRIBUTING.md by @parispittman in https://github.com/swiftlang/swift-format/pull/754\r\n* Update links for repositories moved to the swiftlang org on GitHub by @ahoppen in https://github.com/swiftlang/swift-format/pull/757\r\n* Update README.md to mention that swift-format is included in Xcode 16 by @ahoppen in https://github.com/swiftlang/swift-format/pull/756\r\n* [6.0] Update links for repositories moved to the swiftlang org on GitHub by @ahoppen in https://github.com/swiftlang/swift-format/pull/758\r\n* add support for riscv64 by @futurejones in https://github.com/swiftlang/swift-format/pull/752\r\n* Merge `main` into `release/6.0` by @ahoppen in https://github.com/swiftlang/swift-format/pull/760\r\n* Fix a build issue in swift-format by @ahoppen in https://github.com/swiftlang/swift-format/pull/762\r\n* [6.0] Add a break after `do` when it has typed throws by @bnbarham in https://github.com/swiftlang/swift-format/pull/774\r\n* [6.0] Improve formatting of macro decls with attributes by @ahoppen in https://github.com/swiftlang/swift-format/pull/781\r\n* [6.0] Fix missing break in nested IfConfig decls by @ahoppen in https://github.com/swiftlang/swift-format/pull/782\r\n\r\n## New Contributors\r\n* @mlavergn made their first contribution in https://github.com/swiftlang/swift-format/pull/619\r\n* @japanese-goblinn made their first contribution in https://github.com/swiftlang/swift-format/pull/635\r\n* @beatrupp made their first contribution in https://github.com/swiftlang/swift-format/pull/639\r\n* @judemille made their first contribution in https://github.com/swiftlang/swift-format/pull/685\r\n* @saturnboy made their first contribution in https://github.com/swiftlang/swift-format/pull/688\r\n* @dmonagle made their first contribution in https://github.com/swiftlang/swift-format/pull/696\r\n* @mh-mobile made their first contribution in https://github.com/swiftlang/swift-format/pull/709\r\n* @ozumin made their first contribution in https://github.com/swiftlang/swift-format/pull/710\r\n* @mrs1669 made their first contribution in https://github.com/swiftlang/swift-format/pull/711\r\n* @fawkeswei made their first contribution in https://github.com/swiftlang/swift-format/pull/727\r\n* @DaveEwing made their first contribution in https://github.com/swiftlang/swift-format/pull/708\r\n* @kateinoigakukun made their first contribution in https://github.com/swiftlang/swift-format/pull/750\r\n* @parispittman made their first contribution in https://github.com/swiftlang/swift-format/pull/753\r\n* @futurejones made their first contribution in https://github.com/swiftlang/swift-format/pull/752\r\n",
    "createdAt" : "2024-09-14T03:38:30+09:00",
    "fetchedFromAPIAt" : "2024-09-14T10:04:09+09:00",
    "id" : "RE_kwDOC7ABTs4KbpqS",
    "owner" : "swiftlang",
    "publishedAt" : "2024-09-14T03:49:12+09:00",
    "repository" : "swift-format",
    "title" : "600.0.0",
    "url" : "https://github.com/swiftlang/swift-format/releases/tag/600.0.0",
    "version" : "600.0.0"
  },
  {
    "body" : null,
    "createdAt" : "2024-10-01T12:43:57+09:00",
    "fetchedFromAPIAt" : "2024-10-02T10:07:10+09:00",
    "id" : "RE_kwDOC7ABTs4Kl72d",
    "owner" : "swiftlang",
    "publishedAt" : "2024-10-01T12:43:59+09:00",
    "repository" : "swift-format",
    "title" : "601.0.0-prerelease-2024-10-01",
    "url" : "https://github.com/swiftlang/swift-format/releases/tag/601.0.0-prerelease-2024-10-01",
    "version" : "601.0.0-prerelease-2024-10-01"
  },
  {
    "body" : null,
    "createdAt" : "2024-10-09T10:06:31+09:00",
    "fetchedFromAPIAt" : "2024-10-09T10:06:48+09:00",
    "id" : "RE_kwDOC7ABTs4Kq3Q8",
    "owner" : "swiftlang",
    "publishedAt" : "2024-10-09T10:06:34+09:00",
    "repository" : "swift-format",
    "title" : "601.0.0-prerelease-2024-10-09",
    "url" : "https://github.com/swiftlang/swift-format/releases/tag/601.0.0-prerelease-2024-10-09",
    "version" : "601.0.0-prerelease-2024-10-09"
  },
  {
    "body" : null,
    "createdAt" : "2024-10-16T03:27:17+09:00",
    "fetchedFromAPIAt" : "2024-10-16T10:08:24+09:00",
    "id" : "RE_kwDOC7ABTs4Ku8vx",
    "owner" : "swiftlang",
    "publishedAt" : "2024-10-16T03:27:18+09:00",
    "repository" : "swift-format",
    "title" : "601.0.0-prerelease-2024-10-15",
    "url" : "https://github.com/swiftlang/swift-format/releases/tag/601.0.0-prerelease-2024-10-15",
    "version" : "601.0.0-prerelease-2024-10-15"
  },
  {
    "body" : null,
    "createdAt" : "2025-02-05T08:12:05+09:00",
    "fetchedFromAPIAt" : "2025-02-06T10:07:47+09:00",
    "id" : "RE_kwDOC7ABTs4L1DbJ",
    "owner" : "swiftlang",
    "publishedAt" : "2025-02-05T08:12:06+09:00",
    "repository" : "swift-format",
    "title" : "601.0.0-prerelease-2025-02-04",
    "url" : "https://github.com/swiftlang/swift-format/releases/tag/601.0.0-prerelease-2025-02-04",
    "version" : "601.0.0-prerelease-2025-02-04"
  },
  {
    "body" : null,
    "createdAt" : "2025-02-13T06:12:06+09:00",
    "fetchedFromAPIAt" : "2025-02-13T10:08:26+09:00",
    "id" : "RE_kwDOC7ABTs4L60ES",
    "owner" : "swiftlang",
    "publishedAt" : "2025-02-13T06:12:07+09:00",
    "repository" : "swift-format",
    "title" : "601.0.0-prerelease-2025-02-12",
    "url" : "https://github.com/swiftlang/swift-format/releases/tag/601.0.0-prerelease-2025-02-12",
    "version" : "601.0.0-prerelease-2025-02-12"
  },
  {
    "body" : null,
    "createdAt" : "2024-12-05T10:25:14+09:00",
    "fetchedFromAPIAt" : "2024-12-06T10:13:46+09:00",
    "id" : "RE_kwDOC7ABTs4LRQmM",
    "owner" : "swiftlang",
    "publishedAt" : "2024-12-05T10:25:16+09:00",
    "repository" : "swift-format",
    "title" : "601.0.0-prerelease-2024-12-05",
    "url" : "https://github.com/swiftlang/swift-format/releases/tag/601.0.0-prerelease-2024-12-05",
    "version" : "601.0.0-prerelease-2024-12-05"
  },
  {
    "body" : null,
    "createdAt" : "2024-12-13T07:41:48+09:00",
    "fetchedFromAPIAt" : "2024-12-13T10:15:11+09:00",
    "id" : "RE_kwDOC7ABTs4LW1j3",
    "owner" : "swiftlang",
    "publishedAt" : "2024-12-13T07:41:50+09:00",
    "repository" : "swift-format",
    "title" : "601.0.0-prerelease-2024-12-12",
    "url" : "https://github.com/swiftlang/swift-format/releases/tag/601.0.0-prerelease-2024-12-12",
    "version" : "601.0.0-prerelease-2024-12-12"
  },
  {
    "body" : null,
    "createdAt" : "2024-12-18T02:50:43+09:00",
    "fetchedFromAPIAt" : "2024-12-18T10:11:26+09:00",
    "id" : "RE_kwDOC7ABTs4LZfUw",
    "owner" : "swiftlang",
    "publishedAt" : "2024-12-18T02:50:44+09:00",
    "repository" : "swift-format",
    "title" : "601.0.0-prerelease-2024-12-17",
    "url" : "https://github.com/swiftlang/swift-format/releases/tag/601.0.0-prerelease-2024-12-17",
    "version" : "601.0.0-prerelease-2024-12-17"
  },
  {
    "body" : null,
    "createdAt" : "2025-02-20T09:36:10+09:00",
    "fetchedFromAPIAt" : "2025-02-20T10:08:36+09:00",
    "id" : "RE_kwDOC7ABTs4L_8UH",
    "owner" : "swiftlang",
    "publishedAt" : "2025-02-20T09:36:11+09:00",
    "repository" : "swift-format",
    "title" : "601.0.0-prerelease-2025-02-20",
    "url" : "https://github.com/swiftlang/swift-format/releases/tag/601.0.0-prerelease-2025-02-20",
    "version" : "601.0.0-prerelease-2025-02-20"
  },
  {
    "body" : null,
    "createdAt" : "2025-01-09T22:41:57+09:00",
    "fetchedFromAPIAt" : "2025-01-10T10:10:18+09:00",
    "id" : "RE_kwDOC7ABTs4Ljs8U",
    "owner" : "swiftlang",
    "publishedAt" : "2025-01-09T22:41:58+09:00",
    "repository" : "swift-format",
    "title" : "601.0.0-prerelease-2025-01-09",
    "url" : "https://github.com/swiftlang/swift-format/releases/tag/601.0.0-prerelease-2025-01-09",
    "version" : "601.0.0-prerelease-2025-01-09"
  },
  {
    "body" : null,
    "createdAt" : "2025-01-16T03:28:30+09:00",
    "fetchedFromAPIAt" : "2025-01-18T10:04:28+09:00",
    "id" : "RE_kwDOC7ABTs4LnxZz",
    "owner" : "swiftlang",
    "publishedAt" : "2025-01-16T03:28:32+09:00",
    "repository" : "swift-format",
    "title" : "601.0.0-prerelease-2025-01-15",
    "url" : "https://github.com/swiftlang/swift-format/releases/tag/601.0.0-prerelease-2025-01-15",
    "version" : "601.0.0-prerelease-2025-01-15"
  },
  {
    "body" : null,
    "createdAt" : "2025-01-23T06:36:28+09:00",
    "fetchedFromAPIAt" : "2025-01-23T10:06:39+09:00",
    "id" : "RE_kwDOC7ABTs4Lsez7",
    "owner" : "swiftlang",
    "publishedAt" : "2025-01-23T06:36:29+09:00",
    "repository" : "swift-format",
    "title" : "601.0.0-prerelease-2025-01-22",
    "url" : "https://github.com/swiftlang/swift-format/releases/tag/601.0.0-prerelease-2025-01-22",
    "version" : "601.0.0-prerelease-2025-01-22"
  },
  {
    "body" : null,
    "createdAt" : "2025-02-26T07:57:37+09:00",
    "fetchedFromAPIAt" : "2025-02-26T10:09:39+09:00",
    "id" : "RE_kwDOC7ABTs4MEMX7",
    "owner" : "swiftlang",
    "publishedAt" : "2025-02-26T07:57:38+09:00",
    "repository" : "swift-format",
    "title" : "601.0.0-prerelease-2025-02-25",
    "url" : "https://github.com/swiftlang/swift-format/releases/tag/601.0.0-prerelease-2025-02-25",
    "version" : "601.0.0-prerelease-2025-02-25"
  }
]