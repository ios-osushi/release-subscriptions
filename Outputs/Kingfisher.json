[
  {
    "body" : "#### Fix\r\n* Expose all build configurations in Package.swift file for Swift Package Manager. Now you can choose the linking style by yourself. [#1426](https://github.com/onevcat/Kingfisher/pull/1426)\r\n\r\n",
    "createdAt" : "2020-04-11T10:26:21+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTI1NDA5MDU1",
    "owner" : "onevcat",
    "publishedAt" : "2020-04-11T10:28:53+09:00",
    "repository" : "Kingfisher",
    "title" : "5.13.4 - Build Configurations",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/5.13.4",
    "version" : "5.13.4"
  },
  {
    "body" : "#### Add\n* A `.retryStrategy` option and associated `RetryStrategy` to define a highly customizable retry mechanism in Kingfisher. [#1424]\n* Built-in `DelayRetryStrategy` to provide a most common used retry strategy implementation. It simplifies the normal retry requirement when downloading an image from network. [#1447](https://github.com/onevcat/Kingfisher/pull/1447)\n* Now you can set the round corner radius for a `RoundCornerImageProcessor` in a fraction way. This is useful when you do not know the desire image view size, but still want to clip any received image to a certain round corner ratio (such as a circle for any image). [#1443](https://github.com/onevcat/Kingfisher/pull/1443)\n* Add an `isLoaded` binding to `KFImage` to follow SwiftUI pattern better. [#1429](https://github.com/onevcat/Kingfisher/pull/1429)\n\n#### Fix\n* An issue that `.imageModifier` option not working on an `ImageProvider` provided image. [#1435](https://github.com/onevcat/Kingfisher/pull/1435)\n* A workaround for making xcframework continue to work when exported with Swift 5.2 compiler and Xcode 11.4. [#1444](https://github.com/onevcat/Kingfisher/pull/1444)\n\n",
    "createdAt" : "2020-05-13T00:08:58+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTI2NDI4NTMx",
    "owner" : "onevcat",
    "publishedAt" : "2020-05-13T00:11:16+09:00",
    "repository" : "Kingfisher",
    "title" : "5.14.0 - Retry Strategy",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/5.14.0",
    "version" : "5.14.0"
  },
  {
    "body" : "#### Fix\n* Early return if no valid animator in an `AnimatedImageView`. This prevents a CGImage rendering issue displaying a static image. [#1428](https://github.com/onevcat/Kingfisher/issues/1428)\n* Enable Define Module setting to generate module map. So Kingfisher could be used in libraries imported to Objective-C projects. [#1451](https://github.com/onevcat/Kingfisher/pull/1451)\n* A fix to workaround on implicitly initializer of queue that might cause a crash. [#1449](https://github.com/onevcat/Kingfisher/issues/1449)\n* Improve the disk cache performance by avoiding unnecessary disk operations. [#1480](https://github.com/onevcat/Kingfisher/pull/1480)\n\n",
    "createdAt" : "2020-07-06T02:20:01+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTI4MjMzNjg1",
    "owner" : "onevcat",
    "publishedAt" : "2020-07-06T02:22:50+09:00",
    "repository" : "Kingfisher",
    "title" : "5.14.1 - Summer Fix",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/5.14.1",
    "version" : "5.14.1"
  },
  {
    "body" : "#### Add\n* An `AVAssetImageDataProvider` to generate an image from a remote video asset at a specified time. All the processing gets benefits from current existing Kingfisher technologies, such as cache and image processors. [#1500](https://github.com/onevcat/Kingfisher/pull/1500)\n* New extension methods on `NSTextAttachment` to load an image from network for an attachment. [#1495](https://github.com/onevcat/Kingfisher/pull/1495)\n* A general clear cache method which combines clearing for memory cache and disk cache. [#1494](https://github.com/onevcat/Kingfisher/pull/1494)\n\n#### Fix\n* Now the sample app has a new look and supports dark mode, finally. [#1496](https://github.com/onevcat/Kingfisher/pull/1496)\n\n",
    "createdAt" : "2020-08-17T22:30:42+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTI5NzcxNDQ3",
    "owner" : "onevcat",
    "publishedAt" : "2020-08-17T22:35:43+09:00",
    "repository" : "Kingfisher",
    "title" : "5.15.0 - Video and Text Attachment",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/5.15.0",
    "version" : "5.15.0"
  },
  {
    "body" : "#### Fix\n* An issue caused the `onSuccess` handler not be called when the image is already cached. [#1570](https://github.com/onevcat/Kingfisher/pull/1570)\n\n",
    "createdAt" : "2020-11-27T23:36:03+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTM0NTA3MTYw",
    "owner" : "onevcat",
    "publishedAt" : "2020-11-27T23:38:43+09:00",
    "repository" : "Kingfisher",
    "title" : "5.15.8 - KFImage handler",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/5.15.8",
    "version" : "5.15.8"
  },
  {
    "body" : "#### Add\r\n* A `KF` shorthand to create image setting tasks and config them. It provides a cleaner and modern way to use Kingfisher. Now, instead of using `imageView.kf.setImage(with:options:)`, you can perform chain-able invocation with `KF` helpers. For example, the code below is identical. [#1546](https://github.com/onevcat/Kingfisher/pull/1546)\r\n\r\n    ```swift\r\n    // Old way\r\n    imageView.kf.setImage(\r\n      with: url,\r\n      placeholder: localImage,\r\n      options: [.transition(.fade(1)), .loadDiskFileSynchronously],\r\n      progressBlock: { receivedSize, totalSize in\r\n          print(\"progressBlock\")\r\n      },\r\n      completionHandler: { result in\r\n          print(result)\r\n      }\r\n    )\r\n\r\n    // New way\r\n    KF.url(url)\r\n      .placeholder(localImage)\r\n      .fade(duration: 1)\r\n      .loadDiskFileSynchronously()\r\n      .onProgress { _ in print(\"progressBlock\") }\r\n      .onSuccess { result in print(result) }\r\n      .onFailure { err in print(\"Error: \\(err)\") }\r\n      .set(to: imageView)\r\n    ```\r\n* Similar to `KF`, The `KFImage` for SwiftUI is now having the similar chain-able syntax to setup an image task and options. This makes the `KFImage` APIs closer to the way how SwiftUI code is written. [#1586](https://github.com/onevcat/Kingfisher/pull/1586)\r\n* Add support for `TVMonogramView` on tvOS. [#1571](https://github.com/onevcat/Kingfisher/pull/1571)\r\n* Some important properties and method in `AnimatedImageView.Animator` are marked as `public` now. It provides some useful information of the decoded GIF files. [#1575](https://github.com/onevcat/Kingfisher/pull/1575)\r\n* An `AsyncImageDownloadRequestModifier` to support modifying the request in an asynchronous way. [#1589](https://github.com/onevcat/Kingfisher/pull/1589/files)\r\n* Add a `.lowDataMode` option to support for Low Data Mode. When the `.lowDataMode` option is provided with an alternative source (usually a low-resolution version of the original image), Kingfisher will respect user's Low Data Mode setting and download the alternative image instead. [#1590](https://github.com/onevcat/Kingfisher/pull/1590)\r\n\r\n#### Fix\r\n* An issue that importing AppKit wrongly in a macCatalyst build. [#1547](https://github.com/onevcat/Kingfisher/pull/1547/commits/096498f7798a6fd34c70efc6f80014dfc6d8a9b7)\r\n\r\n#### Remove\r\n* Deprecated types, methods and properties are removed. If you are still using `Kingfisher.Image`, `Kingfisher.ImageView` or `Kingfisher.Button`, use the equivalent `KFCrossPlatform` types (such as `KFCrossPlatformImage`, etc) instead. Please make sure you do not have any warnings before migrate to Kingfisher v6. For more about the removed deprecated things, check [#1525](https://github.com/onevcat/Kingfisher/pull/1525/files).\r\n* The standalone framework target of SwiftUI support is removed. Now the SwiftUI support is a part in the main Kingfisher library. To upgrade to v6, first remove `Kingfisher/SwiftUI` subpod (if you are using CocoaPods) or remove the `KingfisherSwiftUI` target (if you are using Carthage or Swift Package Manager), then reinstall Kingfisher. [#1574](https://github.com/onevcat/Kingfisher/pull/1574)\r\n\r\n",
    "createdAt" : "2021-01-03T15:34:47+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTM1OTE5NjY5",
    "owner" : "onevcat",
    "publishedAt" : "2021-01-03T15:37:45+09:00",
    "repository" : "Kingfisher",
    "title" : "6.0.0 - New Year 2021",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/6.0.0",
    "version" : "6.0.0"
  },
  {
    "body" : "#### Fix\n* Start the binder again when `KFImage` initialized, to keep the same behavior as previous versions. [#1594](https://github.com/onevcat/Kingfisher/issues/1594)\n\n",
    "createdAt" : "2021-01-05T22:06:32+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTM1OTk1MTk2",
    "owner" : "onevcat",
    "publishedAt" : "2021-01-05T22:08:52+09:00",
    "repository" : "Kingfisher",
    "title" : "6.0.1 - Bind & Hug",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/6.0.1",
    "version" : "6.0.1"
  },
  {
    "body" : "#### Add\n* Rewrite state management for `KFImage`. Now the image reloading works in a more stable way without task dispatching. [#1604](https://github.com/onevcat/Kingfisher/pull/1604)\n* Add `fade` and `forceTransition` modifier to `KFImage` to support built-in fade in effect when loading image in SwiftUI. [#1604](https://github.com/onevcat/Kingfisher/pull/1604)\n\n#### Fix\n* When an `ImageModifier` is applied, the modified image is not cached to memory cache anymore. The `ImageModifier` is intended to be used just before setting the image to a view and now it works as expected. [#1612](https://github.com/onevcat/Kingfisher/pull/1612)\n* Now `SwiftUI` and `Combine` are declared as weak link in podspec. This is a workaround for [some rare case build issue](https://stackoverflow.com/a/60198305). It does not affect supported deploy version of Kingfisher. [#1607](https://github.com/onevcat/Kingfisher/pull/1607)\n* Remove header file from podspec to allow Kingfisher built as a static framework in a Swift-ObjC mixed project. [#1608](https://github.com/onevcat/Kingfisher/pull/1608)\n\n",
    "createdAt" : "2021-02-01T21:41:24+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTM3MTc0ODYy",
    "owner" : "onevcat",
    "publishedAt" : "2021-02-01T21:44:28+09:00",
    "repository" : "Kingfisher",
    "title" : "6.1.0 - SwiftUI Rework",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/6.1.0",
    "version" : "6.1.0"
  },
  {
    "body" : "#### Fix\n* Remove unnecessary queue dispatch when setting image result. This prevents image flickering when some situation. [#1615](https://github.com/onevcat/Kingfisher/pull/1615)\n* Now the `KF` builder methods also accept optional `URL` or `Source`. It aligns the syntax with the normal view extension methods. [#1617](https://github.com/onevcat/Kingfisher/pull/1617)\n* Fix an issue that wrong hash is calculated for `ImageBinder`. It might cause view state lost for a `KFImage`. [#1624](https://github.com/onevcat/Kingfisher/pull/1624)\n* Now the `ImageCache` will disable the disk storage when there is no free space on disk when creating the cache folder, instead of just crashing it. [#1628](https://github.com/onevcat/Kingfisher/pull/1628)\n* A workaround for `@State` lost when using a view inside another container in a `Lazy` stack or grid. [#1631](https://github.com/onevcat/Kingfisher/pull/1631)\n* Performance improvement for images with an non-up orientation in Exif when displaying in `KFImage`. [#1629](https://github.com/onevcat/Kingfisher/pull/1629)\n\n",
    "createdAt" : "2021-02-17T00:17:45+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTM4MTE0Mzk2",
    "owner" : "onevcat",
    "publishedAt" : "2021-02-17T00:20:34+09:00",
    "repository" : "Kingfisher",
    "title" : "6.1.1 - SwiftUI Issues",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/6.1.1",
    "version" : "6.1.1"
  },
  {
    "body" : "#### Add\n* The backend of Kingfisher's cache solution, `DiskStorage` and `MemoryStorage`, are now marked as `public`. So you can use them standalone in your project. [#1649](https://github.com/onevcat/Kingfisher/pull/1649)\n* An `imageFrameCount` property in image view extensions. It holds the frame count of an animated image if available. [#1647](https://github.com/onevcat/Kingfisher/pull/1647)\n* A new `extraSessionDelegateHandler` in `ImageDownloader`. Now you can receive the related session task delegate method by registering an external delegate object. [#1620](https://github.com/onevcat/Kingfisher/pull/1620)\n* A new method `loadImmediately` for `KFImage` to start the load manually. It is useful if you want to load the image before `onAppear` is called.\n\n#### Fix\n* Drop the use of `@State` for keeping image across `View` update for `KFImage`. This should fix some SwiftUI internal crash when setting the image in `KFImage`. [#1642](https://github.com/onevcat/Kingfisher/pull/1642)\n* The image reference in `ImageBinder` now is marked with `weak`. This helps release memory quicker in some cases. [#1640](https://github.com/onevcat/Kingfisher/pull/1640)\n\n",
    "createdAt" : "2021-03-08T21:25:35+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTM5NDM2NzIx",
    "owner" : "onevcat",
    "publishedAt" : "2021-03-08T21:28:36+09:00",
    "repository" : "Kingfisher",
    "title" : "6.2.0 - Spring Release",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/6.2.0",
    "version" : "6.2.0"
  },
  {
    "body" : "#### Fix\n* Revert changes for the external delegate in [#1620](https://github.com/onevcat/Kingfisher/pull/1620), which caused some image resource loading failing due to a CFNetwork internal error.\n\n",
    "createdAt" : "2021-03-09T12:04:23+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTM5NDgzMjMx",
    "owner" : "onevcat",
    "publishedAt" : "2021-03-09T12:06:51+09:00",
    "repository" : "Kingfisher",
    "title" : "6.2.1 - Spring Release Fix",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/6.2.1",
    "version" : "6.2.1"
  },
  {
    "body" : "#### Fix\n* A workaround for a SwiftUI issue that embedding an image view inside the `List` > `NavigationLink` > `HStack` hierarchy could crash the app on iOS 14. [#1508](https://github.com/onevcat/Kingfisher/issues/1508)\n\n",
    "createdAt" : "2020-09-16T23:51:35+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTMxNDA2NzM0",
    "owner" : "onevcat",
    "publishedAt" : "2020-09-16T23:54:29+09:00",
    "repository" : "Kingfisher",
    "title" : "5.15.1 - SwiftUI Layout",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/5.15.1",
    "version" : "5.15.1"
  },
  {
    "body" : "#### Fix\n* Fix a build error introduced by the previous SwiftUI fix for Xcode 12. Now Xcode 11 can also build the KingfisherSwiftUI target. [#1515](https://github.com/onevcat/Kingfisher/pull/1515)\n\n",
    "createdAt" : "2020-09-19T18:03:22+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTMxNTU1NzUz",
    "owner" : "onevcat",
    "publishedAt" : "2020-09-19T18:06:03+09:00",
    "repository" : "Kingfisher",
    "title" : "5.15.2 - Xcode 11 Revived",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/5.15.2",
    "version" : "5.15.2"
  },
  {
    "body" : "#### Fix\n* Removed the unnecessary ObjC header generating and module defining due to Xcode 12 is now generating conflicted types even for different libraries. [#1517](https://github.com/onevcat/Kingfisher/issues/1517)\n* Set deploy target for SwiftUI target and its pod spec to iOS 10 and macOS 10.12, which aligns to the settings of core framework. That resolves some dependency issues when using CocoaPods for both app target and extension targets. But it does not mean you can use the SwiftUI support on those minimal target. All related APIs are still unavailable on old system versions. [#1524](https://github.com/onevcat/Kingfisher/pull/1524)\n\n",
    "createdAt" : "2020-09-21T01:19:06+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTMxNTc3Njgw",
    "owner" : "onevcat",
    "publishedAt" : "2020-09-21T01:21:27+09:00",
    "repository" : "Kingfisher",
    "title" : "5.15.3 - Farewell Objective-C",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/5.15.3",
    "version" : "5.15.3"
  },
  {
    "body" : "#### Fix\n* Give `SessionDelegate` an Objective-C name so it can work with other libraries even added by a dependency which generates Objective-C header. [#1532](https://github.com/onevcat/Kingfisher/pull/1532)\n\n",
    "createdAt" : "2020-09-24T10:16:57+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTMxNzM2NDMy",
    "owner" : "onevcat",
    "publishedAt" : "2020-09-24T10:18:56+09:00",
    "repository" : "Kingfisher",
    "title" : "5.15.4 - Farewell Objective-C (CocoaPods)",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/5.15.4",
    "version" : "5.15.4"
  },
  {
    "body" : "#### Fix\n* A possible fix for the crashes when cancelling a huge amount of image tasks too fast. [#1537]\n\n",
    "createdAt" : "2020-09-29T22:29:33+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTMxOTM1NjAx",
    "owner" : "onevcat",
    "publishedAt" : "2020-09-29T22:31:58+09:00",
    "repository" : "Kingfisher",
    "title" : "5.15.5 - Cancelling Fix",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/5.15.5",
    "version" : "5.15.5"
  },
  {
    "body" : "#### Fix\n* Prevent main queue dispatching in `ImageBinder` if it is already on main thread. This prevents unintended flickering when reloading. [#1551](https://github.com/onevcat/Kingfisher/pull/1551)\n\n",
    "createdAt" : "2020-10-11T11:28:25+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTMyNDEzNDUy",
    "owner" : "onevcat",
    "publishedAt" : "2020-10-11T11:30:57+09:00",
    "repository" : "Kingfisher",
    "title" : "5.15.6 - ImageBinder Callback",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/5.15.6",
    "version" : "5.15.6"
  },
  {
    "body" : "#### Fix\n* A potential crash when cancelling image downloading task while accessing its original request on iOS 13 or earlier. [#1558](https://github.com/onevcat/Kingfisher/pull/1558)\n\n",
    "createdAt" : "2020-10-29T21:42:44+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTMzMjE2NTA4",
    "owner" : "onevcat",
    "publishedAt" : "2020-10-29T21:45:17+09:00",
    "repository" : "Kingfisher",
    "title" : "5.15.7 - Cancel Lock",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/5.15.7",
    "version" : "5.15.7"
  },
  {
    "body" : "#### Add\r\n* Rewrite SwiftUI support based on `@StateObject` instead of the old `@ObservedObject`. It provides a stable and better data model backs the image rendering in SwiftUI. For this, Kingfisher SwiftUI supports from iOS 14 now. [#1707](https://github.com/onevcat/Kingfisher/pull/1707)\r\n* Mark `ImageCache.retrieveImageInMemoryCache(forKey:options:)` as `open` to expose a correct override entry point to outside. [#1703](https://github.com/onevcat/Kingfisher/pull/1703)\r\n* The `NSTextAttachment` extension method now accepts closure instead of a evaluated view. This allows delaying the passing in view to the timing which actually it is needed. [#1746](https://github.com/onevcat/Kingfisher/pull/1746)\r\n* A `KFAnimatedImage` type to display a GIF image in SwiftUI. [#1705](https://github.com/onevcat/Kingfisher/pull/1705)\r\n* Add a `progress` parameter to the `KFImage`'s `placeholder` closure. This allows you create a view based on the loading progress. [#1707](https://github.com/onevcat/Kingfisher/pull/1707)\r\n\r\n#### Fix\r\n* Uses `UIGraphicsImageRenderer` on iOS and tvOS for better image drawing. [#1706](https://github.com/onevcat/Kingfisher/pull/1706)\r\n* An issue that prevents Kingfisher compiling on mac Catalyst target in some certain of Xcode versions. [#1692](https://github.com/onevcat/Kingfisher/pull/1692)\r\n* The `KF.retry(:_)` method now accepts an optional value. It allows to reset the retry strategy by passing in a `nil` value. [#1729](https://github.com/onevcat/Kingfisher/pull/1729)\r\n* The `placeholder` view builder of `KFImage` now works when it gets changed instead of using its initial value forever. [#1707](https://github.com/onevcat/Kingfisher/pull/1707)\r\n* Some minor performance improvement. [#1739](https://github.com/onevcat/Kingfisher/pull/1739)\r\n\r\n#### Remove\r\n* Drop support for iOS 10, macOS 10.13, tvOS 10 and watch OS 3.\r\n* The workaround of `KFImage.loadImmediately` is not necessary anymore due to the model switching to `@StateObject`. The interface is kept for backward compatibility, but it does nothing in the new version. [#1707](https://github.com/onevcat/Kingfisher/pull/1707)\r\n\r\n",
    "createdAt" : "2021-07-27T00:11:55+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQ2Nzc2NjE3",
    "owner" : "onevcat",
    "publishedAt" : "2021-07-27T00:13:31+09:00",
    "repository" : "Kingfisher",
    "title" : "7.0.0-beta.1 - Version 7",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.0.0-beta.1",
    "version" : "7.0.0-beta.1"
  },
  {
    "body" : "#### Fix\r\n\r\n- `LocalFileImageDataProvider` now loads data in a background queue by default. This prevents loading performance issue when the loading is created on main thread. [#1764]",
    "createdAt" : "2021-08-02T22:26:17+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQ3MTU5MDA5",
    "owner" : "onevcat",
    "publishedAt" : "2021-08-02T22:27:51+09:00",
    "repository" : "Kingfisher",
    "title" : "7.0.0-beta.2 - Version 7",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.0.0-beta.2",
    "version" : "7.0.0-beta.2"
  },
  {
    "body" : "#### Fix\n* An issue which causes runtime crash on `@Published` metadata when using Kingfisher on iOS 12 in some certain rare cases. [#1717](https://github.com/onevcat/Kingfisher/issues/1717)\n\n",
    "createdAt" : "2021-08-03T10:04:43+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQ3MTkzMjg0",
    "owner" : "onevcat",
    "publishedAt" : "2021-08-03T10:06:33+09:00",
    "repository" : "Kingfisher",
    "title" : "6.3.1 - Published Wrapper",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/6.3.1",
    "version" : "6.3.1"
  },
  {
    "body" : "#### Add\r\n* Now `KFAnimatedImage` also supports `configure` modifier so you can set options to the underhood `AnimatedImageView`. [#1768](https://github.com/onevcat/Kingfisher/pull/1768)\r\n* Expose `AnimatedImageView` fields to allow consumers to observe GIF progress. [#1789](https://github.com/onevcat/Kingfisher/pull/1789)\r\n\r\n#### Fix\r\n* Respect transition for SwiftUI view when using `KFImage`. [#1767](https://github.com/onevcat/Kingfisher/pull/1767)\r\n* A type of `AuthenticationChallengeResponsable`. Now use `AuthenticationChallengeResponsible` instead. [#1780](https://github.com/onevcat/Kingfisher/pull/1780/files)\r\n* An issue that `AnimatedImageView` dose not change the `tintColor` for templated images. [#1786](https://github.com/onevcat/Kingfisher/pull/1786)\r\n\r\n",
    "createdAt" : "2021-08-29T17:55:47+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQ4NjI4MjM5",
    "owner" : "onevcat",
    "publishedAt" : "2021-08-29T17:57:26+09:00",
    "repository" : "Kingfisher",
    "title" : "7.0.0-beta.3 - Version 7",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.0.0-beta.3",
    "version" : "7.0.0-beta.3"
  },
  {
    "body" : "#### Add\n* Mark `SessionDelegate` as public to allow a subclass to take over the delegate methods from session tasks. [#1658](https://github.com/onevcat/Kingfisher/pull/1658)\n* A new `imageDownloader(_:didDownload:with:)` in `ImageDownloaderDelegate` to pass not only `Data` but also the whole `URLResponse` to delegate method. Now you can determine how to handle these data based on the received response. [#1676](https://github.com/onevcat/Kingfisher/pull/1676)\n* An option `autoExtAfterHashedFileName` in `DiskStorage.Config` to allow appending the file extension extracted from the cache key. [#1671](https://github.com/onevcat/Kingfisher/pull/1671)\n\n#### Fix\n* Now the GIF continues to play in a collection view cell with highlight support. [#1685](https://github.com/onevcat/Kingfisher/pull/1685)\n* Fix a crash when loading GIF files with lots of frames in `AnimatedImageView`. Thanks for contribution from @wow-such-amazing [#1686](https://github.com/onevcat/Kingfisher/pull/1686)\n\n",
    "createdAt" : "2021-04-21T21:41:54+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQxNzc0Nzgx",
    "owner" : "onevcat",
    "publishedAt" : "2021-04-21T21:43:36+09:00",
    "repository" : "Kingfisher",
    "title" : "6.3.0 - Open To Better",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/6.3.0",
    "version" : "6.3.0"
  },
  {
    "body" : "#### Add\n* Rewrite SwiftUI support based on `@StateObject` instead of the old `@ObservedObject`. It provides a stable and better data model backs the image rendering in SwiftUI. For this, Kingfisher SwiftUI supports from iOS 14 now. [#1707](https://github.com/onevcat/Kingfisher/pull/1707)\n* Mark `ImageCache.retrieveImageInMemoryCache(forKey:options:)` as `open` to expose a correct override entry point to outside. [#1703](https://github.com/onevcat/Kingfisher/pull/1703)\n* The `NSTextAttachment` extension method now accepts closure instead of a evaluated view. This allows delaying the passing in view to the timing which actually it is needed. [#1746](https://github.com/onevcat/Kingfisher/pull/1746)\n* A `KFAnimatedImage` type to display a GIF image in SwiftUI. [#1705](https://github.com/onevcat/Kingfisher/pull/1705)\n* Add a `progress` parameter to the `KFImage`'s `placeholder` closure. This allows you create a view based on the loading progress. [#1707](https://github.com/onevcat/Kingfisher/pull/1707)\n* Now `KFAnimatedImage` also supports `configure` modifier so you can set options to the underhood `AnimatedImageView`. [#1768](https://github.com/onevcat/Kingfisher/pull/1768)\n* Expose `AnimatedImageView` fields to allow consumers to observe GIF progress. [#1789](https://github.com/onevcat/Kingfisher/pull/1789) @AttilaTheFun\n* An option to pass in an [write option](https://developer.apple.com/documentation/foundation/nsdata/writingoptions) for writing data to the disk cache. This allows writing cache in a fine-tuned way, such as `.atomic` or `.completeFileProtection`. [#1793](https://github.com/onevcat/Kingfisher/pull/1793) @ignotusverum\n\n#### Fix\n* Uses `UIGraphicsImageRenderer` on iOS and tvOS for better image drawing. [#1706](https://github.com/onevcat/Kingfisher/pull/1706)\n* An issue that prevents Kingfisher compiling on mac Catalyst target in some certain of Xcode versions. [#1692](https://github.com/onevcat/Kingfisher/pull/1692) @kvyatkovskys\n* The `KF.retry(:_)` method now accepts an optional value. It allows to reset the retry strategy by passing in a `nil` value. [#1729](https://github.com/onevcat/Kingfisher/pull/1729)\n* The `placeholder` view builder of `KFImage` now works when it gets changed instead of using its initial value forever. [#1707](https://github.com/onevcat/Kingfisher/pull/1707)\n* Some minor performance improvement. [#1739](https://github.com/onevcat/Kingfisher/pull/1739) @fuyoufang\n* The `LocalFileImageDataProvider` now loads data in a background queue by default. This prevents loading performance issue when the loading is created on main thread. [#1764](https://github.com/onevcat/Kingfisher/pull/1764) @ConfusedVorlon\n* Respect transition for SwiftUI view when using `KFImage`. [#1767](https://github.com/onevcat/Kingfisher/pull/1767)\n* A type of `AuthenticationChallengeResponsable`. Now use `AuthenticationChallengeResponsible` instead. [#1780](https://github.com/onevcat/Kingfisher/pull/1780) @fakerlogic\n* An issue that `AnimatedImageView` dose not change the `tintColor` for templated images. [#1786](https://github.com/onevcat/Kingfisher/pull/1786) @leonpesdk\n* A crash when loading a GIF image in iOS 13 and below. [#1805](https://github.com/onevcat/Kingfisher/pull/1805/) @leonpesdk\n\n#### Remove\n* Drop support for iOS 10/11, macOS 10.13/10.14, tvOS 10/11 and watch OS 3/4. [#1802](https://github.com/onevcat/Kingfisher/issues/1802)\n* The workaround of `KFImage.loadImmediately` is not necessary anymore due to the model switching to `@StateObject`. The interface is kept for backward compatibility, but it does nothing in the new version. [#1707](https://github.com/onevcat/Kingfisher/pull/1707)\n\n",
    "createdAt" : "2021-09-21T21:54:24+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "RE_kwDOAf70wM4C-qhm",
    "owner" : "onevcat",
    "publishedAt" : "2021-09-21T21:56:18+09:00",
    "repository" : "Kingfisher",
    "title" : "7.0.0 - Version 7",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.0.0",
    "version" : "7.0.0"
  },
  {
    "body" : "#### Add\r\n* An option to pass in an [write option](https://developer.apple.com/documentation/foundation/nsdata/writingoptions) for writing data to the disk cache. This allows writing cache in a fine-tuned way, such as `.atomic` or `.completeFileProtection`. [#1793](https://github.com/onevcat/Kingfisher/pull/1793)\r\n\r\n#### Fix\r\n* A crash when loading a GIF image in iOS 13 and below. [#1805](https://github.com/onevcat/Kingfisher/pull/1805/files)\r\n\r\n",
    "createdAt" : "2021-09-16T00:27:38+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "RE_kwDOAf70wM4C9QIK",
    "owner" : "onevcat",
    "publishedAt" : "2021-09-16T00:29:24+09:00",
    "repository" : "Kingfisher",
    "title" : "7.0.0-beta.4 - Version 7",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.0.0-beta.4",
    "version" : "7.0.0-beta.4"
  },
  {
    "body" : "#### Fix\n* Align `requestModifier` parameter with `AsyncImageDownloadRequestModifier` to allow async request changing. [#1918](https://github.com/onevcat/Kingfisher/pull/1918) @KKirsten\n* Fix an issue that data downloading task callbacks are held even when the task is removed. [#1913](https://github.com/onevcat/Kingfisher/pull/1913) @onevcat\n* Give correct cache key for local urls in its conformance of `Resource`. [#1914](https://github.com/onevcat/Kingfisher/pull/1914) @onevcat\n* Reset placeholder image when loading fails. [#1925](https://github.com/onevcat/Kingfisher/pull/1925) @PJ-LT\n* Fix several typos and grammar. [#1926](https://github.com/onevcat/Kingfisher/pull/1926) @johnmckerrell [#1927](https://github.com/onevcat/Kingfisher/pull/1927) @SunsetWan\n\n",
    "createdAt" : "2022-04-11T00:27:20+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "RE_kwDOAf70wM4D0WxR",
    "owner" : "onevcat",
    "publishedAt" : "2022-04-11T00:29:02+09:00",
    "repository" : "Kingfisher",
    "title" : "7.2.1 - Spring Earth",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.2.1",
    "version" : "7.2.1"
  },
  {
    "body" : "#### Fix\n* Loading an animated images from cache now respects the received options. [#1935](https://github.com/onevcat/Kingfisher/pull/1935) @uclort\n\n",
    "createdAt" : "2022-05-08T21:39:38+09:00",
    "fetchedFromAPIAt" : "2022-05-09T09:47:23+09:00",
    "id" : "RE_kwDOAf70wM4D896F",
    "owner" : "onevcat",
    "publishedAt" : "2022-05-08T21:41:22+09:00",
    "repository" : "Kingfisher",
    "title" : "7.2.2 - Rainy Season",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.2.2",
    "version" : "7.2.2"
  },
  {
    "body" : "#### Add\n* Extension for CarPlay support. Now you can use Kingfisher's extension image setting methods on `CPListItem`. [#1802](https://github.com/onevcat/Kingfisher/pull/1820) from @waynehartman\n\n#### Fix\n* An Xcode issue that not recognizes iOS 15 availability checking for Apple Silicon. [#1822](https://github.com/onevcat/Kingfisher/pull/1822) from @enoktate\n* Add `onFailureImage` modifier back to `KFImage`, which was unexpected removed while upgrading. [#1829](https://github.com/onevcat/Kingfisher/pull/1829) from @skellock\n* Start binder loading when `body` is evaluated. This fixes an unwanted flickering. This also adds a protection for internal loading state.  [#1828](https://github.com/onevcat/Kingfisher/pull/1828) from @JetForMe and @IvanShah\n* Use color description based on `CGFloat` style of a color instead of a hex value to allow extended color space when setting it to a processor. [#1826](https://github.com/onevcat/Kingfisher/pull/1826) from @vonox7\n* An issue that the local file provided images are cached for multiple times when an app is updated. This is due to a changing main bundle location on the disk. Now Kingfisher uses a stable version of disk URL as the default cache key. [#1831](https://github.com/onevcat/Kingfisher/pull/1831) from @iaomw\n* Now `KFImage`'s internal rendered view is wrapped by a `ZStack`. This prevents a lazy container from recognizing different `KFImage`s with a same URL as the same view. [#1840](https://github.com/onevcat/Kingfisher/pull/1840) from @iOSappssolutions\n\n",
    "createdAt" : "2021-10-12T01:07:06+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "RE_kwDOAf70wM4DDIvZ",
    "owner" : "onevcat",
    "publishedAt" : "2021-10-12T01:09:07+09:00",
    "repository" : "Kingfisher",
    "title" : "7.1.0 - Autumn Patch",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.1.0",
    "version" : "7.1.0"
  },
  {
    "body" : "#### Fix\n* In some cases the `KFImage` loading causes a freeze on certain iOS 14 systems. [#1849](https://github.com/onevcat/Kingfisher/issues/1849) Thanks reporting from @JetForMe @benjamincombes @aralatpulat\n* Setting image to an `AnimatedImageView` now correctly replaces its layer contents. [#1836](https://github.com/onevcat/Kingfisher/issues/1836) @phantomato\n\n",
    "createdAt" : "2021-10-16T01:08:09+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "RE_kwDOAf70wM4DEPcS",
    "owner" : "onevcat",
    "publishedAt" : "2021-10-16T01:10:56+09:00",
    "repository" : "Kingfisher",
    "title" : "7.1.1 - Double Ninth",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.1.1",
    "version" : "7.1.1"
  },
  {
    "body" : "#### Fix\n* Lacking of `diskStoreWriteOptions` from `KFOptionSetter`. Now it supports to be set in a chainable way. [#1862](https://github.com/onevcat/Kingfisher/issues/1862) @ignotusverum\n* A duplicated nested `Radius` type which prevents the framework being used in Playground. [#1872](https://github.com/onevcat/Kingfisher/pull/1872)\n* An issue that sometimes `KFImage` does not load images correctly when a huge amount of images are being loaded due to animation setting. [#1873](https://github.com/onevcat/Kingfisher/pull/1873) @tatsuz0u\n* Remove explicit usage of `@Published` to allow refering `KFImage` even under a deploy target below iOS 13. [#1875](https://github.com/onevcat/Kingfisher/pull/1875)\n* Now the image cache calculats the cost animated images correctly with all frames. [#1881](https:://github.com/onevcat/Kingfisher/pull/1881) @pal-aspringfield\n* Remove CarPlay support when building against macCatalyst, which is not properly conditionally supported. [#1876](https://github.com/onevcat/Kingfisher/pull/1876)\n\n",
    "createdAt" : "2021-12-07T13:51:37+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "RE_kwDOAf70wM4DQ55E",
    "owner" : "onevcat",
    "publishedAt" : "2021-12-07T13:53:25+09:00",
    "repository" : "Kingfisher",
    "title" : "7.1.2 - Cold Days",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.1.2",
    "version" : "7.1.2"
  },
  {
    "body" : "#### Add\n* An option in memory cache that allows the cached images not be purged while the app is switchted to background. [#1890](https://github.com/onevcat/Kingfisher/pull/1890)\n\n#### Fix\n* Now the animated images are reset when deinit. This might fix some ocasional crash when destroying the `AnimatedImageView`. [#1886](https://github.com/onevcat/Kingfisher/pull/1886)\n* Fix wrong key override when a local resource created by `ImageResource`'s initializer. [#1903](https://github.com/onevcat/Kingfisher/pull/1903)\n\n",
    "createdAt" : "2022-02-27T00:45:04+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "RE_kwDOAf70wM4Dm8Fl",
    "owner" : "onevcat",
    "publishedAt" : "2022-02-27T00:46:48+09:00",
    "repository" : "Kingfisher",
    "title" : "7.2.0 - End of the tunnel",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.2.0",
    "version" : "7.2.0"
  },
  {
    "body" : "#### Fix\n* A rare crash from `_UIImageCGImageContent` when loading GIF files on iOS 15 or later. [#2004](https://github.com/onevcat/Kingfisher/pull/2004)\n* Now the dSYM symbols are contained inside the xcframework bundle instead of as standalone files. [#1998](https://github.com/onevcat/Kingfisher/pull/1998)\n* An issue that the processor is not applied to original image data when `DefaultCacheSerializer.preferCacheOriginalData` is set to `true`. [#1999](https://github.com/onevcat/Kingfisher/pull/1999)\n\n",
    "createdAt" : "2022-10-26T00:50:19+09:00",
    "fetchedFromAPIAt" : "2022-10-26T09:58:26+09:00",
    "id" : "RE_kwDOAf70wM4E0x0R",
    "owner" : "onevcat",
    "publishedAt" : "2022-10-26T00:51:50+09:00",
    "repository" : "Kingfisher",
    "title" : "7.4.1 - Maple Days",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.4.1",
    "version" : "7.4.1"
  },
  {
    "body" : "#### Fix\n* Now the URL based `AVAssetImageDataProvider` support tracking transform by default. This could solve some cases that the video thumbnail were not at correct orientation. [#1951](https://github.com/onevcat/Kingfisher/pull/1951) @sgarg4008\n* Use DocC as documentation generator and switch to [Swift Package Index as the host](https://swiftpackageindex.com/onevcat/Kingfisher/master/documentation/kingfisher). Big thanks to @daveverwer and all other fellows for the fantastic work!\n\n",
    "createdAt" : "2022-06-09T23:32:00+09:00",
    "fetchedFromAPIAt" : "2022-06-10T09:49:53+09:00",
    "id" : "RE_kwDOAf70wM4EHeC-",
    "owner" : "onevcat",
    "publishedAt" : "2022-06-09T23:33:36+09:00",
    "repository" : "Kingfisher",
    "title" : "7.2.3 - Track Transform",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.2.3",
    "version" : "7.2.3"
  },
  {
    "body" : "#### Fix\n* Dependency of DocC plugin is now removed and Swift Package Index can still generate and host the documentation. [#1952](https://github.com/onevcat/Kingfisher/discussions/1952) @marcusziade\n\n",
    "createdAt" : "2022-06-15T11:05:07+09:00",
    "fetchedFromAPIAt" : "2022-06-16T09:52:27+09:00",
    "id" : "RE_kwDOAf70wM4EJB9N",
    "owner" : "onevcat",
    "publishedAt" : "2022-06-15T11:06:53+09:00",
    "repository" : "Kingfisher",
    "title" : "7.2.4 - Removing DocC plugin",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.2.4",
    "version" : "7.2.4"
  },
  {
    "body" : "#### Add\n* Added `ImageProgressive` now contains a delegate `onImageUpdated` which will notify you everytime the progressive scanner can decode an intermediate image. You also have a chance to choose an image update strategy to respond the delegate. [#1957](https://github.com/onevcat/Kingfisher/issues/1957) @jyounus\n* Now the `progressive` option can work with `KingfisherManager`. Previously it only works when set in the view extension methods under `kf`. [#1961](https://github.com/onevcat/Kingfisher/pull/1961) @onevcat\n\n#### Fix\n* A potential crash in `AnimatedImageView` that releasing on another thread. [#1956](https://github.com/onevcat/Kingfisher/pull/1956) @ufosky\n* A few internal clean up and removal of unused code. [#1958](https://github.com/onevcat/Kingfisher/pull/1958) @idrougge\n\n#### Remove\n* With the support of `ImageProgressive.onImageUpdated`, the semantic of `ImageProgressive.default` is conflicting with the behavior. `ImageProgressive.default` is now marked as deprecated. To initilize a default `ImageProgressive`, use `ImageProgressive.init()` instead.\n\n",
    "createdAt" : "2022-07-06T00:35:07+09:00",
    "fetchedFromAPIAt" : "2022-07-06T09:55:24+09:00",
    "id" : "RE_kwDOAf70wM4EP9J7",
    "owner" : "onevcat",
    "publishedAt" : "2022-07-06T00:36:41+09:00",
    "repository" : "Kingfisher",
    "title" : "7.3.0 - Progressive Progress",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.3.0",
    "version" : "7.3.0"
  },
  {
    "body" : "#### Fix\n* An issue that `EmptyView` as `KFImage` placeholder fails loading of the image. [#1973](https://github.com/onevcat/Kingfisher/pull/1973) [@damian-rzeszot]\n\n",
    "createdAt" : "2022-07-31T12:07:18+09:00",
    "fetchedFromAPIAt" : "2022-08-01T10:01:35+09:00",
    "id" : "RE_kwDOAf70wM4EXglN",
    "owner" : "onevcat",
    "publishedAt" : "2022-07-31T12:08:54+09:00",
    "repository" : "Kingfisher",
    "title" : "7.3.1 - Empty Not Void",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.3.1",
    "version" : "7.3.1"
  },
  {
    "body" : "#### Fix\n* A regression introduced by the previous version, which changed the default layout behavior when setting a placeholder. Now the `KFImage` should have the same layout behavior as SwiftUI's `AsyncImage` while loading. if no placeholder is set, it takes all the proposed size while loading. If a placeholder is set, it propose size to the placeholder and follow placeholder's layout. [#1975](https://github.com/onevcat/Kingfisher/pull/1975)\n\n",
    "createdAt" : "2022-08-10T23:08:07+09:00",
    "fetchedFromAPIAt" : "2022-08-11T09:51:26+09:00",
    "id" : "RE_kwDOAf70wM4Easrn",
    "owner" : "onevcat",
    "publishedAt" : "2022-08-10T23:09:41+09:00",
    "repository" : "Kingfisher",
    "title" : "7.3.2 - Align Layout",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.3.2",
    "version" : "7.3.2"
  },
  {
    "body" : "#### Add\n* A `data` property in `RetrieveImageResult` for reading the original data when an image loading is done. [#1986](https://github.com/onevcat/Kingfisher/pull/1986)\n* An async `data` getter in `ImageDataProvider`. More async methods are on the way. [#1989](https://github.com/onevcat/Kingfisher/pull/1989)\n\n#### Fix\n* A workaround for some cases the `KFImage` does not load images when embedded in the SwiftUI List on iOS 16. This only alleviates the problem when shallow embedded. For deeper nested, waiting for Apple's fix. [#1988](https://github.com/onevcat/Kingfisher/issues/1988) FB11564208\n\n",
    "createdAt" : "2022-10-05T00:51:26+09:00",
    "fetchedFromAPIAt" : "2022-10-05T10:08:28+09:00",
    "id" : "RE_kwDOAf70wM4EtOw8",
    "owner" : "onevcat",
    "publishedAt" : "2022-10-05T00:53:26+09:00",
    "repository" : "Kingfisher",
    "title" : "7.4.0 - Summer Ends",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.4.0",
    "version" : "7.4.0"
  },
  {
    "body" : "#### Add\n* Add a `KFImage` modifier `startLoadingBeforeViewAppear` to allow image loading before SwiftUI view's `onAppear`. This is a workaround for [#1988](https://github.com/onevcat/Kingfisher/issues/1988).\n\n#### Fix\n* Now loading images from local disk also respects the `backgroundDecode` option. [#2009](https://github.com/onevcat/Kingfisher/pull/2009)\n\n",
    "createdAt" : "2023-01-08T15:55:57+09:00",
    "fetchedFromAPIAt" : "2023-01-09T09:43:21+09:00",
    "id" : "RE_kwDOAf70wM4FQky1",
    "owner" : "onevcat",
    "publishedAt" : "2023-01-08T15:57:24+09:00",
    "repository" : "Kingfisher",
    "title" : "7.5.0 - Aggressive New Year",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.5.0",
    "version" : "7.5.0"
  },
  {
    "body" : "#### Add\n* Add a `contentConfigure` modifier to `KFImage` and related view types under SwiftUI. This allows you returning a non-image view to finish the configuation and display it as the loading result of `KFImage`. [#2027](https://github.com/onevcat/Kingfisher/pull/2027)\n* Make the `cachePathBlock` public so you can also configure it when creating a custom `DiskStorage.Config`. [#2025](https://github.com/onevcat/Kingfisher/pull/2025) by @zarechnyy\n\n",
    "createdAt" : "2023-02-05T15:14:57+09:00",
    "fetchedFromAPIAt" : "2023-02-11T23:53:40+09:00",
    "id" : "RE_kwDOAf70wM4FckHc",
    "owner" : "onevcat",
    "publishedAt" : "2023-02-05T15:16:24+09:00",
    "repository" : "Kingfisher",
    "title" : "7.6.0 - Content Configuration",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.6.0",
    "version" : "7.6.0"
  },
  {
    "body" : "#### Fix\n* A compiling issue that new version of Swift (Swift 5.8) refuses to accept the false-positive optional binding. [#2029](https://github.com/onevcat/Kingfisher/pull/2029) @JetForMe\n\n",
    "createdAt" : "2023-02-13T20:22:13+09:00",
    "fetchedFromAPIAt" : "2023-02-14T09:45:40+09:00",
    "id" : "RE_kwDOAf70wM4Ffume",
    "owner" : "onevcat",
    "publishedAt" : "2023-02-13T20:23:38+09:00",
    "repository" : "Kingfisher",
    "title" : "7.6.1 - Strict for Compiling",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.6.1",
    "version" : "7.6.1"
  },
  {
    "body" : "#### Fix\n* An issue causes high CPU usage and infinite loop when setting `nil` URL to a `KFImage` when `startLoadingBeforeViewAppear` is also `true`. [#2035](https://github.com/onevcat/Kingfisher/issues/2035) Big thanks to @BobbyRohweder\n* The extension support for `CPListItem` won't set the image back to blank when the loading failing. Now it keeps showing the placeholder, if set. [#2031](https://github.com/onevcat/Kingfisher/pull/2031) @DevVenusK\n\n",
    "createdAt" : "2023-02-23T09:56:29+09:00",
    "fetchedFromAPIAt" : "2023-02-24T09:48:23+09:00",
    "id" : "RE_kwDOAf70wM4FkN-X",
    "owner" : "onevcat",
    "publishedAt" : "2023-02-23T09:57:57+09:00",
    "repository" : "Kingfisher",
    "title" : "7.6.2 - Fix Dead Loop",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.6.2",
    "version" : "7.6.2"
  },
  {
    "body" : "#### Add\n* Expose a new `imageDownloader(_:didReceive:completionHandler:)` delegate method in `ImageDownloaderDelegate` to allow making `ResponseDisposition` decision to the download task. [#2048](https://github.com/onevcat/Kingfisher/pull/2048) @onevcat\n\n#### Fix\n* Some type conversion warnings which might annoy under Swift 6 compiler. [#2060](https://github.com/onevcat/Kingfisher/pull/2060) [#2063](https://github.com/onevcat/Kingfisher/pull/2063) @zunda-pixel\n* Apply access limitation to the internal `Source.Identifier`. [#2074](https://github.com/onevcat/Kingfisher/pull/2074) @iwill-hwang\n\n",
    "createdAt" : "2023-05-20T12:15:16+09:00",
    "fetchedFromAPIAt" : "2023-05-21T09:44:15+09:00",
    "id" : "RE_kwDOAf70wM4GLgRW",
    "owner" : "onevcat",
    "publishedAt" : "2023-05-20T12:16:56+09:00",
    "repository" : "Kingfisher",
    "title" : "7.7.0 - The Last Chance",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.7.0",
    "version" : "7.7.0"
  },
  {
    "body" : "#### Add\n* Introduce a custom image source provider to enable third-party image processors to utilize `AnimatedImageView`. [#2094](https://github.com/onevcat/Kingfisher/pull/2094) @yeatse\n\n#### Fix\n* Deprecate the `ImageResource` and rename it to `KF.ImageResource`. This triggers a warning when explicitly refering to `ImageResource`, which conflicts to the identical names from Apple's `GeneratedAssetSymbols` or `DeveloperToolsSupport` in Xcode 15. It does not fix the issue automatically, but can help to achieve a smoother transition. [#2092](https://github.com/onevcat/Kingfisher/pull/2092) @JohnnyTseng @rtharston\n\n",
    "createdAt" : "2023-06-13T22:10:53+09:00",
    "fetchedFromAPIAt" : "2023-06-14T09:45:21+09:00",
    "id" : "RE_kwDOAf70wM4GdaPI",
    "owner" : "onevcat",
    "publishedAt" : "2023-06-13T22:12:50+09:00",
    "repository" : "Kingfisher",
    "title" : "7.8.0 - ImageSource Protocol",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.8.0",
    "version" : "7.8.0"
  },
  {
    "body" : "#### Fix\n* Now the animated image creation from disk cache will use the input processor correctly. [#2099](https://github.com/onevcat/Kingfisher/pull/2099) @yeatse\n\n",
    "createdAt" : "2023-06-19T22:54:56+09:00",
    "fetchedFromAPIAt" : "2023-06-20T09:45:03+09:00",
    "id" : "RE_kwDOAf70wM4GgMx4",
    "owner" : "onevcat",
    "publishedAt" : "2023-06-19T22:56:52+09:00",
    "repository" : "Kingfisher",
    "title" : "7.8.1 - Animated <3 Processor",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.8.1",
    "version" : "7.8.1"
  },
  {
    "body" : "#### Add\r\n* Add visionOS as support target. Now Kingfisher can run natively on visionOS, in both UIKit or SwiftUI mode. [#2103](https://github.com/onevcat/Kingfisher/pull/2103)\r\n* Add private manifest file (`PrivacyInfo.xcprivacy`) to the project to meet Apple's requirement of describing data collected and use of required reason API. [#2104](https://github.com/onevcat/Kingfisher/pull/2104)\r\n* Support digital signature in xcframework. Now the xcframework of Kingfisher is signed with the Apple Developer ID of the maintainer team. [#2106](https://github.com/onevcat/Kingfisher/pull/2106)\r\n* A public initializer of `ImageDownloadResult`. This allows overriding side to construct and return a valid download result. [#2107](https://github.com/onevcat/Kingfisher/pull/2107) @kmaschke85\r\n\r\n#### Fix\r\n* Some documentation fixes.\r\n\r\nIn this version, visionOS support is not yet available when integrating with CocoaPods. It requires the new version of CocoaPods 1.13.0 and not yet released. (https://github.com/CocoaPods/CocoaPods/pull/11965)",
    "createdAt" : "2023-07-29T10:31:27+09:00",
    "fetchedFromAPIAt" : "2024-07-14T22:49:45+09:00",
    "id" : "RE_kwDOAf70wM4GzJGH",
    "owner" : "onevcat",
    "publishedAt" : "2023-07-29T10:33:12+09:00",
    "repository" : "Kingfisher",
    "title" : "7.9.0 - visionOS & Xcode 15",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.9.0",
    "version" : "7.9.0"
  },
  {
    "body" : "#### Fix\r\n* Now the CarPlay support (`CPListItem`) compiles again for iOS SDK 14.0 to 14.4. It was because an undocumented API change in the `CPListItem` property. [#2172](https://github.com/onevcat/Kingfisher/pull/2172) @brendonjkding\r\n* Fix an infinite `View` refreshing loop when `KFImage` is set with `startLoadingBeforeViewAppear` to `true` and the loading keeping fails. [#2169](https://github.com/onevcat/Kingfisher/pull/2169) @onevcat @sisoje @mirkokg\r\n\r\n",
    "createdAt" : "2023-12-09T21:49:35+09:00",
    "fetchedFromAPIAt" : "2024-07-14T22:49:45+09:00",
    "id" : "RE_kwDOAf70wM4H8afE",
    "owner" : "onevcat",
    "publishedAt" : "2023-12-09T21:51:33+09:00",
    "repository" : "Kingfisher",
    "title" : "7.10.1 - Compilation & Infinity",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.10.1",
    "version" : "7.10.1"
  },
  {
    "body" : "#### Fix\r\n* Update to the terminology for the latest Xcode 15 beta. It prevents building failing and warnings from previous beta versions. [#2123](https://github.com/onevcat/Kingfisher/pull/2123) @simonbs\r\n* A misused reason in the privacy manifest file. Now Kingfisher should declare the reason of using file creation and access time correctly. (However, the manifest file mechanism of SDK seems not working yet in Xcode 15 beta 7) [#2135](https://github.com/onevcat/Kingfisher/pull/2135) @CloudosaurusRex @onevcat\r\n* Some warnings which happens when building xcframework. This prevents them from becoming errors in the coming Swift 6. [#2136](https://github.com/onevcat/Kingfisher/pull/2136)\r\n\r\n",
    "createdAt" : "2023-08-26T13:49:50+09:00",
    "fetchedFromAPIAt" : "2024-07-14T22:49:45+09:00",
    "id" : "RE_kwDOAf70wM4HFJ3B",
    "owner" : "onevcat",
    "publishedAt" : "2023-08-26T13:51:16+09:00",
    "repository" : "Kingfisher",
    "title" : "7.9.1 - Lastest Xcode 15 beta",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.9.1",
    "version" : "7.9.1"
  },
  {
    "body" : "#### Add\r\n* Actually add the privacy manifest files to the xcframework, Swift Package Manager and CocoaPods. [#2122](https://github.com/onevcat/Kingfisher/issues/2122) [#2156](https://github.com/onevcat/Kingfisher/pull/2156) @CloudosaurusRex @NikcN22\r\n* Enable the modulemap generation and `-Swift.h` header again for ObjC compatibility. [#2138](https://github.com/onevcat/Kingfisher/pull/2138) @yev-kanivets\r\n\r\n#### Fix\r\n* Use the trait collection to determine animated image scale, instead of the deprecated `UIScreen` API. [#2157](https://github.com/onevcat/Kingfisher/pull/2157) @hyun99999\r\n* An issue that a local AV asset creates multiple disk caches when connected to Xcode during Debug phase. [#2158](https://github.com/onevcat/Kingfisher/pull/2157) @onevcat @elijahdou\r\n* The disk cache now is still availiable when the whole cache folder is removed by external operations instead of the methods in Kingfisher. [#2162](https://github.com/onevcat/Kingfisher/pull/2162) @onevcat @uclort\r\n* Some documentation and CI impro/vements.\r\n\r\n",
    "createdAt" : "2023-10-29T23:05:56+09:00",
    "fetchedFromAPIAt" : "2024-07-14T22:49:45+09:00",
    "id" : "RE_kwDOAf70wM4Hkyn5",
    "owner" : "onevcat",
    "publishedAt" : "2023-10-29T23:07:15+09:00",
    "repository" : "Kingfisher",
    "title" : "7.10.0 - Privacy Manifest",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.10.0",
    "version" : "7.10.0"
  },
  {
    "body" : "#### Fix\n* An issue that loading the same GIF image in differnet image views may crash the app. [#2194](https://github.com/onevcat/Kingfisher/pull/2194)\n* A build script issue that exported the xcframeworks does not have the correct cert signing. [#2179](https://github.com/onevcat/Kingfisher/pull/2179)\n* In iOS 13 and earlier, the new Swift runtime fails to convert `Any?` to a protocol value. [#2182](https://github.com/onevcat/Kingfisher/pull/2182)\n\n",
    "createdAt" : "2024-01-11T23:03:42+09:00",
    "fetchedFromAPIAt" : "2024-07-14T22:49:45+09:00",
    "id" : "RE_kwDOAf70wM4IJWwO",
    "owner" : "onevcat",
    "publishedAt" : "2024-01-11T23:05:44+09:00",
    "repository" : "Kingfisher",
    "title" : "7.10.2 - GIF crash fix",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.10.2",
    "version" : "7.10.2"
  },
  {
    "body" : "#### Add\n* Add visionOS as a supported platform when being used in CocoaPods. For other dependency managers, it was already supported from previous versions. [#2205](https://github.com/onevcat/Kingfisher/pull/2205) @onevcat @grachyov\n* A name for background task started for image cache cleanup. [#2201](https://github.com/onevcat/Kingfisher/pull/2201) @antohisorin\n\n",
    "createdAt" : "2024-02-12T22:49:04+09:00",
    "fetchedFromAPIAt" : "2024-07-14T22:49:45+09:00",
    "id" : "RE_kwDOAf70wM4IcPQ1",
    "owner" : "onevcat",
    "publishedAt" : "2024-02-12T22:51:11+09:00",
    "repository" : "Kingfisher",
    "title" : "7.11.0 - visionOS for CocoaPods",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.11.0",
    "version" : "7.11.0"
  },
  {
    "body" : "Kingfisher 8 is a major upgrade and contains breaking changes to previous versions. Check [this](https://github.com/onevcat/Kingfisher/releases/tag/8.0.0-alpha.1) for more information.\r\n\r\n#### Fix\r\n\r\n- Fix a compiling error for Xcode 16 beta 3 caused by the new compiler. @onevcat #2270\r\n",
    "createdAt" : "2024-07-11T00:28:38+09:00",
    "fetchedFromAPIAt" : "2024-07-14T22:49:45+09:00",
    "id" : "RE_kwDOAf70wM4J0x1h",
    "owner" : "onevcat",
    "publishedAt" : "2024-07-11T00:36:29+09:00",
    "repository" : "Kingfisher",
    "title" : "8.0.0-alpha.3",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/8.0.0-alpha.3",
    "version" : "8.0.0-alpha.3"
  },
  {
    "body" : "#### Add\n* Mark the `removeSizeExceededValues` method in `DiskStorage` as `public`. Now it is possible to call this method to trigger a cleanup of the disk cache manually. [#2214](https://github.com/onevcat/Kingfisher/pull/2214) @nickruddeni\n* A new `PHPickerResultImageDataProvider` for loading and caching images from `PHPickerResult`. [#2233](https://github.com/onevcat/Kingfisher/pull/2233) @nuomi1\n* An option of `reducePriorityOnDisappear` for SwiftUI. It sets a lower priority for the image download task when the view disappears, and restore it when re-appears. [#2211](https://github.com/onevcat/Kingfisher/pull/2211) @Aelx-Vaiman\n\n#### Fix\n* Some improvements for documentation grammar and typos. [#2236](https://github.com/onevcat/Kingfisher/pull/2236) @FlyingCaiChong\n* Use `.process` for the `PrivacyInfo.xcprivacy` in SPM to follow the practice suggested by Apple. [#2243](https://github.com/onevcat/Kingfisher/pull/2243) @BorysKhl @onevcat\n* An issue that the file extension was not correctly retrieved for calculating hash file name when `autoExtAfterHashedFileName` is set to `true`. [#2250](https://github.com/onevcat/Kingfisher/pull/2250) @freezy7\n\n",
    "createdAt" : "2024-06-10T22:29:12+09:00",
    "fetchedFromAPIAt" : "2024-07-14T22:49:45+09:00",
    "id" : "RE_kwDOAf70wM4JhGQM",
    "owner" : "onevcat",
    "publishedAt" : "2024-06-10T22:31:04+09:00",
    "repository" : "Kingfisher",
    "title" : "7.12.0 - Lucky Seven",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/7.12.0",
    "version" : "7.12.0"
  },
  {
    "body" : "#### Major Update Notice\r\n\r\nWe are excited to announce Kingfisher 8, a major update that brings several important enhancements and features to our library:\r\n\r\n- Full Support for Swift Concurrency: Kingfisher 8 now fully supports Swift concurrency under strict mode, allowing for more efficient and simplified asynchronous programming.\r\n- Compatibility with Swift 6: This update includes support for Swift 6, aligning Kingfisher with the latest advancements in the Swift programming language.\r\n- Language Backward Compatibility: Despite the new updates, Kingfisher 8 continues to support Swift 5, ensuring that your existing projects remain compatible.\r\n\r\n> [!WARNING]\r\n> This version introduces breaking changes. If you are planning to upgrade, please review the migration guide to ensure a smooth transition. The migration guide is available here: [Migration to Kingfisher 8](https://swiftpackageindex.com/onevcat/kingfisher/master/documentation/kingfisher/migration-to-8).\r\n\r\nKingfisher v8 is currently in an early alpha release. While most of the development work has been completed, the library may undergo further changes to adapt to any updates in future versions of Xcode 16. \r\n\r\nWe warmly invite you to try out this version to take full advantage of the new Swift language features and improvements. Should you encounter any issues or have feedback, please do not hesitate to open an issue. Your feedback and support are crucial in helping evolve the library.\r\n\r\nHappy coding!\r\n\r\n#### Add\r\n\r\n* Full Swift 6 support. Now Kingfisher compiles with both Swift 5 and Swift 6 language mode. [#2259](https://github.com/onevcat/Kingfisher/pull/2259) @onevcat\r\n* Strict Swift Concurrency prepared. All necessary public APIs in Kingfisher are now `async` compatible. Kingfisher is also now built under strict concurrency mode. [#2239](https://github.com/onevcat/Kingfisher/pull/2239) @onevcat\r\n* Xcode 16 support. Explicitly built modules option is enabled and now Kingfisher can get better build performance under Xcode 16. [#2260](https://github.com/onevcat/Kingfisher/pull/2260) @onevcat\r\n* Refined documentation and beautified tutorials with DocC. Check it out [here](https://swiftpackageindex.com/onevcat/Kingfisher/master/documentation/kingfisher)! [#2160](https://github.com/onevcat/Kingfisher/pull/2160) @onevcat\r\n\r\n#### Fix\r\n\r\n* MD5 is deprecated by the system. Now the hash method for file URL is replaced with SHA256. [#2117](https://github.com/onevcat/Kingfisher/pull/2117) @kmaschke85\r\n* Now the view extension methods are created in a more generic way, which provides better compatibility and extensibility. [#2244](https://github.com/onevcat/Kingfisher/pull/2244) @Mx-Iris @onevcat\r\n\r\n#### Prebuilt Frameworks\r\n\r\nTo accommodate users of both Xcode 15 and Xcode 16, Kingfisher will offer two variants of the prebuilt framework on the release page:\r\n\r\n* `Kingfisher-${version}.zip`: Built with the Swift 5 compiler in Xcode 15, this framework is compatible with both Xcode 15 and 16. It does not include optimizations from Swift 6 and Xcode 16.\r\n* `Kingfisher-swift6-${version}.zip`: Built with the Swift 6 compiler in Xcode 16, this binary is exclusively for use with Xcode 16. As we eventually phase out support for Xcode 15, the Swift 5 variant will be discontinued in future releases.\r\n\r\n> This information pertains only to users who prefer to install Kingfisher with the xcframework bundle. If you are building Kingfisher from source, such as through Swift Package Manager or CocoaPods, you have the flexibility to choose the Xcode version and the language version you prefer. Kingfisher v8 is compatible with both Swift 5 (Xcode 15 and Xcode 16 with Swift 5 language version) and Swift 6 (Xcode 16).\r\n\r\n",
    "createdAt" : "2024-06-13T22:54:52+09:00",
    "fetchedFromAPIAt" : "2024-07-14T22:49:45+09:00",
    "id" : "RE_kwDOAf70wM4JjhsY",
    "owner" : "onevcat",
    "publishedAt" : "2024-06-13T23:42:28+09:00",
    "repository" : "Kingfisher",
    "title" : "8.0.0-alpha.1",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/8.0.0-alpha.1",
    "version" : "8.0.0-alpha.1"
  },
  {
    "body" : "Kingfisher 8 is a major upgrade and contains breaking changes to previous versions. Check [this](https://github.com/onevcat/Kingfisher/releases/tag/8.0.0-alpha.1) for more information.\r\n\r\n#### Fix\r\n\r\n- Change language version to Swift 5.0 for main target. This ensures compatibility with Xcode 15 while retaining strict concurrency checks.\r\n- Update the pre-built binaries with Xcode 16 beta 2.",
    "createdAt" : "2024-06-26T21:19:46+09:00",
    "fetchedFromAPIAt" : "2024-07-14T22:49:45+09:00",
    "id" : "RE_kwDOAf70wM4Jr8CM",
    "owner" : "onevcat",
    "publishedAt" : "2024-06-26T21:37:43+09:00",
    "repository" : "Kingfisher",
    "title" : "8.0.0-alpha.2",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/8.0.0-alpha.2",
    "version" : "8.0.0-alpha.2"
  },
  {
    "body" : "Kingfisher 8 is a major upgrade and contains breaking changes to previous versions. Check [this](https://github.com/onevcat/Kingfisher/releases/tag/8.0.0-alpha.1) for more information.\r\n\r\n#### Fix\r\n\r\n* Remove `@unchecked` Sendable by @NachoSoto in https://github.com/onevcat/Kingfisher/pull/2272\r\n* Change `swift(>=6)` to use `compiler` by @NachoSoto in https://github.com/onevcat/Kingfisher/pull/2273\r\n* Rewrite the blur rendering method without deprecated `UIGraphicsBeginImageContextWithOptions` by @onevcat in https://github.com/onevcat/Kingfisher/pull/2274\r\n* Update links for repositories moved to the swiftlang org on GitHub by @lamtrinhdev in https://github.com/onevcat/Kingfisher/pull/2275\r\n* Apply existential any to protocol for Swift 6 by @qwerty3345 in https://github.com/onevcat/Kingfisher/pull/2283",
    "createdAt" : "2024-09-08T11:06:58+09:00",
    "fetchedFromAPIAt" : "2024-09-09T10:06:29+09:00",
    "id" : "RE_kwDOAf70wM4KXui_",
    "owner" : "onevcat",
    "publishedAt" : "2024-09-08T11:17:42+09:00",
    "repository" : "Kingfisher",
    "title" : "8.0.0-beta.1",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/8.0.0-beta.1",
    "version" : "8.0.0-beta.1"
  },
  {
    "body" : "#### Major Update Notice\r\n\r\nWe are excited to announce Kingfisher 8, a major update that brings several important enhancements and features to our library:\r\n\r\n- Full Support for Swift Concurrency: Kingfisher 8 now fully supports Swift concurrency under strict mode, allowing for more efficient and simplified asynchronous programming.\r\n- Compatibility with Swift 6: This update includes support for Swift 6, aligning Kingfisher with the latest advancements in the Swift programming language.\r\n- Language Backward Compatibility: Despite the new updates, Kingfisher 8 continues to support Swift 5, ensuring that your existing projects remain compatible.\r\n\r\n> [!WARNING]\r\n> This version introduces breaking changes. If you are planning to upgrade, please review the migration guide to ensure a smooth transition. The migration guide is available here: [Migration to Kingfisher 8](https://swiftpackageindex.com/onevcat/kingfisher/master/documentation/kingfisher/migration-to-8).\r\n\r\nKingfisher v8 is currently in an early alpha release. While most of the development work has been completed, the library may undergo further changes to adapt to any updates in future versions of Xcode 16. \r\n\r\nWe warmly invite you to try out this version to take full advantage of the new Swift language features and improvements. Should you encounter any issues or have feedback, please do not hesitate to open an issue. Your feedback and support are crucial in helping evolve the library.\r\n\r\nHappy coding!\r\n\r\n\r\n#### Add\r\n* Full Swift 6 support. Now Kingfisher compiles with both Swift 5 and Swift 6 language mode. [#2259](https://github.com/onevcat/Kingfisher/pull/2259) @onevcat\r\n* Swift Concurrency prepared. All necessary public APIs in Kingfisher are now `async` compatible. Kingfisher is also now built under strict concurrency mode. [#2239](https://github.com/onevcat/Kingfisher/pull/2239) @onevcat\r\n* Xcode 16 support. Explicitly built modules option is enabled and now Kingfisher can get better build performance under Xcode 16. [#2260](https://github.com/onevcat/Kingfisher/pull/2260) @onevcat\r\n* Refined documentation and beautified tutorials with DocC. [#2160](https://github.com/onevcat/Kingfisher/pull/2160) @onevcat\r\n\r\n#### Fix\r\n* MD5 is deprecated by the system. Now the hash method for file URL is replaced with SHA256. [#2117](https://github.com/onevcat/Kingfisher/pull/2117) @kmaschke85\r\n* Now the view extension methods are created in a more generic way, which provides better compatibility and extensibility. [#2244](https://github.com/onevcat/Kingfisher/pull/2244) @Mx-Iris @onevcat\r\n* Rewrite the blur rendering method without deprecated `UIGraphicsBeginImageContextWithOptions`. [#2274](https://github.com/onevcat/Kingfisher/pull/2274) @onevcat\r\n* Apply existential any to protocol for Swift 6. [#2283](https://github.com/onevcat/Kingfisher/pull/2283) @qwerty3345\r\n",
    "createdAt" : "2024-09-17T23:52:36+09:00",
    "fetchedFromAPIAt" : "2024-09-18T10:04:47+09:00",
    "id" : "RE_kwDOAf70wM4KdZ9D",
    "owner" : "onevcat",
    "publishedAt" : "2024-09-17T23:54:48+09:00",
    "repository" : "Kingfisher",
    "title" : "8.0.0 - Version 8",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/8.0.0",
    "version" : "8.0.0"
  },
  {
    "body" : "#### Fix\n* A build issue in Xcode 15.2. Now the project builds and runs again in that old Xcode version. [#2289](https://github.com/onevcat/Kingfisher/pull/2289)\n\n",
    "createdAt" : "2024-09-18T23:05:19+09:00",
    "fetchedFromAPIAt" : "2024-09-19T10:05:39+09:00",
    "id" : "RE_kwDOAf70wM4KeKHh",
    "owner" : "onevcat",
    "publishedAt" : "2024-09-18T23:07:30+09:00",
    "repository" : "Kingfisher",
    "title" : "8.0.1 - Old Friends Matter",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/8.0.1",
    "version" : "8.0.1"
  },
  {
    "body" : "#### Fix\n* An issue the the blurred image has a wrong size if the image contains a scale value other than one. [#2293](https://github.com/onevcat/Kingfisher/pull/2293) @Semty\n\n",
    "createdAt" : "2024-09-21T01:27:10+09:00",
    "fetchedFromAPIAt" : "2024-09-21T10:04:30+09:00",
    "id" : "RE_kwDOAf70wM4Kf9ub",
    "owner" : "onevcat",
    "publishedAt" : "2024-09-21T01:29:23+09:00",
    "repository" : "Kingfisher",
    "title" : "8.0.2 - Blur Scale",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/8.0.2",
    "version" : "8.0.2"
  },
  {
    "body" : "#### Fix\n* A regression of iOS 18 that the `KFAnimatedImage` does not receive user interaction. [#2295](https://github.com/onevcat/Kingfisher/issues/2295) @onevcat @danieldaquino\n\n",
    "createdAt" : "2024-09-21T23:54:26+09:00",
    "fetchedFromAPIAt" : "2024-09-22T10:12:11+09:00",
    "id" : "RE_kwDOAf70wM4KgSlA",
    "owner" : "onevcat",
    "publishedAt" : "2024-09-21T23:56:44+09:00",
    "repository" : "Kingfisher",
    "title" : "8.0.3 - Animated Image Hitting",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/8.0.3",
    "version" : "8.0.3"
  },
  {
    "body" : "#### Add\n* Live Photo support. Now you can use the `kf` extension on `PHLivePhotoView` to load a live photo from network. Check [its documentation](https://swiftpackageindex.com/onevcat/kingfisher/master/documentation/kingfisher/kingfisherwrapper/setimage(with:options:completionhandler:)-1to8a) for more information. [#2302](https://github.com/onevcat/Kingfisher/pull/2302) @onevcat\n* A set of new APIs (new resource types, optional parameters for existing methods and error types, etc) for Live Photo support. [#2302](https://github.com/onevcat/Kingfisher/pull/2302) @onevcat\n\n#### Fix\n* Necessary `@MainActor` annotations for `ImageTransition.custom` member. [#2300](https://github.com/onevcat/Kingfisher/pull/2300) @mlight3\n\n",
    "createdAt" : "2024-10-13T23:54:31+09:00",
    "fetchedFromAPIAt" : "2024-10-14T10:09:44+09:00",
    "id" : "RE_kwDOAf70wM4Ktd88",
    "owner" : "onevcat",
    "publishedAt" : "2024-10-13T23:56:42+09:00",
    "repository" : "Kingfisher",
    "title" : "8.1.0 - Live Photo",
    "url" : "https://github.com/onevcat/Kingfisher/releases/tag/8.1.0",
    "version" : "8.1.0"
  }
]