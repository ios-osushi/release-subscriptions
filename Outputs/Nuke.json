[
  {
    "body" : "- Enable progressive decoding by default â€“ it can now be done without sacrificing performance in any meaningful way. To disable it, set `isProgressiveDecodingEnabled` to `false`.\r\n- Enable storing progressively decoding previews in the memory cache by default (`isStoringPreviewsInMemoryCache`)\r\n- Add `isAsynchronous` property to `ImageDecoding` that allows slow decoders (such as custom WebP decoder) to be executed on a dedicated operation queue (the existing `imageDecodingQueue`), while allowing fast decoders to be executed synchronously\r\n- Add `entryCostLimit` property to `ImageCache` that specifies the maximum cost of a cache entry in proportion to the `costLimit`. `0.1`, by default.",
    "createdAt" : "2021-06-04T10:05:18+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQ0MDc4OTkz",
    "owner" : "kean",
    "publishedAt" : "2021-06-04T10:05:31+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.1",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.1.0",
    "version" : "10.1.0"
  },
  {
    "body" : "> See also [Nuke 10.0 Release Notes](https://github.com/kean/Nuke/releases/tag/10.0.0)\r\n\r\n- `ImageDecoders.Default` now generates previews for GIF\r\n- Add `onSuccess`, `onFailure`, and other callbacks to `FetchImage` \r\n- Add progressive previews in memory cache support to `FetchImage`\r\n- Add a convenience property with an `ImageContainer` to `FechImage`\r\n- Update `FetchImage` `loadImage()` method that takes publisher to no longer require error to match `ImagePipeline.Error`   \r\n- Add an option to set default processors via `FetchImage`",
    "createdAt" : "2021-06-07T02:06:57+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQ0MTY5MzE2",
    "owner" : "kean",
    "publishedAt" : "2021-06-07T02:07:40+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.2",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.2.0",
    "version" : "10.2.0"
  },
  {
    "body" : "> See also [Nuke 10.0 Release Notes](https://github.com/kean/Nuke/releases/tag/10.0.0)\r\n\r\n- Add `animation` propery to `FetchImage` that significantly simplifies how to animate image appearence\r\n- Add `imageType` parameter to `ImageDecoders.Empty`\r\n- Add an option to override image scale (`ImageRequest.UserInfoKey.scaleKey`)",
    "createdAt" : "2021-06-11T06:38:48+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQ0NDQ0NjI3",
    "owner" : "kean",
    "publishedAt" : "2021-06-11T06:39:12+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.3",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.3.0",
    "version" : "10.3.0"
  },
  {
    "body" : "- Fix `ImagePublisher` crash with some Combine operators combinations - [#494](https://github.com/kean/Nuke/pull/494), thanks to [Tyler Nickerson](https://github.com/Nickersoft)",
    "createdAt" : "2021-07-09T07:04:30+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQ1OTM1Nzg3",
    "owner" : "kean",
    "publishedAt" : "2021-07-09T07:04:51+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.3.1",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.3.1",
    "version" : "10.3.1"
  },
  {
    "body" : "- Fix an issue with disk cache images being overwritten in some scenarios (with disk cache policies that enable encoding and storage of the processed images) - [#500](https://github.com/kean/Nuke/pull/500) ",
    "createdAt" : "2021-08-19T04:21:18+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQ4MDY3ODYw",
    "owner" : "kean",
    "publishedAt" : "2021-08-19T04:21:33+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.3.3",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.3.3",
    "version" : "10.3.3"
  },
  {
    "body" : "- Fix an issue where if you pass incorect strings (`String`) in the request, the pipeline eventually start failing silently - [#502](https://github.com/kean/Nuke/pull/502) ",
    "createdAt" : "2021-08-26T23:09:10+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQ4NTA0Nzg5",
    "owner" : "kean",
    "publishedAt" : "2021-08-26T23:09:28+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.3.4",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.3.4",
    "version" : "10.3.4"
  },
  {
    "body" : "- Add podspec",
    "createdAt" : "2021-07-30T22:58:19+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQ4NTA1MzA4",
    "owner" : "kean",
    "publishedAt" : "2021-08-26T23:15:46+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.3.2",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.3.2",
    "version" : "10.3.2"
  },
  {
    "body" : "- Add an API for efficiently generating thumbnails or extracting the existing ones from the image data. It can reduce peak memory usage by up to x4 times depending on the original image size - [#503](https://github.com/kean/Nuke/pull/503)\r\n- Fix an issue with scale (`ImageRequest.UserInfoKey.scaleKey`) not being applied to progressively decoded images",
    "createdAt" : "2021-08-29T06:07:55+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQ4NjIwMjIw",
    "owner" : "kean",
    "publishedAt" : "2021-08-29T06:08:15+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.4",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.4.0",
    "version" : "10.4.0"
  },
  {
    "body" : "- Fix build on watchOS (needs investigation why xcodebuild returns 0 for failed watchOS builds) - [#505](https://github.com/kean/Nuke/pull/505), thanks fo [David Harris](https://github.com/thedavidharris)",
    "createdAt" : "2021-08-31T05:35:55+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQ4NzAwNjc5",
    "owner" : "kean",
    "publishedAt" : "2021-08-31T05:47:45+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.4.1",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.4.1",
    "version" : "10.4.1"
  },
  {
    "body" : "- Fix `DataCache` trim ratio, previously was applying size limit too aggressively.\r\n- Deprecate `DataCache.countLimit`. The default limit is now `Int.max`.\r\n- Move demo project to a [separate repo](https://github.com/kean/NukeDemo). Fixes [#442](https://github.com/kean/Nuke/issues/442). Should also improve checkout speed for other package managers.\r\n",
    "createdAt" : "2021-03-22T02:39:48+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQwMTI1MTM4",
    "owner" : "kean",
    "publishedAt" : "2021-03-22T02:49:38+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 9.3.1",
    "url" : "https://github.com/kean/Nuke/releases/tag/9.3.1",
    "version" : "9.3.1"
  },
  {
    "body" : "- Reduce the number of context switches in `ImagePrefetcher` and `DataLoader`\r\n- Atomics are back, improves direct `ImagePipeline` usage performance\r\n- Fast-track default decoding operations\r\n- Reduce the number of allocations per task\r\n- Deprecate typealiases for progress and completion closures to improve auto-completion\r\n- You can now toggle `ImagePipeline.Configuration.isSignpostLoggingEnabled` while the app is running and without re-creating the pipeline, [#443](https://github.com/kean/Nuke/issues/443)\r\n- Add `isPaused` property to `ImagePrefetcher`\r\n- Add convenience `subscript` that takes `URL` to `ImageCaching` protocol as extension",
    "createdAt" : "2021-03-27T11:53:52+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQwNTcxODMw",
    "owner" : "kean",
    "publishedAt" : "2021-03-27T12:16:47+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 9.4.0",
    "url" : "https://github.com/kean/Nuke/releases/tag/9.4.0",
    "version" : "9.4.0"
  },
  {
    "body" : "- Shorter names for parameters in `loadImage()` and `loadData()` methods to improve ImagePipeline APIs ergonomics\r\n- Rename `ImagePreheater` to `ImagePrefetcher` (via deprecation) \r\n- Rewrite `ImagePrefetcher` documentation",
    "createdAt" : "2021-03-28T00:05:15+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQwNTgwMzAw",
    "owner" : "kean",
    "publishedAt" : "2021-03-28T00:06:11+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 9.4.1",
    "url" : "https://github.com/kean/Nuke/releases/tag/9.4.1",
    "version" : "9.4.1"
  },
  {
    "body" : "- Add `priority` property to `ImagePrefetcher` which changes the priority of both new and outstanding tasks. By default, `.low`. Use-case: reducing the priority to `.veryLow` when moving to a new screen.\r\n- Further `ImagePrefetcher` performance improvements: one less allocation per request, `ImageRequest` instances are now created in background, reduce closure capture lists, optimize cancellation\r\n- `ImagePrefetcher` now automatically sets the proper request priority even when you start prefetching with`ImageRequest`",
    "createdAt" : "2021-04-04T23:06:58+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQwOTE2MzQy",
    "owner" : "kean",
    "publishedAt" : "2021-04-04T23:07:40+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 9.5.0",
    "url" : "https://github.com/kean/Nuke/releases/tag/9.5.0",
    "version" : "9.5.0"
  },
  {
    "body" : "- Update to Xcode 12.5. Fixes [#454](https://github.com/kean/Nuke/issues/454).\r\n\r\n**CocoaPods support deprecated, the last CocoaPods release was 9.5.0.**",
    "createdAt" : "2021-04-29T10:38:22+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQyMTczODkz",
    "owner" : "kean",
    "publishedAt" : "2021-04-29T10:39:40+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 9.5.1",
    "url" : "https://github.com/kean/Nuke/releases/tag/9.5.1",
    "version" : "9.5.1"
  },
  {
    "body" : "- Add `ImageRequest.CachePolicy.returnCacheDataDontLoad`, [#456](https://github.com/kean/Nuke/pull/456)\r\n- Add `ImagePublisher` (Combine extensions)\r\n- Add a convenience `dataLoadingError` property to `ImagePipeline.Error`\r\n- Remove APIs deprecated in versions 9.0-9.1\r\n- Add a note on [`waitsForConnectivity`](https://developer.apple.com/documentation/foundation/urlsessionconfiguration/2908812-waitsforconnectivity) in [Nuke Docs](https://kean.blog/nuke/guides/performance#auto-retry)\r\n- Add [\"Low Data Mode\"](https://kean.blog/nuke/guides/combine#low-data-mode) in Nuke Docs",
    "createdAt" : "2021-05-03T02:41:42+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQyMzMxMzIy",
    "owner" : "kean",
    "publishedAt" : "2021-05-03T02:42:11+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 9.6.0",
    "url" : "https://github.com/kean/Nuke/releases/tag/9.6.0",
    "version" : "9.6.0"
  },
  {
    "body" : "See https://github.com/kean/Nuke/pull/461 for release notes",
    "createdAt" : "2021-05-17T02:32:39+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQzMDE3NzI1",
    "owner" : "kean",
    "publishedAt" : "2021-05-17T02:33:06+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.0 (Beta 1)",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.0.0-beta.1",
    "version" : "10.0.0-beta.1"
  },
  {
    "body" : "- `FetchImage` to work with a generic `Publisher` instead of `AnyPublisher`\r\n- Fix an issue where `ImagePublisher` was performing sync disk cache lookup",
    "createdAt" : "2021-05-18T06:14:05+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQzMDg3NjI1",
    "owner" : "kean",
    "publishedAt" : "2021-05-18T06:15:07+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.0 (Beta 2)",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.0.0-beta.2",
    "version" : "10.0.0-beta.2"
  },
  {
    "body" : "See https://github.com/kean/Nuke/pull/461 for release notes.\r\n\r\nThis is the final Beta. The RC will be available this weekend and the final testing cycle will take 10 days.",
    "createdAt" : "2021-05-21T07:21:42+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQzMzE5OTI5",
    "owner" : "kean",
    "publishedAt" : "2021-05-21T07:31:15+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.0 (Beta 3)",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.0.0-beta.3",
    "version" : "10.0.0-beta.3"
  },
  {
    "body" : "See https://github.com/kean/Nuke/pull/461 for release notes.\r\n\r\nThe final testing cycle will take ~10 days.",
    "createdAt" : "2021-05-23T04:26:02+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQzNDE1NDE3",
    "owner" : "kean",
    "publishedAt" : "2021-05-23T04:26:34+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.0 (RC1)",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.0.0-rc.1",
    "version" : "10.0.0-rc.1"
  },
  {
    "body" : "- Remove some risky `DataLoader` optimizations",
    "createdAt" : "2021-05-25T05:18:21+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQzNDg1MjQw",
    "owner" : "kean",
    "publishedAt" : "2021-05-25T05:24:02+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 9.6.1",
    "url" : "https://github.com/kean/Nuke/releases/tag/9.6.1",
    "version" : "9.6.1"
  },
  {
    "body" : "The final testing cycle will take ~7 days.\r\nReleases notes https://github.com/kean/Nuke/pull/461 (WIP)",
    "createdAt" : "2021-05-25T10:58:52+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQzNDk2NTc2",
    "owner" : "kean",
    "publishedAt" : "2021-05-25T10:59:07+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.0 (RC2)",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.0.0-rc.2",
    "version" : "10.0.0-rc.2"
  },
  {
    "body" : "Nuke 10 is extreme in every way. It is faster than the previous version (up to 30% improvement to some operations), more powerful, more ergonomic, and is even easier to learn and use. It brings big additions to the caching infrastructure, great SwiftUI and Combine support, and more ways to adjust the system to fit your needs.\r\n\r\nThis release is also a massive step-up in the general quality of the framework. It has many improvements to the docs (for example, a complete rewrite of the [caching guide](https://kean.blog/nuke/guides/caching)), more inline comments, more unit tests (Nuke now has ~100% test coverage with 2x number of lines of code in the test target compared to the main target). It's as reliable as it gets.\r\n\r\n> **Migration.** The compiler will assist you with the migration, but if something isn't clear, there is a comprehensive [migration guide](https://github.com/kean/Nuke/blob/master/Documentation/Migrations/Nuke%2010%20Migration%20Guide.md) available.\r\n>\r\n> **Switching.** Switching from Kingfisher? There is now a [dedicated guide](https://github.com/kean/Nuke/blob/master/Documentation/Switch/switch-from-kingfisher.md) available to assist you. There is also one for [migrating from SDWebImage](https://github.com/kean/Nuke/blob/master/Documentation/Switch/switch-from-sdwebimage.md).\r\n\r\n## Caching\r\n\r\n- Add [`DataCachePolicy`](https://kean-org.github.io/docs/nuke/reference/10.0.0/ImagePipeline_Configuration_DataCachePolicy/) to replace deprecated `DataCacheOptions.storedItems`. The new policy fixes some of the inefficiencies of the previous model and provides more control. For example, one of the additions is an [`.automatic`](https://kean-org.github.io/docs/nuke/reference/10.0.0/ImagePipeline_Configuration_DataCachePolicy/#imagepipeline.configuration.datacachepolicy.automatic) policy: for requests with processors, encode and store processed images; for requests with no processors, store original image data. You can learn more about the policies and other caching changes in [\"Caching: Cache Policy.\"](https://kean.blog/nuke/guides/caching#cache-policy)\r\n-  Add [`ImagePipeline.Cache`](https://kean-org.github.io/docs/nuke/reference/10.0.0/ImagePipeline_Cache/) with a whole range of convenience APIs for managing cached images: read, write, remove images from all cache layers.\r\n- Add [`ImagePipeline.Configuration.withDataCache`](https://kean-org.github.io/docs/nuke/reference/10.0.0/ImagePipeline_Configuration/#imagepipeline.configuration.withdatacache) (aggressive disk cache enabled) and [`withURLCache`](https://kean-org.github.io/docs/nuke/reference/10.0.0/ImagePipeline_Configuration/#imagepipeline.configuration.withurlcache) (HTTP disk cache enabled) to make it easier to set up a pipeline with a configuration you want. Learn more in [\"Caching: Configuration.\"](https://kean.blog/nuke/guides/caching#configuration)\r\n- Add `removeAll()` method to `ImageCaching` and `DataCaching` protocols\r\n- Add `containsData(for:)` method to `DataCaching` and `DataCache` which checks if the data exists without bringing it to memory\r\n- Add [`ImageResponse.CacheType`](https://kean-org.github.io/docs/nuke/reference/10.0.0/ImageResponse_CacheType/) to address [#361](https://github.com/kean/Nuke/issues/361) and [#435](https://github.com/kean/Nuke/issues/435). It defines the source of the retrieved image.\r\n- The pipeline no longer stores images fetched using file:// and data:// schemes in the disk cache\r\n- `ImageCaching` protocols now works with a new [`ImageCacheKey`](https://kean-org.github.io/docs/nuke/reference/10.0.0/ImageCacheKey/) type (an opaque container) instead of `ImageRequest`. If you are providing a custom implementation of the `ImageCaching` protocol, it needs to be updated. It is now easier because there is no need to come up with a key.\r\n\r\n## NukeUI (Beta)\r\n\r\n[NukeUI](https://github.com/kean/NukeUI) is a new Swift package. It is a comprehensive solution for displaying lazily loaded images on Apple platforms. The library contains two types:\r\n\r\n- `LazyImage` for SwiftUI\r\n- `LazyImageView` for UIKit and AppKit\r\n\r\nBoth views have an equivalent sets of APIs.\r\n\r\nThe library uses [Nuke](https://github.com/kean/Nuke) for loading images and has many customization options. It also supports GIF rendering thanks to [Gifu](https://github.com/kaishin/Gifu). GIF is [not the most](https://web.dev/replace-gifs-with-videos/) efficient format, so NukeUI also supports playing short videos out of the box.\r\n\r\n```swift\r\nstruct ContainerView: View {\r\n    var body: some View {\r\n        LazyImage(source: \"https://example.com/image.jpeg\")\r\n            .placeholder { Image(\"placeholder\") }\r\n            .transition(.fadeIn(duration: 0.33))\r\n    }\r\n}\r\n```\r\n\r\n## SwiftUI\r\n\r\nNuke now has first-class SwiftUI support with [FetchImage](https://kean.blog/nuke/guides/swiftui) which is now part of the main repo, no need to install it separately. It also has a couple of new additions:\r\n\r\n- Add `result` property (previously you could only access the loaded image)\r\n- Add `AnyPublisher` support via a new `func load<P: Publisher>(_ publisher: P) where P.Output == ImageResponse, P.Failure == ImagePipeline.Error` method. You can use it with a custom publisher created by combining publishers introduced in [Nuke 9.6](https://github.com/kean/Nuke/releases/tag/9.6.0).\r\n- Add `ImageRequestConvertible` support\r\n\r\n## Combine\r\n\r\nNuke 10 goes all-in on Combine. [`ImagePublisher`](https://kean-org.github.io/docs/nuke/reference/10.0.0/ImagePublisher/) was initially introduced in the previous release, [Nuke 9.6](https://github.com/kean/Nuke/releases/tag/9.6.0), and now Combine is supported across the framework.\r\n\r\n- `ImageRequest` now supports Combine Publisher via a new initializer `ImageRequest(id:data:)` where `data` is a `Publisher`. It can be used in a variety of scenarios, for example, loading data using `PhotosKit.\r\n- As mentioned earlier, [`FetchImage`](https://kean-org.github.io/docs/nuke/reference/10.0.0/FetchImage/) now also supports publishers. So when you create a publisher chain, there is now an easy way to display it.\r\n\r\n## ImageRequest.Options\r\n\r\nNuke 10 has a reworked [`ImageRequest.Options`](https://kean-org.github.io/docs/nuke/reference/10.0.0/ImageRequest_Options/) option set replacing removed `ImageRequestOptions`. The name is similar, but the options are slightly different. The new approach has more options while being optimized for performance. `ImageRequest` size in memory reduced from 176 bytes to just 48 bytes (3.7x smaller).\r\n\r\n- Deprecate [`ImageRequest.CachePolicy`](https://kean-org.github.io/docs/nuke/reference/10.0.0/ImageRequest_CachePolicy/) which is now part of the new [`ImageRequest.Options`](https://kean-org.github.io/docs/nuke/reference/10.0.0/ImageRequest_Options/) option set\r\n- Remove `filteredURL`, you can now pass it using `userInfo` and [`.imageIdKey`](https://kean-org.github.io/docs/nuke/reference/10.0.0/ImageRequest_UserInfoKey/#imagerequest.userinfokey.imageidkey) key instead. It's a rarely used option, and this is why it is now less visible.\r\n- Remove `cacheKey` and `loadKey` (hopefully, nobody is using it because these weren't really designed properly). You can now use the new methods of [`ImagePipeline.Delegate`](https://kean-org.github.io/docs/nuke/reference/10.0.0/ImagePipelineDelegate/) that allows customizing the keys.\r\n- Add more options for granular control over caching and loading. For example, [`ImageRequest.Options`](https://kean-org.github.io/docs/nuke/reference/10.0.0/ImageRequest_Options/) has a new [`.disableDiskCache`](https://kean-org.github.io/docs/nuke/reference/10.0.0/ImageRequest_Options/#imagerequest.options.disablediskcache) option.\r\n- Move `userInfo` directly to `ImageRequest`. It's now easier to pass and it allows the framework to perform some additional optimizations.\r\n- `userInfo` now uses [`ImageRequest.UserInfoKey`](https://kean-org.github.io/docs/nuke/reference/10.0.0/ImageRequest_UserInfoKey/) wrapper for keys replacing `AnyHashable`. The new approach is faster and adds type-safety.\r\n\r\n## ImagePipeline.Delegate\r\n\r\n- Add [`ImagePipeline.Delegate`](https://kean-org.github.io/docs/nuke/reference/10.0.0/ImagePipelineDelegate/) with a variety of advanced per-request customization options that were previously not possible. For example, with [`dataCache(for:pipeline:)`](https://kean-org.github.io/docs/nuke/reference/10.0.0/ImagePipelineDelegate/) method you can specify a disk cache for each request. With [`willâ€‹Cache(data:â€‹image:â€‹for:â€‹pipeline:â€‹completion:â€‹)`](https://kean-org.github.io/docs/nuke/reference/10.0.0/ImagePipelineDelegate/#imagepipelinedelegate.willcache(data:image:for:pipeline:completion:)) you can disable caching per-request or modify the cached data. And there are more.\r\n- Deprecated `ImagePipelineObserving` protocol is now fully covered by `ImagePipeline.Delegate`\r\n\r\n## Performance\r\n\r\n- `ImageRequest` size in memory reduced from 176 bytes to just 48 bytes (3.7x smaller), which is due to the OptionSet usage and also reordering of properties to take advantage of gaps in memory stride. The size of other types was also reduced, but not as dramatically. For example, `ImageTask` and `ImagePipeline.Configuration` now also take a bit less memory\r\n- Coalescing now supports even more scenarios. For example, setting `ImageRequest` `options` with a cache policy no longer prevents coalescing of data tasks.\r\n- The pipeline now performs memory cache lookup of intermediate (not all processors are applied) progressive image previews and apply the remaining processors on demand\r\n- Extend fast track decoding to the disk cache lookup\r\n- For cache policies that require image encoding, encode decompressed images instead of uncompressed ones\r\n\r\n## Nuke Builder\r\n\r\n[NukeBuilder](https://github.com/kean/NukeBuilder/) is a package that adds a convenience API for creating image requests inspired by SwiftUI. It was updated with support Nuke 10 and some quality-of-life improvements.\r\n\r\n- Rename package to NukeBuilder\r\n- Update to Nuke 10.0\r\n- Add [`ImageRequestConvertible`](https://kean-org.github.io/docs/nuke/reference/10.0.0/ImageRequestConvertible/) support which means it now supports more types: `URLRequest` and `String`\r\n- Add Combine support\r\n- Add `ImagePipeline` typealias for convenience â€“ you only need to import `NukeBuilder` in many cases\r\n\r\n## Other\r\n\r\n- Increase minimum required Xcode version to 12; no changes to the supported platforms\r\n- `Nuke.loadImage()` methods now work with optional image requests. If the request is `nil`, it handles the scenario the same way as failure.\r\n- `ImageRequest` now also works with optional `URL`\r\n- `String` now also conforms to `ImageRequestConvertible`, closes [#421](https://github.com/kean/Nuke/issues/421)\r\n- Optional `URL` now also conforms to `ImageRequestConvertible`\r\n- Streamline pipeline callback closures\r\n- Pass failing processor to `ImagePipeline.Error.processingFailed`\r\n- Add type-safe `ImageContainer.UserInfoKey` and `ImageRequest.UserInfoKey`\r\n- Pass additional parameter `Data?` to `nuke_display` (ImageView extensions)\r\n- `ImagePrefetcher` now always sets the priority of the requests to its priority\r\n- `ImagePrefetcher` now works with `ImageRequestConvertible`, adding support for `URLRequest` and `String`\r\n- `ImagePipeline` can now be invalidated with `invalidate()` method\r\n\r\n## Deprecations\r\n\r\nThere are deprecation warnings in place to help guide you through the migration process.\r\n\r\n- Deprecate `ImageRequestOptions`, use `ImageRequest.Options` instead (it's not just the name change)\r\n- Deprecate `ImagePipelineObserving`, use `imageTask(_:,didReceiveEvent)` from `ImagePipeline.Delegate` instead\r\n- Rename `isDeduplicationEnabled` to `isTaskCoalescingEnabled`\r\n- Deprecate `animatedImageData` associated object for platform images. Use `data` property of `ImageContainer` instead. `animatedImageData` was initially soft-deprecated in Nuke 9.0.\r\n- Deprecate the default `processors` in `ImagePipeline`; use the new `processors` options in `ImageLoadingOptions` instead\r\n- Deprecate `ImageEncoder` and `ImageDecoder` typealiases.\r\n",
    "createdAt" : "2021-06-01T00:42:56+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQzODYzNDIy",
    "owner" : "kean",
    "publishedAt" : "2021-06-01T00:48:21+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.0",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.0.0",
    "version" : "10.0.0"
  },
  {
    "body" : "- Fix watchOS target",
    "createdAt" : "2021-06-02T10:10:50+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "MDc6UmVsZWFzZTQzOTQ0NzAz",
    "owner" : "kean",
    "publishedAt" : "2021-06-02T10:11:10+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.0.1",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.0.1",
    "version" : "10.0.1"
  },
  {
    "body" : "- Remove code deprecated in Nuke 9.4.1",
    "createdAt" : "2022-04-24T08:12:34+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "RE_kwDOAeh5z84D4jFo",
    "owner" : "kean",
    "publishedAt" : "2022-04-24T08:13:00+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.7.2",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.7.2",
    "version" : "10.7.2"
  },
  {
    "body" : "- Add async/await support (requires Xcode 13.3) â€“ [#532](https://github.com/kean/Nuke/pull/532)\r\n\r\n```swift\r\nextension ImagePipeline {\r\n    public func loadImage(with request: ImageRequestConvertible) async throws -> ImageResponse\r\n    public func loadData(with request: ImageRequestConvertible) async throws -> (Data, URLResponse?)\r\n}\r\n\r\nextension FetchImage {\r\n    public func load(_ action: @escaping () async throws -> ImageResponse)\r\n}\r\n```",
    "createdAt" : "2022-04-24T23:55:45+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "RE_kwDOAeh5z84D4nAs",
    "owner" : "kean",
    "publishedAt" : "2022-04-24T23:58:31+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.8.0",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.8.0",
    "version" : "10.8.0"
  },
  {
    "body" : "- Rename recently added async/await `loadImage(with:)` method to `image(for:)`, and `loadData(with:)` to `data(for:)` (to match Apple naming convention)\r\n- Add `Sendable` conformance to some of the types",
    "createdAt" : "2022-05-02T00:42:44+09:00",
    "fetchedFromAPIAt" : "2022-05-02T09:46:01+09:00",
    "id" : "RE_kwDOAeh5z84D63K9",
    "owner" : "kean",
    "publishedAt" : "2022-05-02T00:43:26+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.9.0",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.9.0",
    "version" : "10.9.0"
  },
  {
    "body" : "\r\n- Improve image decompressiong performance on iOS 15 and tvOS 15 by using [preparingForDispaly()](https://developer.apple.com/documentation/uikit/uiimage/3750834-preparingfordisplay?language=o_5) (requires Xcode 13) - [#512](https://github.com/kean/Nuke/pull/512)\r\n- On iOS 15, tvOS 15, image decompressiong now preserves 8 bits per pixel for grayscale images - [#512](https://github.com/kean/Nuke/pull/512)\r\n- Adopt extended static member lookup ([SE-0299](https://github.com/apple/swift-evolution/blob/main/proposals/0299-extend-generic-static-member-lookup.md)) (requires Xcode 13) - [#513](https://github.com/kean/Nuke/pull/513)\r\n\r\n```swift\r\n// Before\r\nImageRequest(url: url, processors: [ImageProcessors.Resize(width: 320)])\r\n\r\n// After\r\nImageRequest(url: url, processors: [.resize(width: 320)])\r\n```\r\n\r\n- `ImageRequest` now takes a *non-optional* array of image processors in its initializers. This change is required to mitigate an Xcode issue where it won't suggest code-completion for [SE-0299](https://github.com/apple/swift-evolution/blob/main/proposals/0299-extend-generic-static-member-lookup.md) - [#513](https://github.com/kean/Nuke/pull/513)\r\n- Add `ImageDecoders.Video` (registered by default)",
    "createdAt" : "2021-10-24T03:22:48+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "RE_kwDOAeh5z84DGCtJ",
    "owner" : "kean",
    "publishedAt" : "2021-10-24T03:29:43+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.5.0",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.5.0",
    "version" : "10.5.0"
  },
  {
    "body" : "- Fix build for Catalyst",
    "createdAt" : "2021-10-24T06:03:59+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "RE_kwDOAeh5z84DGDS-",
    "owner" : "kean",
    "publishedAt" : "2021-10-24T06:04:31+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.5.1",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.5.1",
    "version" : "10.5.1"
  },
  {
    "body" : "- Revert `preparingForDisplay` changes made in [#512](https://github.com/kean/Nuke/pull/512)\r\n- Add URLSession & URLSessionDataTask descriptions - [#517](https://github.com/kean/Nuke/pull/517), thanks to [Stavros Schizas](https://github.com/sschizas)",
    "createdAt" : "2021-12-02T21:53:23+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "RE_kwDOAeh5z84DP303",
    "owner" : "kean",
    "publishedAt" : "2021-12-02T21:53:42+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.5.2",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.5.2",
    "version" : "10.5.2"
  },
  {
    "body" : "- Fix M4V support â€“ [#523](https://github.com/kean/Nuke/pull/523), thanks to [Son Changwoo](https://github.com/kor45cw)\r\n- Make `ImagePrefetcher` `didComplete` closure public â€“ [#528](https://github.com/kean/Nuke/pull/515), thanks to [Winston Du](https://github.com/winstondu)\r\n- Rename internal `didEnterBackground` selector - [#531](https://github.com/kean/Nuke/issues/531)",
    "createdAt" : "2022-01-24T23:48:43+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "RE_kwDOAeh5z84Dcox4",
    "owner" : "kean",
    "publishedAt" : "2022-01-25T00:01:50+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.7.0",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.7.0",
    "version" : "10.7.0"
  },
  {
    "body" : "- Fix intermittent SwiftUI crash in NukeUI/FetchImage on onDisappear called during dealloc",
    "createdAt" : "2022-01-28T06:47:58+09:00",
    "fetchedFromAPIAt" : "2022-04-28T05:24:51+09:00",
    "id" : "RE_kwDOAeh5z84Ddy2V",
    "owner" : "kean",
    "publishedAt" : "2022-01-28T06:48:30+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.7.1",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.7.1",
    "version" : "10.7.1"
  },
  {
    "body" : "- Remove APIs deprecated in Nuke 10.0\r\n- Increase minimum deployment targets to iOS 12.0, watchOS 5.0, macOS 10.14, tvOS 12.0",
    "createdAt" : "2022-05-22T02:06:50+09:00",
    "fetchedFromAPIAt" : "2022-05-22T09:45:39+09:00",
    "id" : "RE_kwDOAeh5z84EBVkx",
    "owner" : "kean",
    "publishedAt" : "2022-05-22T02:18:53+09:00",
    "repository" : "Nuke",
    "title" : "Nuke 10.10.0",
    "url" : "https://github.com/kean/Nuke/releases/tag/10.10.0",
    "version" : "10.10.0"
  }
]